# newdoc
# newpar
# sent_id = 1
# text = in abstract algebra, a '''boolean algebra''' or '''boolean lattice''' is a complemented distributive lattice.
1	in	in	ADP	E	_	3	case	_	_
2	abstract	abstract	ADP	E	_	1	fixed	_	_
3	algebra	algebra	X	SW	_	10	nmod	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	3	punct	_	_
5	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	det	_	_
6	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	algebra	algebra	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	10	punct	_	_
14	or	or	CCONJ	CC	_	27	cc	_	_
15	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
18	boolean	boolean	ADJ	A	Degree=Pos	19	amod	_	_
19	lattice	lattice	NOUN	S	Number=Sing	27	nmod	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	19	punct	_	_
23	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	27	cop	_	_
24	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	27	det	_	_
25	complemented	complemented	ADJ	A	Degree=Pos	27	amod	_	_
26	distributive	distributive	ADJ	A	Degree=Pos	27	amod	_	_
27	lattice	lattice	NOUN	S	Number=Sing	10	conj	_	SpaceAfter=No
28	.	.	PUNCT	FS	_	10	punct	_	_

# sent_id = 2
# text = this type of algebraic structure captures essential properties of both set operations and logic operations.
1	this	this	DET	DD	Number=Sing|PronType=Dem	2	det	_	_
2	type	type	NOUN	S	Number=Sing	6	nsubj	_	_
3	of	of	ADP	E	_	5	case	_	_
4	algebraic	algebraic	ADJ	A	Degree=Pos	5	amod	_	_
5	structure	structure	NOUN	S	Number=Sing	2	nmod	_	_
6	captures	capture	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
7	essential	essential	ADJ	A	Degree=Pos	8	amod	_	_
8	properties	property	NOUN	S	Number=Plur	6	obj	_	_
9	of	of	ADP	E	_	12	case	_	_
10	both	both	DET	DI	PronType=Ind	12	det	_	_
11	set	set	ADJ	A	Degree=Pos	12	amod	_	_
12	operations	operation	NOUN	S	Number=Plur	8	nmod	_	_
13	and	and	CCONJ	CC	_	15	cc	_	_
14	logic	logic	ADJ	A	Degree=Pos	15	amod	_	_
15	operations	operation	NOUN	S	Number=Plur	12	conj	_	SpaceAfter=No
16	.	.	PUNCT	FS	_	6	punct	_	_

# sent_id = 3
# text = a boolean algebra can be seen as a generalization of a power set algebra or a field of sets, or its elements can be viewed as generalized truth values.
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
2	boolean	boolean	ADJ	A	Degree=Pos	3	amod	_	_
3	algebra	algebra	NOUN	S	Number=Sing	6	nsubj:pass	_	_
4	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	be	be	AUX	VA	VerbForm=Inf	6	aux:pass	_	_
6	seen	see	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
7	as	as	ADP	E	_	9	case	_	_
8	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	9	det	_	_
9	generalization	generalization	NOUN	S	Number=Sing	6	obl	_	_
10	of	of	ADP	E	_	12	case	_	_
11	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	12	det	_	_
12	power	power	NOUN	S	Number=Sing	9	nmod	_	_
13	set	set	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	12	acl	_	_
14	algebra	algebra	DET	RI	Definite=Ind|Number=Sing|PronType=Art	13	obl	_	_
15	or	or	CCONJ	CC	_	17	cc	_	_
16	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	17	det	_	_
17	field	field	NOUN	S	Number=Sing	14	conj	_	_
18	of	of	ADP	E	_	19	case	_	_
19	sets	sets	NOUN	S	Number=Plur	17	nmod	_	SpaceAfter=No
20	,	,	PUNCT	FF	_	26	punct	_	_
21	or	or	CCONJ	CC	_	26	cc	_	_
22	its	its	DET	AP	Number=Sing|Poss=Yes|PronType=Prs	23	nmod:poss	_	_
23	elements	element	NOUN	S	Number=Plur	26	nsubj:pass	_	_
24	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	26	aux	_	_
25	be	be	AUX	VA	VerbForm=Inf	26	aux:pass	_	_
26	viewed	view	VERB	V	Tense=Past|VerbForm=Part	14	conj	_	_
27	as	as	ADP	E	_	30	case	_	_
28	generalized	generalized	ADJ	A	Degree=Pos	30	amod	_	_
29	truth	truth	NOUN	S	Number=Sing	30	nmod	_	_
30	values	value	NOUN	S	Number=Plur	26	obl	_	SpaceAfter=No
31	.	.	PUNCT	FS	_	6	punct	_	_

# sent_id = 4
# text = it is also a special case of a de morgan algebra and a kleene algebra (with involution).
1	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	6	nsubj	_	_
2	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
3	also	also	ADV	B	_	6	advmod	_	_
4	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	6	det	_	_
5	special	special	ADJ	A	Degree=Pos	6	amod	_	_
6	case	case	NOUN	S	Number=Sing	0	root	_	_
7	of	of	ADP	E	_	11	case	_	_
8	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	11	det	_	_
9	de	de	ADJ	A	Degree=Pos	11	amod	_	_
10	morgan	morgan	ADJ	A	Degree=Pos	11	amod	_	_
11	algebra	algebra	NOUN	S	Number=Plur	6	nmod	_	_
12	and	and	CCONJ	CC	_	14	cc	_	_
13	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	14	det	_	_
14	kleene	kleene	X	SW	Foreign=Yes	11	conj	_	_
15	algebra	algebra	X	SW	Foreign=Yes	14	flat:foreign	_	_
16	(	(	PUNCT	FB	_	18	punct	_	SpaceAfter=No
17	with	with	ADP	E	_	18	case	_	_
18	involution	involution	NOUN	S	Number=Sing	14	appos	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	18	punct	_	SpaceAfter=No
20	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 5
# text = every boolean algebra gives rise to a boolean ring, and vice versa, with ring multiplication corresponding to conjunction or meet ∧, and ring addition to exclusive disjunction or symmetric difference (not disjunction ∨).
1	every	every	DET	DI	Number=Sing|PronType=Ind	2	det	_	_
2	boolean	boolean	NOUN	S	Number=Sing	4	nsubj	_	_
3	algebra	algebra	X	SW	_	4	nsubj	_	_
4	gives	give	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	rise	rise	NOUN	S	Number=Sing	4	obj	_	_
6	to	to	ADP	E	_	9	case	_	_
7	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	9	det	_	_
8	boolean	boolean	ADJ	A	Degree=Pos	9	amod	_	_
9	ring	ring	NOUN	S	Number=Sing	4	obl	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	12	punct	_	_
11	and	and	CCONJ	CC	_	12	cc	_	_
12	vice	vice	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	4	conj	_	_
13	versa	versa	NOUN	S	Number=Plur	12	obj	_	SpaceAfter=No
14	,	,	PUNCT	FF	_	12	punct	_	_
15	with	with	ADP	E	_	16	mark	_	_
16	ring	r	VERB	V	VerbForm=Ger	12	advcl	_	_
17	multiplication	multiplication	NOUN	S	Number=Sing	16	obj	_	_
18	corresponding	correspond	VERB	V	VerbForm=Ger	16	conj	_	_
19	to	to	ADP	E	_	20	case	_	_
20	conjunction	conjunction	NOUN	S	Number=Sing	23	nmod	_	_
21	or	or	CCONJ	CC	_	22	cc	_	_
22	meet	moot	NOUN	S	Number=Sing	20	conj	_	_
23	∧	∧	SYM	X	_	18	obj	_	SpaceAfter=No
24	,	,	PUNCT	FF	_	26	punct	_	_
25	and	and	CCONJ	CC	_	26	cc	_	_
26	ring	r	VERB	V	VerbForm=Ger	16	conj	_	_
27	addition	addition	NOUN	S	Number=Sing	26	obj	_	_
28	to	to	ADP	E	_	30	case	_	_
29	exclusive	exclusive	ADJ	A	Degree=Pos	30	amod	_	_
30	disjunction	disjunction	NOUN	S	Number=Sing	26	obl	_	_
31	or	or	CCONJ	CC	_	33	cc	_	_
32	symmetric	symmetric	ADJ	A	Degree=Pos	33	amod	_	_
33	difference	difference	NOUN	S	Number=Sing	30	conj	_	_
34	(	(	PUNCT	FB	_	37	punct	_	SpaceAfter=No
35	not	not	PART	PART	Polarity=Neg	36	advmod	_	_
36	disjunction	disjunction	NOUN	S	Number=Sing	37	nmod	_	_
37	∨	∨	SYM	X	_	30	appos	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	37	punct	_	SpaceAfter=No
39	.	.	PUNCT	FS	_	4	punct	_	_

# sent_id = 6
# text = however, the theory of boolean rings has an inherent asymmetry between the two operators, while the axioms and theorems of boolean algebra express the symmetry of the theory described by the duality principle.
1	however	however	ADV	B	_	8	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	theory	theory	NOUN	S	Number=Sing	8	nsubj	_	_
5	of	of	ADP	E	_	7	case	_	_
6	boolean	boolean	ADJ	A	Degree=Pos	7	amod	_	_
7	rings	ring	NOUN	S	Number=Plur	4	nmod	_	_
8	has	have	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
9	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	11	det	_	_
10	inherent	inherent	ADJ	A	Degree=Pos	11	amod	_	_
11	asymmetry	asymmetry	NOUN	S	Number=Sing	8	obj	_	_
12	between	between	ADP	E	_	15	case	_	_
13	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
14	two	two	NUM	N	NumType=Card	15	nummod	_	_
15	operators	operator	NOUN	S	Number=Plur	11	nmod	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	8	punct	_	_
17	while	while	SCONJ	CS	_	25	mark	_	_
18	the	the	DET	RD	Definite=Def|PronType=Art	19	det	_	_
19	axioms	axiom	NOUN	S	Number=Plur	25	nsubj	_	_
20	and	and	CCONJ	CC	_	21	cc	_	_
21	theorems	theorem	NOUN	S	Number=Plur	19	conj	_	_
22	of	of	ADP	E	_	24	case	_	_
23	boolean	boolean	ADJ	A	Degree=Pos	24	amod	_	_
24	algebra	algebra	NOUN	S	Number=Plur	21	nmod	_	_
25	express	express	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	8	advcl	_	_
26	the	the	DET	RD	Definite=Def|PronType=Art	27	det	_	_
27	symmetry	symmetry	NOUN	S	Number=Sing	25	obj	_	_
28	of	of	ADP	E	_	30	case	_	_
29	the	the	DET	RD	Definite=Def|PronType=Art	30	det	_	_
30	theory	theory	NOUN	S	Number=Sing	27	nmod	_	_
31	described	describe	VERB	V	Tense=Past|VerbForm=Part	30	acl	_	_
32	by	by	ADP	E	_	35	case	_	_
33	the	the	DET	RD	Definite=Def|PronType=Art	35	det	_	_
34	duality	duality	NOUN	S	Number=Sing	35	nmod	_	_
35	principle	principle	NOUN	S	Number=Sing	31	obl	_	SpaceAfter=No
36	.	.	PUNCT	FS	_	8	punct	_	SpacesAfter=\n

# sent_id = 7
# text = boolean lattice of subsets __toc__
1	boolean	boolean	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	lattice	lattice	NOUN	S	Number=Sing	0	root	_	_
3	of	of	ADP	E	_	5	case	_	_
4	subsets	subset	DET	AP	Number=Sing|Poss=Yes|PronType=Prs	5	nmod:poss	_	SpacesAfter=\n
5	__toc__	__toc__	NOUN	S	Number=Sing	2	nmod	_	SpacesAfter=\n\n

# newpar
# sent_id = 8
# text = == history ==
1	==	==	SYM	X	_	3	nmod	_	_
2	history	history	NOUN	S	Number=Sing	3	nmod	_	_
3	==	==	SYM	X	_	0	root	_	SpacesAfter=\s\s\n\n

# newpar
# sent_id = 9
# text = the term "boolean algebra" honors george boole (1815–1864), a self-educated english mathematician.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	term	term	NOUN	S	Number=Sing	7	nsubj	_	_
3	"	"	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	boolean	boolean	ADJ	A	Degree=Pos	5	amod	_	_
5	algebra	algebra	X	SW	_	2	nmod	_	SpaceAfter=No
6	"	"	PUNCT	FB	_	5	punct	_	_
7	honors	honor	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
8	george	george	ADJ	A	Degree=Pos	9	amod	_	_
9	boole	boole	NOUN	S	Number=Sing	7	obj	_	_
10	(	(	PUNCT	FB	_	11	punct	_	SpaceAfter=No
11	1815	1815	NUM	N	NumType=Card	9	nummod	_	SpaceAfter=No
12	–	–	PUNCT	FF	_	11	punct	_	SpaceAfter=No
13	1864	1864	NUM	N	NumType=Card	11	nummod	_	SpaceAfter=No
14	)	)	PUNCT	FB	_	11	punct	_	SpaceAfter=No
15	,	,	PUNCT	FF	_	7	punct	_	_
16	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	21	det	_	_
17	self	self	ADJ	A	Degree=Pos	19	amod	_	SpaceAfter=No
18	-	-	PUNCT	FF	_	19	punct	_	SpaceAfter=No
19	educated	educate	VERB	V	Tense=Past|VerbForm=Part	21	acl	_	_
20	english	english	ADJ	A	Degree=Pos	21	amod	_	_
21	mathematician	mathematician	NOUN	S	Number=Sing	7	appos	_	SpaceAfter=No
22	.	.	PUNCT	FS	_	7	punct	_	_

# sent_id = 10
# text = he introduced the algebraic system initially in a small pamphlet, ''the mathematical analysis of logic'', published in 1847 in response to an ongoing public controversy between augustus de morgan and william hamilton, and later as a more substantial book, ''the laws of thought'', published in 1854.
1	he	he	PRON	PE	Gender=Masc|Number=Sing|Person=3|PronType=Prs	2	nsubj	_	_
2	introduced	introduce	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
4	algebraic	algebraic	ADJ	A	Degree=Pos	5	amod	_	_
5	system	system	NOUN	S	Number=Sing	2	obj	_	_
6	initially	initially	ADV	B	_	2	advmod	_	_
7	in	in	ADP	E	_	10	case	_	_
8	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	det	_	_
9	small	small	ADJ	A	Degree=Pos	10	amod	_	_
10	pamphlet	pamphlet	NOUN	S	Number=Sing	2	obl	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	2	punct	_	_
12	'	'	PART	PART	_	13	mark	_	SpaceAfter=No
13	'the	'the	VERB	V	VerbForm=Inf	2	advcl	_	_
14	mathematical	mathematical	ADJ	A	Degree=Pos	15	amod	_	_
15	analysis	analysis	NOUN	S	Number=Sing	13	obj	_	_
16	of	of	ADP	E	_	17	case	_	_
17	logic	logic	NOUN	S	Number=Sing	15	nmod	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	,	,	PUNCT	FF	_	13	punct	_	_
21	published	publish	VERB	V	Tense=Past|VerbForm=Part	13	conj	_	_
22	in	in	ADP	E	_	23	case	_	_
23	1847	1847	NUM	N	NumType=Card	21	obl	_	_
24	in	in	ADP	E	_	25	case	_	_
25	response	response	NOUN	S	Number=Sing	21	obl	_	_
26	to	to	ADP	E	_	30	case	_	_
27	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	30	det	_	_
28	ongoing	ongoing	ADJ	A	Degree=Pos	30	amod	_	_
29	public	public	ADJ	A	Degree=Pos	30	amod	_	_
30	controversy	controversy	NOUN	S	Number=Sing	25	nmod	_	_
31	between	between	ADP	E	_	34	case	_	_
32	augustus	augustus	DET	DI	PronType=Ind	34	det	_	_
33	de	de	ADJ	A	Degree=Pos	34	amod	_	_
34	morgan	morgan	NOUN	S	Number=Sing	30	nmod	_	_
35	and	and	CCONJ	CC	_	37	cc	_	_
36	william	willibe	NOUN	S	Number=Sing	37	nmod	_	_
37	hamilton	hamilton	NOUN	S	Number=Sing	34	conj	_	SpaceAfter=No
38	,	,	PUNCT	FF	_	40	punct	_	_
39	and	and	CCONJ	CC	_	40	cc	_	_
40	later	later	ADJ	A	Degree=Cmp	25	conj	_	_
41	as	as	ADP	E	_	45	case	_	_
42	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	45	det	_	_
43	more	more	ADV	B	Degree=Cmp	44	advmod	_	_
44	substantial	substantial	ADJ	A	Degree=Pos	45	amod	_	_
45	book	book	NOUN	S	Number=Sing	21	obl	_	SpaceAfter=No
46	,	,	PUNCT	FF	_	2	punct	_	_
47	'	'	PART	PART	_	48	mark	_	SpaceAfter=No
48	'the	'the	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	2	advcl	_	_
49	laws	law	NOUN	S	Number=Plur	48	obj	_	_
50	of	of	ADP	E	_	51	case	_	_
51	thought	thought	NOUN	S	Number=Sing	49	nmod	_	SpaceAfter=No
52	'	'	PUNCT	FB	_	51	punct	_	SpaceAfter=No
53	'	'	PUNCT	FB	_	51	punct	_	SpaceAfter=No
54	,	,	PUNCT	FF	_	51	punct	_	_
55	published	publish	VERB	V	Tense=Past|VerbForm=Part	51	acl	_	_
56	in	in	ADP	E	_	57	case	_	_
57	1854	1854	NUM	N	NumType=Card	55	obl	_	SpaceAfter=No
58	.	.	PUNCT	FS	_	2	punct	_	_

# sent_id = 11
# text = boole's formulation differs from that described above in some important respects.
1	boole	boole	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
2	's	's	PART	PART	_	1	case	_	_
3	formulation	formulation	NOUN	S	Number=Sing	4	nsubj	_	_
4	differs	differ	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	from	from	ADP	E	_	7	mark	_	_
6	that	that	SCONJ	CS	_	5	fixed	_	_
7	described	describe	VERB	V	Tense=Past|VerbForm=Part	4	advcl	_	_
8	above	above	ADP	E	_	12	case	_	_
9	in	in	ADP	E	_	12	case	_	_
10	some	some	DET	DI	PronType=Ind	12	det	_	_
11	important	important	ADJ	A	Degree=Pos	12	amod	_	_
12	respects	respect	NOUN	S	Number=Plur	7	obl	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	4	punct	_	_

# sent_id = 12
# text = for example, conjunction and disjunction in boole were not a dual pair of operations.
1	for	for	ADP	E	_	2	case	_	_
2	example	example	NOUN	S	Number=Sing	4	nmod	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	2	punct	_	_
4	conjunction	conjunction	NOUN	S	Number=Sing	13	nsubj	_	_
5	and	and	CCONJ	CC	_	6	cc	_	_
6	disjunction	disjunction	NOUN	S	Number=Sing	4	conj	_	_
7	in	in	ADP	E	_	8	case	_	_
8	boole	boole	NOUN	S	Number=Sing	4	nmod	_	_
9	were	be	AUX	V	Mood=Ind|Number=Plur|Tense=Past|VerbForm=Fin	13	cop	_	_
10	not	not	PART	PART	Polarity=Neg	13	advmod	_	_
11	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	13	det	_	_
12	dual	du	ADJ	A	Degree=Pos	13	amod	_	_
13	pair	pair	NOUN	S	Number=Sing	0	root	_	_
14	of	of	ADP	E	_	15	case	_	_
15	operations	operations	NOUN	S	Number=Plur	13	nmod	_	SpaceAfter=No
16	.	.	PUNCT	FS	_	13	punct	_	_

# sent_id = 13
# text = boolean algebra emerged in the 1860s, in papers written by william jevons and charles sanders peirce.
1	boolean	boolean	ADJ	A	Degree=Pos	2	amod	_	_
2	algebra	algebra	NOUN	S	Number=Plur	3	nsubj	_	_
3	emerged	emerge	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
4	in	in	ADP	E	_	6	case	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
6	1860	1860	NUM	N	NumType=Card	3	obl	_	SpaceAfter=No
7	s	s	X	X	_	6	dep	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	3	punct	_	_
9	in	in	ADP	E	_	10	case	_	_
10	papers	paper	NOUN	S	Number=Plur	3	obl	_	_
11	written	write	VERB	V	Tense=Past|VerbForm=Part	10	acl	_	_
12	by	by	ADP	E	_	14	case	_	_
13	william	william	ADJ	A	Degree=Pos	14	amod	_	_
14	jevons	jevon	NOUN	S	Number=Plur	11	obl	_	_
15	and	and	CCONJ	CC	_	18	cc	_	_
16	charles	charle	NOUN	S	Number=Plur	18	nmod	_	_
17	sanders	sander	ADJ	A	Degree=Pos	18	amod	_	_
18	peirce	peirce	NOUN	S	Number=Sing	14	conj	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	3	punct	_	_

# sent_id = 14
# text = the first systematic presentation of boolean algebra and distributive lattices is owed to the 1890 ''vorlesungen'' of ernst schröder.
1	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	first	first	ADJ	NO	Degree=Pos|NumType=Ord	4	amod	_	_
3	systematic	systematic	ADJ	A	Degree=Pos	4	amod	_	_
4	presentation	presentation	NOUN	S	Number=Sing	12	nsubj:pass	_	_
5	of	of	ADP	E	_	7	case	_	_
6	boolean	boolean	ADJ	A	Degree=Pos	7	amod	_	_
7	algebra	algebra	NOUN	S	Number=Sing	4	nmod	_	_
8	and	and	CCONJ	CC	_	10	cc	_	_
9	distributive	distributive	ADJ	A	Degree=Pos	10	amod	_	_
10	lattices	lattice	NOUN	S	Number=Plur	7	conj	_	_
11	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	aux:pass	_	_
12	owed	owe	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
13	to	to	ADP	E	_	18	case	_	_
14	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
15	1890	1890	NUM	N	NumType=Card	18	nummod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'	'	PART	PART	_	15	case	_	SpaceAfter=No
18	vorlesungen	vorlesungen	NOUN	S	Number=Sing	12	obl	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	SpaceAfter=No
20	'	'	PART	PART	_	18	case	_	_
21	of	of	ADP	E	_	23	case	_	_
22	ernst	ernst	ADJ	NO	Degree=Pos|NumType=Ord	23	amod	_	_
23	schröder	schröder	NOUN	S	Number=Sing	18	nmod	_	SpaceAfter=No
24	.	.	PUNCT	FS	_	12	punct	_	_

# sent_id = 15
# text = the first extensive treatment of boolean algebra in english is a.
1	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	first	first	ADJ	NO	Degree=Pos|NumType=Ord	4	amod	_	_
3	extensive	extensive	ADJ	A	Degree=Pos	4	amod	_	_
4	treatment	treatment	NOUN	S	Number=Sing	11	nsubj	_	_
5	of	of	ADP	E	_	7	case	_	_
6	boolean	boolean	ADJ	A	Degree=Pos	7	amod	_	_
7	algebra	algebra	NOUN	S	Number=Plur	4	nmod	_	_
8	in	in	ADP	E	_	9	case	_	_
9	english	english	NOUN	S	Number=Sing	4	nmod	_	_
10	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	cop	_	_
11	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	11	punct	_	_

# sent_id = 16
# text = n. whitehead's 1898 ''universal algebra''.
1	n	n	ADV	B	_	3	advmod	_	SpaceAfter=No
2	.	.	PUNCT	FS	_	1	punct	_	_
3	whitehead	whitehead	VERB	V	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
4	's	be	PART	PART	_	3	case	_	_
5	1898	1898	NUM	N	NumType=Card	9	nummod	_	_
6	'	'	PUNCT	FF	_	5	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	5	case	_	SpaceAfter=No
8	universal	universal	ADJ	A	Degree=Pos	9	amod	_	_
9	algebra	algebra	NOUN	S	Number=Sing	3	obj	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	3	punct	_	_

# sent_id = 17
# text = boolean algebra as an axiomatic algebraic structure in the modern axiomatic sense begins with a 1904 paper by edward v. huntington.
1	boolean	boolean	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	algebra	algebra	NOUN	S	Number=Sing	13	nsubj	_	_
3	as	as	ADP	E	_	7	case	_	_
4	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	7	det	_	_
5	axiomatic	axiomatic	ADJ	A	Degree=Pos	7	amod	_	_
6	algebraic	algebraic	ADJ	A	Degree=Pos	7	amod	_	_
7	structure	structure	NOUN	S	Number=Sing	2	nmod	_	_
8	in	in	ADP	E	_	12	case	_	_
9	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
10	modern	modern	ADJ	A	Degree=Pos	12	amod	_	_
11	axiomatic	axiomatic	ADJ	A	Degree=Pos	12	amod	_	_
12	sense	sense	NOUN	S	Number=Sing	2	nmod	_	_
13	begins	begin	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
14	with	with	ADP	E	_	17	case	_	_
15	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	17	det	_	_
16	1904	1904	NUM	N	NumType=Card	17	nummod	_	_
17	paper	paper	NOUN	S	Number=Sing	13	obl	_	_
18	by	by	ADP	E	_	22	case	_	_
19	edward	edward	ADJ	A	Degree=Pos	22	amod	_	_
20	v	fifth	ADJ	NO	Degree=Pos|NumType=Ord	22	amod	_	SpaceAfter=No
21	.	.	PUNCT	FS	_	22	punct	_	_
22	huntington	huntington	NOUN	S	Number=Sing	17	nmod	_	SpaceAfter=No
23	.	.	PUNCT	FS	_	13	punct	_	_

# sent_id = 18
# text = boolean algebra came of age as serious mathematics with the work of marshall stone in the 1930s, and with garrett birkhoff's 1940 ''lattice theory''.
1	boolean	boolean	SCONJ	CS	_	3	mark	_	_
2	algebra	algebra	DET	RI	Definite=Ind|PronType=Art	3	det	_	_
3	came	come	NOUN	S	Number=Sing	0	root	_	_
4	of	of	ADP	E	_	5	case	_	_
5	age	age	NOUN	S	Number=Sing	3	nmod	_	_
6	as	as	ADP	E	_	8	case	_	_
7	serious	serious	ADJ	A	Degree=Pos	8	amod	_	_
8	mathematics	mathematics	NOUN	S	Number=Sing	5	nmod	_	_
9	with	with	ADP	E	_	11	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	11	det	_	_
11	work	work	NOUN	S	Number=Sing	8	nmod	_	_
12	of	of	ADP	E	_	14	case	_	_
13	marshall	marshall	DET	T	PronType=Tot	14	det	_	_
14	stone	stone	NOUN	S	Number=Sing	11	nmod	_	_
15	in	in	ADP	E	_	17	case	_	_
16	the	the	DET	RD	Definite=Def|PronType=Art	17	det	_	_
17	1930	1930	NUM	N	NumType=Card	3	nummod	_	SpaceAfter=No
18	s	s	X	X	_	17	dep	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	3	punct	_	_
20	and	and	CCONJ	CC	_	29	cc	_	_
21	with	with	ADP	E	_	29	case	_	_
22	garrett	garrett	ADJ	A	Degree=Sup	23	amod	_	_
23	birkhoff	birkhoff	NOUN	S	Gender=Masc|Number=Sing	25	nmod	_	SpaceAfter=No
24	's	's	PART	PART	_	23	case	_	_
25	1940	1940	NUM	N	NumType=Card	29	nummod	_	_
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'	'	PART	PART	_	25	case	_	SpaceAfter=No
28	lattice	lattice	ADJ	A	Degree=Pos	29	amod	_	_
29	theory	theory	NOUN	S	Number=Sing	3	conj	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
32	.	.	PUNCT	FS	_	3	punct	_	_

# sent_id = 19
# text = in the 1960s, paul cohen, dana scott, and others found deep new results in mathematical logic and axiomatic set theory using offshoots of boolean algebra, namely forcing and boolean-valued models.
1	in	in	ADP	E	_	3	case	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	1960	1960	NUM	N	NumType=Card	7	nummod	_	SpaceAfter=No
4	s	s	X	X	_	3	dep	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	3	punct	_	_
6	paul	paul	ADJ	A	Degree=Pos	7	amod	_	_
7	cohen	cohen	NOUN	S	Gender=Masc|Number=Plur	23	nsubj	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	10	punct	_	_
9	dana	dana	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	det	_	_
10	scott	scott	NOUN	S	Number=Sing	7	conj	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	14	punct	_	_
12	and	and	CCONJ	CC	_	14	cc	_	_
13	others	other	PRON	PI	Number=Plur|PronType=Ind	14	nsubj	_	_
14	found	find	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	7	conj	_	_
15	deep	deep	ADJ	A	Degree=Pos	17	amod	_	_
16	new	new	ADJ	A	Degree=Pos	17	amod	_	_
17	results	result	NOUN	S	Number=Plur	14	obj	_	_
18	in	in	ADP	E	_	20	case	_	_
19	mathematical	mathematical	ADJ	A	Degree=Pos	20	amod	_	_
20	logic	logic	ADJ	A	Degree=Pos	14	obl	_	_
21	and	and	CCONJ	CC	_	22	cc	_	_
22	axiomatic	axiomatic	ADJ	A	Degree=Pos	20	conj	_	_
23	set	set	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
24	theory	theory	ADV	B	_	23	advmod	_	_
25	using	use	VERB	V	VerbForm=Ger	23	advcl	_	_
26	offshoots	offshoot	NOUN	S	Number=Plur	25	obj	_	_
27	of	of	ADP	E	_	29	case	_	_
28	boolean	boolean	ADJ	A	Degree=Pos	29	amod	_	_
29	algebra	algebra	NOUN	S	Number=Plur	26	nmod	_	SpaceAfter=No
30	,	,	PUNCT	FF	_	32	punct	_	_
31	namely	namely	ADV	B	_	32	advmod	_	_
32	forcing	force	VERB	V	VerbForm=Ger	25	conj	_	_
33	and	and	CCONJ	CC	_	37	cc	_	_
34	boolean	boolean	ADJ	A	Degree=Pos	37	amod	_	SpaceAfter=No
35	-	-	PUNCT	FF	_	36	punct	_	SpaceAfter=No
36	valued	value	ADJ	A	Degree=Pos	37	amod	_	_
37	models	model	NOUN	S	Number=Plur	32	conj	_	SpaceAfter=No
38	.	.	PUNCT	FS	_	23	punct	_	SpacesAfter=\n\s\n

# newpar
# sent_id = 20
# text = a '''boolean algebra''' is a six-tuple consisting of a set ''a'', equipped with two binary operations ∧ (called "meet" or "and"), ∨ (called "join" or "or"), a unary operation ¬ (called "complement" or "not") and two elements 0 and 1 in ''a'' (called "bottom" and "top", or "least" and "greatest" element, also denoted by the symbols ⊥ and ⊤, respectively), such that for all elements ''a'', ''b'' and ''c'' of ''a'', the following axioms hold:
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	6	det	_	_
2	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	algebra	algebra	NOUN	S	Number=Sing	14	nsubj	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	6	punct	_	_
10	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	_
11	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	14	det	_	_
12	six	six	NUM	N	NumType=Card	14	nummod	_	SpaceAfter=No
13	-	-	PUNCT	FF	_	14	punct	_	SpaceAfter=No
14	tuple	tuple	NOUN	S	Number=Sing	0	root	_	_
15	consisting	consist	VERB	V	Person=3|VerbForm=Ger	14	acl	_	_
16	of	of	ADP	E	_	20	case	_	_
17	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	18	det	_	_
18	set	set	NOUN	S	Number=Sing	20	nmod	_	_
19	'	'	PART	PART	_	18	case	_	SpaceAfter=No
20	'a	'a	NOUN	S	Number=Sing	15	obl	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
23	,	,	PUNCT	FF	_	14	punct	_	_
24	equipped	equip	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	14	acl	_	_
25	with	with	ADP	E	_	28	case	_	_
26	two	two	NUM	N	NumType=Card	28	nummod	_	_
27	binary	binary	ADJ	A	Degree=Pos	28	amod	_	_
28	operations	operation	NOUN	S	Number=Plur	24	obl	_	_
29	∧	∧	SYM	X	_	31	mark	_	_
30	(	(	PUNCT	FB	_	31	punct	_	SpaceAfter=No
31	called	call	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	28	acl	_	_
32	"	"	PUNCT	FB	_	33	punct	_	SpaceAfter=No
33	meet	meet	NOUN	S	Gender=Masc|Number=Plur	31	obl	_	SpaceAfter=No
34	"	"	PUNCT	FB	_	33	punct	_	_
35	or	or	CCONJ	CC	_	41	cc	_	_
36	"	"	PUNCT	FB	_	39	punct	_	SpaceAfter=No
37	and	and	CCONJ	CC	_	39	cc	_	SpaceAfter=No
38	"	"	PUNCT	FB	_	39	punct	_	SpaceAfter=No
39	)	)	PUNCT	FB	_	41	punct	_	SpaceAfter=No
40	,	,	PUNCT	FF	_	39	punct	_	_
41	∨	∨	SYM	X	_	33	conj	_	_
42	(	(	PUNCT	FB	_	43	punct	_	SpaceAfter=No
43	called	call	VERB	V	Tense=Past|VerbForm=Part	41	acl	_	_
44	"	"	PUNCT	FB	_	45	punct	_	SpaceAfter=No
45	join	join	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	43	parataxis	_	SpaceAfter=No
46	"	"	PUNCT	FB	_	45	punct	_	_
47	or	or	CCONJ	CC	_	51	cc	_	_
48	"	"	PUNCT	FB	_	51	punct	_	SpaceAfter=No
49	or	or	CCONJ	CC	_	51	cc	_	SpaceAfter=No
50	"	"	PUNCT	FB	_	51	punct	_	SpaceAfter=No
51	)	)	PUNCT	FB	_	45	punct	_	SpaceAfter=No
52	,	,	PUNCT	FF	_	43	punct	_	_
53	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	55	det	_	_
54	unary	unary	ADJ	A	Degree=Pos	55	amod	_	_
55	operation	operation	NOUN	S	Number=Sing	56	obl	_	_
56	¬	¬	SYM	X	_	43	obl	_	_
57	(	(	PUNCT	FB	_	58	punct	_	SpaceAfter=No
58	called	call	VERB	V	Tense=Past|VerbForm=Part	56	acl	_	_
59	"	"	PUNCT	FB	_	60	punct	_	SpaceAfter=No
60	complement	complement	NOUN	S	Number=Sing	58	obl	_	SpaceAfter=No
61	"	"	PUNCT	FB	_	60	punct	_	_
62	or	or	CCONJ	CC	_	64	cc	_	_
63	"	"	PUNCT	FB	_	64	punct	_	SpaceAfter=No
64	not	not	PART	PART	Polarity=Neg	60	conj	_	SpaceAfter=No
65	"	"	PUNCT	FB	_	64	punct	_	SpaceAfter=No
66	)	)	PUNCT	FB	_	64	punct	_	_
67	and	and	CCONJ	CC	_	69	cc	_	_
68	two	two	NUM	N	NumType=Card	69	nummod	_	_
69	elements	element	NOUN	S	Number=Plur	60	conj	_	_
70	0	0	NUM	N	NumType=Card	69	nummod	_	_
71	and	and	CCONJ	CC	_	72	cc	_	_
72	1	1	NUM	N	NumType=Card	70	conj	_	_
73	in	in	ADP	E	_	79	mark	_	_
74	'	'	PART	PART	_	73	case	_	SpaceAfter=No
75	'a	'a	NOUN	S	Number=Sing	79	obl	_	SpaceAfter=No
76	'	'	PUNCT	FB	_	75	punct	_	SpaceAfter=No
77	'	'	PUNCT	FB	_	75	punct	_	_
78	(	(	PUNCT	FB	_	79	punct	_	SpaceAfter=No
79	called	call	VERB	V	Tense=Past|VerbForm=Part	60	acl	_	_
80	"	"	PUNCT	FB	_	81	punct	_	SpaceAfter=No
81	bottom	bottom	ADP	E	_	111	case	_	SpaceAfter=No
82	"	"	PUNCT	FB	_	81	punct	_	_
83	and	and	CCONJ	CC	_	85	cc	_	_
84	"	"	PUNCT	FB	_	85	punct	_	SpaceAfter=No
85	top	top	ADJ	A	Degree=Pos	81	conj	_	SpaceAfter=No
86	"	"	PUNCT	FB	_	85	punct	_	SpaceAfter=No
87	,	,	PUNCT	FF	_	99	punct	_	_
88	or	or	CCONJ	CC	_	99	cc	_	_
89	"	"	PUNCT	FB	_	90	punct	_	SpaceAfter=No
90	least	least	ADV	B	Degree=Sup	99	advmod	_	SpaceAfter=No
91	"	"	PUNCT	FB	_	90	punct	_	_
92	and	and	CCONJ	CC	_	96	cc	_	_
93	"	"	PUNCT	FB	_	94	punct	_	SpaceAfter=No
94	greatest	greatest	ADJ	A	Degree=Sup	96	amod	_	SpaceAfter=No
95	"	"	PUNCT	FB	_	94	punct	_	_
96	element	element	NOUN	S	Number=Sing	90	conj	_	SpaceAfter=No
97	,	,	PUNCT	FF	_	90	punct	_	_
98	also	also	ADV	B	_	99	advmod	_	_
99	denoted	denote	VERB	V	Tense=Past|VerbForm=Part	81	conj	_	_
100	by	by	ADP	E	_	102	case	_	_
101	the	the	DET	RD	Definite=Def|PronType=Art	102	det	_	_
102	symbols	symbol	NOUN	S	Number=Plur	99	obl	_	_
103	⊥	⊥	SYM	X	_	102	conj	_	_
104	and	and	CCONJ	CC	_	105	cc	_	_
105	⊤	⊤	SYM	X	_	103	conj	_	SpaceAfter=No
106	,	,	PUNCT	FF	_	103	punct	_	_
107	respectively	respectively	ADV	B	_	103	advmod	_	SpaceAfter=No
108	)	)	PUNCT	FB	_	103	punct	_	SpaceAfter=No
109	,	,	PUNCT	FF	_	81	punct	_	_
110	such	such	DET	DD	PronType=Dem	111	det	_	_
111	that	that	PRON	PR	PronType=Rel	79	obl	_	_
112	for	for	ADP	E	_	116	case	_	_
113	all	all	DET	T	PronType=Tot	114	det	_	_
114	elements	element	NOUN	S	Number=Plur	116	nmod	_	_
115	'	'	PART	PART	_	114	case	_	SpaceAfter=No
116	'a	'a	NOUN	S	Number=Plur	111	nmod	_	SpaceAfter=No
117	'	'	PART	PART	_	116	case	_	SpaceAfter=No
118	'	'	PART	PART	_	116	case	_	SpaceAfter=No
119	,	,	PUNCT	FF	_	79	punct	_	_
120	'	'	PART	PART	_	121	mark	_	SpaceAfter=No
121	'b	'b	VERB	V	VerbForm=Inf	79	xcomp	_	SpaceAfter=No
122	'	'	PART	PART	_	121	compound:prt	_	SpaceAfter=No
123	'	'	PART	PART	_	121	compound:prt	_	_
124	and	and	CCONJ	CC	_	126	cc	_	_
125	'	'	PART	PART	_	124	case	_	SpaceAfter=No
126	'c	'c	NOUN	S	Number=Sing	138	nsubj	_	SpaceAfter=No
127	'	'	PART	PART	_	126	case	_	SpaceAfter=No
128	'	'	PART	PART	_	126	case	_	_
129	of	of	ADP	E	_	137	case	_	_
130	'	'	PART	PART	_	129	case	_	SpaceAfter=No
131	'a	'a	NOUN	S	Number=Plur	137	nmod	_	SpaceAfter=No
132	'	'	PART	PART	_	131	case	_	SpaceAfter=No
133	'	'	PART	PART	_	131	case	_	SpaceAfter=No
134	,	,	PUNCT	FF	_	137	punct	_	_
135	the	the	DET	RD	Definite=Def|PronType=Art	137	det	_	_
136	following	following	ADJ	A	Degree=Pos	137	amod	_	_
137	axioms	axiom	NOUN	S	Number=Plur	126	nmod	_	_
138	hold	hold	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	121	advcl	_	SpaceAfter=No
139	:	:	PUNCT	FC	_	79	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 21
# text = ::
1	:	:	PUNCT	FC	_	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\n\n\n

# newpar
# sent_id = 22
# text = ''a'' ∨ (''b'' ∨ ''c'') = (''a'' ∨ ''b'') ∨ ''c''
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∨	∨	SYM	X	_	8	nsubj	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
9	'	'	PART	PART	_	11	mark	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	_
11	∨	∨	SYM	X	_	8	obj	_	_
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'c	'c	ADJ	A	Degree=Pos	11	amod	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	_
17	=	=	SYM	X	_	31	nmod	_	_
18	(	(	PUNCT	FB	_	25	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
20	'a	'a	PROPN	SP	_	23	nmod	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	_
23	∨	∨	SYM	X	_	25	nmod	_	_
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'b	'b	VERB	V	VerbForm=Inf	17	conj	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
28	)	)	PUNCT	FB	_	25	punct	_	_
29	∨	∨	SYM	X	_	31	nmod	_	_
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'c	'c	NOUN	S	Number=Sing	13	conj	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	11	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 23
# text = ''a'' ∧ (''b'' ∧ ''c'') = (''a'' ∧ ''b'') ∧ ''c''
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∧	∧	SYM	X	_	8	nsubj	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
9	'	'	PART	PART	_	11	mark	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	_
11	∧	∧	SYM	X	_	8	obj	_	_
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'c	'c	ADJ	A	Degree=Pos	11	amod	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	_
17	=	=	SYM	X	_	31	nmod	_	_
18	(	(	PUNCT	FB	_	25	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
20	'a	'a	PROPN	SP	_	23	nmod	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	_
23	∧	∧	SYM	X	_	25	nmod	_	_
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'b	'b	VERB	V	VerbForm=Inf	17	conj	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
28	)	)	PUNCT	FB	_	25	punct	_	_
29	∧	∧	SYM	X	_	31	nmod	_	_
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'c	'c	NOUN	S	Number=Sing	13	conj	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	11	punct	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 24
# text = associativity
1	associativity	associativity	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n

# newpar
# sent_id = 25
# text = ''a'' ∨ ''b'' = ''b'' ∨ ''a''
1	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	7	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∨	∨	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	12	mark	_	_
10	=	=	SYM	X	_	12	nmod	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'b	'b	VERB	V	VerbForm=Inf	7	xcomp	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	12	punct	_	_
15	∨	∨	SYM	X	_	17	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'a	'a	NOUN	S	Number=Plur	12	obj	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'	'	PART	PART	_	17	case	_	SpacesAfter=\n\n

# newpar
# sent_id = 26
# text = ''a'' ∧ ''b'' = ''b'' ∧ ''a''
1	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	7	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∧	∧	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	12	mark	_	_
10	=	=	SYM	X	_	12	nmod	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'b	'b	VERB	V	VerbForm=Inf	7	xcomp	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	12	punct	_	_
15	∧	∧	SYM	X	_	17	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'a	'a	NOUN	S	Number=Plur	12	obj	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'	'	PART	PART	_	17	case	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 27
# text = commutativity
1	commutativity	commutativity	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n

# newpar
# sent_id = 28
# text = ''a'' ∨ (''a'' ∧ ''b'') = ''a''
1	'	'	PART	PART	_	13	mark	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∨	∨	SYM	X	_	13	nsubj	_	_
6	(	(	PUNCT	FB	_	13	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'a	'a	PROPN	SP	_	11	nmod	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	_
11	∧	∧	SYM	X	_	13	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	_
17	=	=	SYM	X	_	19	nmod	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'a	'a	NOUN	S	Number=Plur	13	obj	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'	'	PART	PART	_	19	case	_	SpacesAfter=\n\n

# newpar
# sent_id = 29
# text = ''a'' ∧ (''a'' ∨ ''b'') = ''a''
1	'	'	PART	PART	_	13	mark	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∧	∧	SYM	X	_	13	nsubj	_	_
6	(	(	PUNCT	FB	_	13	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'a	'a	PROPN	SP	_	11	nmod	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	_
11	∨	∨	SYM	X	_	13	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	_
17	=	=	SYM	X	_	19	nmod	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'a	'a	NOUN	S	Number=Plur	13	obj	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'	'	PART	PART	_	19	case	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 30
# text = absorption
1	absorption	absorption	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n

# newpar
# sent_id = 31
# text = ''a'' ∨ 0 = ''a''
1	'	'	PART	PART	_	9	case	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	9	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	9	case	_	_
5	∨	∨	SYM	X	_	9	nmod	_	_
6	0	0	NUM	N	NumType=Card	7	nummod	_	_
7	=	=	SYM	X	_	9	nmod	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'a	'a	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	9	case	_	SpacesAfter=\n\n

# newpar
# sent_id = 32
# text = ''a'' ∧ 1 = ''a''
1	'	'	PART	PART	_	9	case	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	9	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∧	∧	SYM	X	_	9	nmod	_	_
6	1	1	NUM	N	NumType=Card	5	nummod	_	_
7	=	=	SYM	X	_	9	nmod	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'a	'a	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	9	case	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 33
# text = identity
1	identity	identity	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n

# newpar
# sent_id = 34
# text = ''a'' ∨ (''b'' ∧ ''c'') = (''a'' ∨ ''b'') ∧ (''a'' ∨ ''c'')
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∨	∨	SYM	X	_	8	nsubj	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
9	'	'	PART	PART	_	17	mark	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	_
11	∧	∧	SYM	X	_	17	nmod	_	_
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'c	'c	ADJ	A	Degree=Pos	17	amod	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	_
17	=	=	SYM	X	_	8	obj	_	_
18	(	(	PUNCT	FB	_	29	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
20	'a	'a	PROPN	SP	_	23	nmod	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	_
23	∨	∨	SYM	X	_	29	nmod	_	_
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'b	'b	VERB	V	VerbForm=Inf	29	acl	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
28	)	)	PUNCT	FB	_	25	punct	_	_
29	∧	∧	SYM	X	_	17	conj	_	_
30	(	(	PUNCT	FB	_	37	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
32	'a	'a	PROPN	SP	_	35	nmod	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	32	punct	_	_
35	∨	∨	SYM	X	_	37	nmod	_	_
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'c	'c	NOUN	S	Number=Sing	29	appos	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
40	)	)	PUNCT	FB	_	37	punct	_	SpacesAfter=  \n\n

# newpar
# sent_id = 35
# text = ''a'' ∧ (''b'' ∨ ''c'') = (''a'' ∧ ''b'') ∨ (''a'' ∧ ''c'')
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∧	∧	SYM	X	_	8	nsubj	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
9	'	'	PART	PART	_	17	mark	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	_
11	∨	∨	SYM	X	_	17	nmod	_	_
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'c	'c	ADJ	A	Degree=Pos	17	amod	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	_
17	=	=	SYM	X	_	8	obj	_	_
18	(	(	PUNCT	FB	_	29	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
20	'a	'a	PROPN	SP	_	23	nmod	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	_
23	∧	∧	SYM	X	_	29	nmod	_	_
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'b	'b	VERB	V	VerbForm=Inf	29	acl	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
28	)	)	PUNCT	FB	_	25	punct	_	_
29	∨	∨	SYM	X	_	17	conj	_	_
30	(	(	PUNCT	FB	_	37	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
32	'a	'a	PROPN	SP	_	35	nmod	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	32	punct	_	_
35	∧	∧	SYM	X	_	37	nmod	_	_
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'c	'c	NOUN	S	Number=Sing	29	appos	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
40	)	)	PUNCT	FB	_	37	punct	_	SpacesAfter=  \n\n\s

# newpar
# sent_id = 36
# text = distributivity
1	distributivity	distributivity	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n

# newpar
# sent_id = 37
# text = ''a'' ∨ ¬''a'' = 1
1	'	'	PART	PART	_	5	case	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	5	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∨	∨	SYM	X	_	0	root	_	_
6	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'a	'a	NOUN	S	Number=Plur	11	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	_
11	=	=	SYM	X	_	5	nmod	_	_
12	1	1	NUM	N	NumType=Card	11	nummod	_	SpacesAfter=\n\n

# newpar
# sent_id = 38
# text = ''a'' ∧ ¬''a'' = 0
1	'	'	PART	PART	_	11	case	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	11	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	∧	∧	SYM	X	_	11	nmod	_	_
6	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'a	'a	NOUN	S	Number=Plur	11	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	_
11	=	=	SYM	X	_	0	root	_	_
12	0	0	NUM	N	NumType=Card	11	nummod	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 39
# text = complements
1	complements	complement	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n\n\n

# newpar
# sent_id = 40
# text = note, however, that the absorption law and even the associativity law can be excluded from the set of axioms as they can be derived from the other axioms (see proven properties).
1	note	note	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	however	however	ADV	B	_	1	advmod	_	SpaceAfter=No
4	,	,	PUNCT	FF	_	1	punct	_	_
5	that	that	SCONJ	CS	_	16	mark	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
7	absorption	absorption	NOUN	S	Number=Sing	8	nmod	_	_
8	law	law	NOUN	S	Number=Sing	16	nsubj:pass	_	_
9	and	and	CCONJ	CC	_	13	cc	_	_
10	even	even	ADV	B	_	13	advmod	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
12	associativity	associativity	NOUN	S	Number=Sing	13	nmod	_	_
13	law	law	NOUN	S	Number=Sing	8	conj	_	_
14	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	16	aux	_	_
15	be	be	AUX	VA	VerbForm=Inf	16	aux:pass	_	_
16	excluded	exclude	VERB	V	Tense=Past|VerbForm=Part	1	acl	_	_
17	from	from	ADP	E	_	19	case	_	_
18	the	the	DET	RD	Definite=Def|PronType=Art	19	det	_	_
19	set	set	NOUN	S	Number=Sing	16	obl	_	_
20	of	of	ADP	E	_	21	case	_	_
21	axioms	axiom	NOUN	S	Number=Plur	19	nmod	_	_
22	as	as	ADP	E	_	26	mark	_	_
23	they	they	PRON	PE	Number=Plur|Person=3|PronType=Prs	26	nsubj:pass	_	_
24	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	26	aux	_	_
25	be	be	AUX	VA	VerbForm=Inf	26	aux:pass	_	_
26	derived	derive	VERB	V	Tense=Past|VerbForm=Part	16	advcl	_	_
27	from	from	ADP	E	_	30	case	_	_
28	the	the	DET	RD	Definite=Def|PronType=Art	30	det	_	_
29	other	other	ADJ	A	Degree=Pos	30	amod	_	_
30	axioms	axiom	NOUN	S	Number=Plur	26	obl	_	_
31	(	(	PUNCT	FB	_	32	punct	_	SpaceAfter=No
32	see	see	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	26	conj	_	_
33	proven	proven	NOUN	S	Number=Sing	34	nmod	_	_
34	properties	property	NOUN	S	Number=Plur	32	obj	_	SpaceAfter=No
35	)	)	PUNCT	FB	_	32	punct	_	SpaceAfter=No
36	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 41
# text = a boolean algebra with only one element is called a '''trivial boolean algebra''' or a '''degenerate boolean algebra'''.
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
2	boolean	boolean	ADJ	A	Degree=Pos	3	amod	_	_
3	algebra	algebra	NOUN	S	Number=Sing	9	nsubj:pass	_	_
4	with	with	ADP	E	_	7	case	_	_
5	only	only	ADV	B	_	7	advmod	_	_
6	one	one	NUM	N	NumType=Card	7	nummod	_	_
7	element	element	NOUN	S	Number=Sing	3	nmod	_	_
8	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux:pass	_	_
9	called	call	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
10	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	25	det	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'	'	PART	PART	_	25	mark	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	trivial	trivial	ADJ	A	Degree=Pos	16	amod	_	_
15	boolean	boolean	ADJ	A	Degree=Pos	16	amod	_	_
16	algebra	algebra	NOUN	S	Number=Plur	25	nsubj	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	16	case	_	SpaceAfter=No
19	'	'	PART	PART	_	16	case	_	_
20	or	or	CCONJ	CC	_	25	cc	_	_
21	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	25	det	_	_
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'	'	PART	PART	_	25	mark	_	SpaceAfter=No
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	degenerate	degenerate	VERB	V	VerbForm=Inf	9	xcomp	_	_
26	boolean	boolean	ADJ	A	Degree=Pos	27	amod	_	_
27	algebra	algebra	NOUN	S	Number=Plur	25	obj	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
31	.	.	PUNCT	FS	_	25	punct	_	_

# sent_id = 42
# text = (some authors require 0 and 1 to be ''distinct'' elements in order to exclude this case.)
1	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	some	some	DET	DI	PronType=Ind	3	det	_	_
3	authors	author	NOUN	S	Number=Plur	4	nsubj	_	_
4	require	require	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
5	0	0	NUM	N	NumType=Card	4	obj	_	_
6	and	and	CCONJ	CC	_	7	cc	_	_
7	1	1	NUM	N	NumType=Card	5	conj	_	_
8	to	to	PART	PART	_	12	mark	_	_
9	be	be	AUX	V	VerbForm=Inf	12	cop	_	_
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
12	distinct	distinct	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	4	xcomp	_	SpaceAfter=No
13	'	'	PART	PART	_	12	compound:prt	_	SpaceAfter=No
14	'	'	PART	PART	_	15	case	_	_
15	elements	element	NOUN	S	Number=Plur	12	obl	_	_
16	in	in	ADP	E	_	19	mark	_	_
17	order	order	NOUN	S	Number=Sing	16	fixed	_	_
18	to	to	ADP	E	_	16	fixed	_	_
19	exclude	exclude	VERB	V	VerbForm=Inf	15	acl	_	_
20	this	this	DET	DD	Number=Sing|PronType=Dem	21	det	_	_
21	case	case	NOUN	S	Number=Sing	19	obj	_	SpaceAfter=No
22	.	.	PUNCT	FS	_	12	punct	_	SpaceAfter=No
23	)	)	PUNCT	FB	_	4	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 43
# text = it follows from the last three pairs of axioms above (identity, distributivity and complements), or from the absorption axiom, that ::''a'' = ''b'' ∧ ''a'' if and only if ''a'' ∨ ''b'' = ''b''.
1	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	2	nsubj	_	_
2	follows	follow	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	from	from	ADP	E	_	7	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
5	last	last	ADJ	NO	Degree=Pos|NumType=Ord	7	amod	_	_
6	three	three	NUM	N	NumType=Card	7	nummod	_	_
7	pairs	pair	NOUN	S	Number=Plur	2	obl	_	_
8	of	of	ADP	E	_	9	case	_	_
9	axioms	axiom	NOUN	S	Number=Plur	7	nmod	_	_
10	above	above	ADJ	A	Degree=Pos	12	amod	_	_
11	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
12	identity	identity	NOUN	S	Number=Sing	9	nmod	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	14	punct	_	_
14	distributivity	distributivity	NOUN	S	Number=Sing	12	conj	_	_
15	and	and	CCONJ	CC	_	16	cc	_	_
16	complements	complement	NOUN	S	Number=Plur	12	conj	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	12	punct	_	SpaceAfter=No
18	,	,	PUNCT	FF	_	23	punct	_	_
19	or	or	CCONJ	CC	_	23	cc	_	_
20	from	from	ADP	E	_	23	case	_	_
21	the	the	DET	RD	Definite=Def|PronType=Art	23	det	_	_
22	absorption	absorption	NOUN	S	Number=Sing	23	nmod	_	_
23	axiom	axiom	NOUN	S	Number=Sing	2	conj	_	SpaceAfter=No
24	,	,	PUNCT	FF	_	2	punct	_	_
25	that	that	SCONJ	CS	_	26	mark	_	SpacesAfter=\n
26	:	:	PUNCT	FC	_	2	punct	_	SpaceAfter=No
27	:	:	PUNCT	FC	_	2	punct	_	SpaceAfter=No
28	'	'	PART	PART	_	34	mark	_	SpaceAfter=No
29	'a	'a	NOUN	S	Number=Plur	34	nmod	_	SpaceAfter=No
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'	'	PART	PART	_	29	case	_	_
32	=	=	SYM	X	_	34	nmod	_	_
33	'	'	PART	PART	_	32	case	_	SpaceAfter=No
34	'b	'b	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
35	'	'	PART	PART	_	34	case	_	SpaceAfter=No
36	'	'	PART	PART	_	34	case	_	_
37	∧	∧	SYM	X	_	39	nmod	_	_
38	'	'	PART	PART	_	37	case	_	SpaceAfter=No
39	'a	'a	NOUN	S	Number=Plur	34	obj	_	SpaceAfter=No
40	'	'	PART	PART	_	39	case	_	SpaceAfter=No
41	'	'	PART	PART	_	39	case	_	SpacesAfter=\s   \s
42	if	if	SCONJ	CS	_	52	mark	_	_
43	and	and	CCONJ	CC	_	52	cc	_	_
44	only	only	ADV	B	_	52	advmod	_	_
45	if	if	SCONJ	CS	_	52	mark	_	SpacesAfter=\s   \s
46	'	'	PART	PART	_	52	mark	_	SpaceAfter=No
47	'a	'a	NOUN	S	Number=Plur	52	nmod	_	SpaceAfter=No
48	'	'	PART	PART	_	47	case	_	SpaceAfter=No
49	'	'	PART	PART	_	47	case	_	_
50	∨	∨	SYM	X	_	52	nmod	_	_
51	'	'	PART	PART	_	50	case	_	SpaceAfter=No
52	'b	'b	VERB	V	VerbForm=Inf	34	advcl	_	SpaceAfter=No
53	'	'	PART	PART	_	52	case	_	SpaceAfter=No
54	'	'	PART	PART	_	57	mark	_	_
55	=	=	SYM	X	_	57	nmod	_	_
56	'	'	PART	PART	_	55	case	_	SpaceAfter=No
57	'b	'b	VERB	V	VerbForm=Inf	52	xcomp	_	SpaceAfter=No
58	'	'	PUNCT	FB	_	57	punct	_	SpaceAfter=No
59	'	'	PUNCT	FB	_	57	punct	_	SpaceAfter=No
60	.	.	PUNCT	FS	_	57	punct	_	SpacesAfter=\n

# sent_id = 44
# text = the relation ≤ defined by ''a'' ≤ ''b'' if these equivalent conditions hold, is a partial order with least element 0 and greatest element 1.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	relation	relation	NOUN	S	Number=Sing	0	root	_	_
3	≤	≤	SYM	X	_	2	nmod	_	_
4	defined	define	VERB	V	Tense=Past|VerbForm=Part	3	acl	_	_
5	by	by	ADP	E	_	28	case	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'a	'a	NOUN	S	Number=Plur	12	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	7	case	_	_
10	≤	≤	SYM	X	_	12	nmod	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'b	'b	NOUN	S	Number=Sing	24	nmod	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	12	case	_	_
15	if	if	SCONJ	CS	_	24	mark	_	_
16	these	this	DET	DD	Number=Plur|PronType=Dem	19	det	_	_
17	equivalent	equivalent	ADJ	A	Degree=Pos	18	amod	_	_
18	conditions	condition	NOUN	S	Number=Plur	19	nmod	_	_
19	hold	hold	NOUN	S	Number=Sing	24	nsubj	_	SpaceAfter=No
20	,	,	PUNCT	FF	_	19	punct	_	_
21	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	24	cop	_	_
22	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	24	det	_	_
23	partial	partial	ADJ	A	Degree=Pos	24	amod	_	_
24	order	order	NOUN	S	Number=Sing	5	fixed	_	_
25	with	with	ADP	E	_	28	case	_	_
26	least	least	ADV	B	Degree=Sup	25	fixed	_	_
27	element	element	ADJ	A	Degree=Pos	28	amod	_	_
28	0	0	NUM	N	NumType=Card	4	obl	_	_
29	and	and	CCONJ	CC	_	31	cc	_	_
30	greatest	greatest	ADJ	A	Degree=Sup	31	amod	_	_
31	element	element	NOUN	S	Number=Sing	28	conj	_	_
32	1	1	NUM	N	NumType=Card	28	nummod	_	SpaceAfter=No
33	.	.	PUNCT	FS	_	2	punct	_	_

# sent_id = 45
# text = the meet ''a'' ∧ ''b'' and the join ''a'' ∨ ''b'' of two elements coincide with their infimum and supremum, respectively, with respect to ≤.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	meet	meet	NOUN	S	Gender=Masc|Number=Plur	7	nmod	_	_
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'a	'a	NOUN	S	Number=Plur	7	nmod	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'	'	PART	PART	_	4	case	_	_
7	∧	∧	SYM	X	_	0	root	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'b	'b	VERB	V	VerbForm=Inf	7	acl	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	9	compound:prt	_	_
12	and	and	CCONJ	CC	_	21	cc	_	_
13	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
14	join	join	NOUN	S	Number=Sing	16	nmod	_	_
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'a	'a	NOUN	S	Number=Plur	19	nmod	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	16	case	_	_
19	∨	∨	SYM	X	_	21	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'b	'b	VERB	V	VerbForm=Inf	9	conj	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'	'	PART	PART	_	21	compound:prt	_	_
24	of	of	ADP	E	_	26	case	_	_
25	two	two	NUM	N	NumType=Card	26	nummod	_	_
26	elements	element	NOUN	S	Number=Plur	21	obl	_	_
27	coincide	coincide	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	26	acl	_	_
28	with	with	ADP	E	_	30	case	_	_
29	their	their	DET	AP	Poss=Yes|PronType=Prs	30	nmod:poss	_	_
30	infimum	infimum	NOUN	S	Gender=Masc|Number=Sing	27	obl	_	_
31	and	and	CCONJ	CC	_	32	cc	_	_
32	supremum	supremum	NOUN	S	Number=Sing	30	conj	_	SpaceAfter=No
33	,	,	PUNCT	FF	_	34	punct	_	_
34	respectively	respectively	ADV	B	_	26	advmod	_	SpaceAfter=No
35	,	,	PUNCT	FF	_	26	punct	_	_
36	with	with	ADP	E	_	37	case	_	_
37	respect	respect	NOUN	S	Number=Sing	26	nmod	_	_
38	to	to	ADP	E	_	39	case	_	_
39	≤	≤	SYM	X	_	37	nmod	_	SpaceAfter=No
40	.	.	PUNCT	FS	_	7	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 46
# text = the first four pairs of axioms constitute a definition of a bounded lattice.
1	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	first	first	ADJ	NO	Degree=Pos|NumType=Ord	4	amod	_	_
3	four	four	NUM	N	NumType=Card	4	nummod	_	_
4	pairs	pair	NOUN	S	Number=Plur	7	nsubj	_	_
5	of	of	ADP	E	_	6	case	_	_
6	axioms	axiom	NOUN	S	Number=Plur	4	nmod	_	_
7	constitute	constitute	VERB	V	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
8	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	9	det	_	_
9	definition	definition	NOUN	S	Number=Sing	7	obj	_	_
10	of	of	ADP	E	_	13	case	_	_
11	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	13	det	_	_
12	bounded	bounded	ADJ	A	Degree=Pos	13	amod	_	_
13	lattice	lattice	NOUN	S	Number=Sing	9	nmod	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	7	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 47
# text = it follows from the first five pairs of axioms that any complement is unique.
1	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	2	nsubj	_	_
2	follows	follow	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	from	from	ADP	E	_	7	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
5	first	first	ADJ	NO	Degree=Pos|NumType=Ord	7	amod	_	_
6	five	five	NUM	N	NumType=Card	7	nummod	_	_
7	pairs	pair	NOUN	S	Number=Plur	2	obl	_	_
8	of	of	ADP	E	_	9	case	_	_
9	axioms	axiom	NOUN	S	Number=Plur	7	nmod	_	_
10	that	that	SCONJ	CS	_	14	mark	_	_
11	any	any	DET	DI	PronType=Ind	12	det	_	_
12	complement	complement	NOUN	S	Number=Sing	14	nsubj	_	_
13	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	_
14	unique	unique	ADJ	A	Degree=Pos	9	acl	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 48
# text = the set of axioms is self-dual in the sense that if one exchanges ∨ with ∧ and 0 with 1 in an axiom, the result is again an axiom.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	set	set	NOUN	S	Number=Sing	8	nsubj	_	_
3	of	of	ADP	E	_	4	case	_	_
4	axioms	axiom	NOUN	S	Number=Plur	2	nmod	_	_
5	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	_	_
6	self	self	ADJ	A	Degree=Pos	8	amod	_	SpaceAfter=No
7	-	-	PUNCT	FF	_	6	punct	_	SpaceAfter=No
8	dual	du	ADJ	A	Degree=Pos	0	root	_	_
9	in	in	ADP	E	_	11	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	11	det	_	_
11	sense	sense	NOUN	S	Number=Sing	8	obl	_	_
12	that	that	SCONJ	CS	_	32	mark	_	_
13	if	if	SCONJ	CS	_	15	mark	_	_
14	one	one	PRON	PE	Number=Sing|Person=3|PronType=Prs	15	nsubj	_	_
15	exchanges	exchange	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	advcl	_	_
16	∨	∨	SYM	X	_	15	obl	_	_
17	with	with	ADP	E	_	16	case	_	_
18	∧	∧	SYM	X	_	16	nmod	_	_
19	and	and	CCONJ	CC	_	20	cc	_	_
20	0	0	NUM	N	NumType=Card	18	conj	_	_
21	with	with	ADP	E	_	22	case	_	_
22	1	1	NUM	N	NumType=Card	16	nummod	_	_
23	in	in	ADP	E	_	25	case	_	_
24	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	25	det	_	_
25	axiom	axiom	NOUN	S	Number=Sing	15	obl	_	SpaceAfter=No
26	,	,	PUNCT	FF	_	15	punct	_	_
27	the	the	DET	RD	Definite=Def|PronType=Art	28	det	_	_
28	result	result	NOUN	S	Number=Sing	32	nsubj	_	_
29	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	cop	_	_
30	again	again	ADV	B	_	32	advmod	_	_
31	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	32	det	_	_
32	axiom	axiom	NOUN	S	Number=Sing	11	acl	_	SpaceAfter=No
33	.	.	PUNCT	FS	_	8	punct	_	_

# sent_id = 49
# text = therefore, by applying this operation to a boolean algebra (or boolean lattice), one obtains another boolean algebra with the same elements;
1	therefore	therefore	ADV	B	_	18	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	by	by	ADP	E	_	4	mark	_	_
4	applying	apply	VERB	V	VerbForm=Ger	1	advcl	_	_
5	this	this	DET	DD	Number=Sing|PronType=Dem	6	det	_	_
6	operation	operation	NOUN	S	Number=Sing	4	obj	_	_
7	to	to	ADP	E	_	10	case	_	_
8	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	det	_	_
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	algebra	algebra	NOUN	S	Number=Sing	4	obl	_	_
11	(	(	PUNCT	FB	_	14	punct	_	SpaceAfter=No
12	or	or	CCONJ	CC	_	14	cc	_	_
13	boolean	boolean	ADJ	A	Degree=Pos	14	amod	_	_
14	lattice	lattice	NOUN	S	Number=Sing	4	conj	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	4	punct	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	1	punct	_	_
17	one	one	PRON	PE	Number=Sing|Person=3|PronType=Prs	18	nsubj	_	_
18	obtains	obtain	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
19	another	another	DET	RI	Definite=Ind|Number=Sing|PronType=Art	21	det	_	_
20	boolean	boolean	ADJ	A	Degree=Pos	21	amod	_	_
21	algebra	algebra	NOUN	S	Number=Sing	18	obj	_	_
22	with	with	ADP	E	_	25	case	_	_
23	the	the	DET	RD	Definite=Def|PronType=Art	25	det	_	_
24	same	same	ADJ	A	Degree=Pos	25	amod	_	_
25	elements	elements	NOUN	S	Number=Plur	18	obl	_	SpaceAfter=No
26	;	;	PUNCT	FC	_	18	punct	_	_

# sent_id = 50
# text = it is called its '''dual'''.
1	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	3	nsubj:pass	_	_
2	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux:pass	_	_
3	called	call	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
4	its	its	NOUN	S	Number=Plur	8	nmod	_	_
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'	'	PART	PART	_	4	case	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	dual	dual	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n\s\n

# newpar
# sent_id = 51
# text = * the simplest non-trivial boolean algebra, the two-element boolean algebra, has only two elements, 0 and 1, and is defined by the rules:
1	*	*	PUNCT	FF	_	7	punct	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
3	simplest	simplest	ADJ	A	Degree=Sup	7	amod	_	_
4	non	non	ADV	BN	PronType=Neg	6	advmod	_	SpaceAfter=No
5	-	-	PUNCT	FF	_	6	punct	_	SpaceAfter=No
6	trivial	trivial	ADJ	A	Degree=Pos	7	amod	_	_
7	boolean	boolean	NOUN	S	Number=Sing	17	nsubj	_	_
8	algebra	algebra	X	SW	_	7	nmod	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	7	punct	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
11	two	two	NUM	N	NumType=Card	13	nummod	_	SpaceAfter=No
12	-	-	PUNCT	FF	_	13	punct	_	SpaceAfter=No
13	element	element	NOUN	S	Number=Sing	14	nmod	_	_
14	boolean	boolean	NOUN	S	Number=Sing	7	appos	_	_
15	algebra	algebra	X	SW	_	14	nmod	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	7	punct	_	_
17	has	have	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
18	only	only	ADV	B	_	20	advmod	_	_
19	two	two	NUM	N	NumType=Card	20	nummod	_	_
20	elements	element	NOUN	S	Number=Plur	17	obj	_	SpaceAfter=No
21	,	,	PUNCT	FF	_	22	punct	_	_
22	0	0	NUM	N	NumType=Card	20	conj	_	_
23	and	and	CCONJ	CC	_	24	cc	_	_
24	1	1	NUM	N	NumType=Card	20	conj	_	SpaceAfter=No
25	,	,	PUNCT	FF	_	28	punct	_	_
26	and	and	CCONJ	CC	_	28	cc	_	_
27	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	28	aux:pass	_	_
28	defined	define	VERB	V	Tense=Past|VerbForm=Part	17	conj	_	_
29	by	by	ADP	E	_	31	case	_	_
30	the	the	DET	RD	Definite=Def|PronType=Art	31	det	_	_
31	rules	rule	NOUN	S	Number=Plur	28	obl	_	SpaceAfter=No
32	:	:	PUNCT	FC	_	17	punct	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 52
# text = ∧
1	∧	∧	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 53
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 54
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 55
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 56
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 57
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 58
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 59
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 60
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 61
# text = ∨
1	∨	∨	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 62
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 63
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 64
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 65
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 66
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 67
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 68
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 69
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 70
# text = ''a''
1	'	'	PART	PART	_	2	case	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 71
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 72
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 73
# text = ¬''a''
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'a	'a	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'	'	PART	PART	_	3	case	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 74
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 75
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\n\n

# newpar
# sent_id = 76
# text = :* it has applications in logic, interpreting 0 as ''false'', 1 as ''true'', ∧ as ''and'', ∨ as ''or'', and ¬ as ''not''.
1	:	:	PUNCT	FC	_	4	punct	_	SpaceAfter=No
2	*	*	PUNCT	FF	_	4	punct	_	_
3	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	4	nsubj	_	_
4	has	have	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	advcl	_	_
5	applications	applications	NOUN	S	Number=Plur	4	obj	_	_
6	in	in	ADP	E	_	7	case	_	_
7	logic	logic	NOUN	S	Number=Sing	4	obl	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	4	punct	_	_
9	interpreting	interpret	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	14	acl	_	_
10	0	0	NUM	N	NumType=Card	9	obj	_	_
11	as	as	NOUN	S	Number=Plur	14	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'	'	PART	PART	_	11	case	_	SpaceAfter=No
14	false	false	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	,	,	PUNCT	FF	_	14	punct	_	_
18	1	1	NUM	N	NumType=Card	14	nummod	_	_
19	as	as	ADP	E	_	25	case	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'true	'true	ADV	B	_	25	advmod	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	,	,	PUNCT	FF	_	21	punct	_	_
25	∧	∧	SYM	X	_	14	obl	_	_
26	as	as	ADP	E	_	25	case	_	_
27	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
29	and	and	CCONJ	CC	_	30	cc	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
32	,	,	PUNCT	FF	_	25	punct	_	_
33	∨	∨	SYM	X	_	25	nmod	_	_
34	as	as	ADP	E	_	45	case	_	_
35	'	'	PUNCT	FB	_	34	case	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
37	or	or	CCONJ	CC	_	38	cc	_	SpaceAfter=No
38	'	'	PART	PART	_	34	conj	_	SpaceAfter=No
39	'	'	PART	PART	_	38	case	_	SpaceAfter=No
40	,	,	PUNCT	FF	_	42	punct	_	_
41	and	and	CCONJ	CC	_	42	cc	_	_
42	¬	¬	SYM	X	_	34	conj	_	_
43	as	as	ADP	E	_	34	fixed	_	_
44	'	'	PART	PART	_	45	mark	_	SpaceAfter=No
45	'not	'not	ADV	B	_	33	advmod	_	SpaceAfter=No
46	'	'	PUNCT	FB	_	45	punct	_	SpaceAfter=No
47	'	'	PUNCT	FB	_	45	punct	_	SpaceAfter=No
48	.	.	PUNCT	FS	_	14	punct	_	_

# sent_id = 77
# text = expressions involving variables and the boolean operations represent statement forms, and two such expressions can be shown to be equal using the above axioms if and only if the corresponding statement forms are logically equivalent.
1	expressions	expression	NOUN	S	Number=Plur	8	nsubj	_	_
2	involving	involve	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	1	acl	_	_
3	variables	variable	NOUN	S	Number=Plur	2	obj	_	_
4	and	and	CCONJ	CC	_	7	cc	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
6	boolean	boolean	ADJ	A	Degree=Pos	7	amod	_	_
7	operations	operation	NOUN	S	Number=Plur	3	conj	_	_
8	represent	represent	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
9	statement	statement	NOUN	S	Number=Sing	10	nmod	_	_
10	forms	forms	NOUN	S	Number=Plur	8	obj	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	18	punct	_	_
12	and	and	CCONJ	CC	_	18	cc	_	_
13	two	two	NUM	N	NumType=Card	15	nummod	_	_
14	such	such	DET	DD	PronType=Dem	15	det	_	_
15	expressions	expression	NOUN	S	Number=Plur	18	nsubj:pass	_	_
16	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	18	aux	_	_
17	be	be	AUX	VA	VerbForm=Inf	18	aux:pass	_	_
18	shown	show	VERB	V	Tense=Past|VerbForm=Part	8	conj	_	_
19	to	to	PART	PART	_	21	mark	_	_
20	be	be	AUX	V	VerbForm=Inf	21	cop	_	_
21	equal	equal	ADJ	A	Degree=Pos	18	ccomp	_	_
22	using	use	VERB	V	VerbForm=Ger	21	advcl	_	_
23	the	the	DET	RD	Definite=Def|PronType=Art	25	det	_	_
24	above	above	ADJ	A	Degree=Pos	25	amod	_	_
25	axioms	axiom	NOUN	S	Number=Plur	22	obj	_	_
26	if	if	SCONJ	CS	_	36	mark	_	_
27	and	and	CCONJ	CC	_	36	cc	_	_
28	only	only	ADV	B	_	36	advmod	_	_
29	if	if	SCONJ	CS	_	36	mark	_	_
30	the	the	DET	RD	Definite=Def|PronType=Art	33	det	_	_
31	corresponding	correspond	ADJ	A	Degree=Pos	33	amod	_	_
32	statement	statement	NOUN	S	Number=Sing	33	nmod	_	_
33	forms	forms	NOUN	S	Number=Plur	36	nsubj	_	_
34	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	36	cop	_	_
35	logically	logically	ADV	B	_	36	advmod	_	_
36	equivalent	equivalent	ADJ	A	Degree=Pos	22	conj	_	SpaceAfter=No
37	.	.	PUNCT	FS	_	8	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 78
# text = :* the two-element boolean algebra is also used for circuit design in electrical engineering;
1	:	:	PUNCT	FC	_	11	punct	_	SpaceAfter=No
2	*	*	PUNCT	FF	_	11	punct	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
4	two	two	NUM	N	NumType=Card	6	nummod	_	SpaceAfter=No
5	-	-	PUNCT	FF	_	6	punct	_	SpaceAfter=No
6	element	element	NOUN	S	Number=Sing	7	nmod	_	_
7	boolean	boolean	NOUN	S	Number=Sing	11	nsubj:pass	_	_
8	algebra	algebra	X	SW	_	7	nmod	_	_
9	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	aux:pass	_	_
10	also	also	ADV	B	_	11	advmod	_	_
11	used	use	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
12	for	for	ADP	E	_	14	case	_	_
13	circuit	circuit	ADJ	A	Degree=Pos	14	amod	_	_
14	design	design	NOUN	S	Number=Sing	11	obl	_	_
15	in	in	ADP	E	_	17	case	_	_
16	electrical	electric	ADJ	A	Degree=Pos	17	amod	_	_
17	engineering	engineering	NOUN	S	Number=Sing	11	obl	_	SpaceAfter=No
18	;	;	PUNCT	FC	_	11	punct	_	_

# sent_id = 79
# text = here 0 and 1 represent the two different states of one bit in a digital circuit, typically high and low voltage.
1	here	here	ADV	B	_	2	advmod	_	_
2	0	0	NUM	N	NumType=Card	5	nsubj	_	_
3	and	and	CCONJ	CC	_	4	cc	_	_
4	1	1	NUM	N	NumType=Card	2	conj	_	_
5	represent	represent	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	9	det	_	_
7	two	two	NUM	N	NumType=Card	9	nummod	_	_
8	different	different	ADJ	A	Degree=Pos	9	amod	_	_
9	states	state	NOUN	S	Number=Plur	5	obj	_	_
10	of	of	ADP	E	_	12	case	_	_
11	one	one	NUM	N	NumType=Card	12	nummod	_	_
12	bit	bit	NOUN	S	Number=Sing	9	nmod	_	_
13	in	in	ADP	E	_	16	case	_	_
14	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	16	det	_	_
15	digital	digital	ADJ	A	Degree=Pos	16	amod	_	_
16	circuit	circuit	NOUN	S	Number=Sing	5	obl	_	SpaceAfter=No
17	,	,	PUNCT	FF	_	5	punct	_	_
18	typically	typically	ADV	B	_	19	advmod	_	_
19	high	high	ADJ	A	Degree=Pos	22	amod	_	_
20	and	and	CCONJ	CC	_	21	cc	_	_
21	low	low	ADJ	A	Degree=Pos	19	conj	_	_
22	voltage	voltage	NOUN	S	Number=Sing	5	obj	_	SpaceAfter=No
23	.	.	PUNCT	FS	_	5	punct	_	_

# sent_id = 80
# text = circuits are described by expressions containing variables, and two such expressions are equal for all values of the variables if and only if the corresponding circuits have the same input-output behavior.
1	circuits	circuit	NOUN	S	Number=Plur	3	nsubj:pass	_	_
2	are	be	AUX	VA	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	3	aux:pass	_	_
3	described	describe	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
4	by	by	ADP	E	_	5	case	_	_
5	expressions	expression	NOUN	S	Number=Plur	3	obl	_	_
6	containing	contain	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	5	acl	_	_
7	variables	variable	NOUN	S	Number=Plur	6	obj	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	14	punct	_	_
9	and	and	CCONJ	CC	_	14	cc	_	_
10	two	two	NUM	N	NumType=Card	14	nummod	_	_
11	such	such	DET	DD	PronType=Dem	12	det	_	_
12	expressions	expression	NOUN	S	Number=Plur	14	nsubj	_	_
13	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	14	cop	_	_
14	equal	equal	ADJ	A	Degree=Pos	3	conj	_	_
15	for	for	ADP	E	_	17	case	_	_
16	all	all	DET	T	PronType=Tot	17	det	_	_
17	values	value	NOUN	S	Number=Plur	14	obl	_	_
18	of	of	ADP	E	_	20	case	_	_
19	the	the	DET	RD	Definite=Def|PronType=Art	20	det	_	_
20	variables	variable	NOUN	S	Number=Plur	17	nmod	_	_
21	if	if	SCONJ	CS	_	28	mark	_	_
22	and	and	CCONJ	CC	_	28	cc	_	_
23	only	only	ADV	B	_	28	advmod	_	_
24	if	if	SCONJ	CS	_	28	mark	_	_
25	the	the	DET	RD	Definite=Def|PronType=Art	27	det	_	_
26	corresponding	corresponding	ADJ	A	Degree=Pos	27	amod	_	_
27	circuits	circuit	NOUN	S	Number=Plur	28	nsubj	_	_
28	have	have	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	14	advcl	_	_
29	the	the	DET	RD	Definite=Def|PronType=Art	34	det	_	_
30	same	same	ADJ	A	Degree=Pos	31	amod	_	_
31	input	input	NOUN	S	Number=Sing	33	nmod	_	SpaceAfter=No
32	-	-	PUNCT	FF	_	33	punct	_	SpaceAfter=No
33	output	output	NOUN	S	Number=Sing	34	nmod	_	_
34	behavior	behavior	NOUN	S	Number=Sing	28	obj	_	SpaceAfter=No
35	.	.	PUNCT	FS	_	3	punct	_	_

# sent_id = 81
# text = furthermore, every possible input-output behavior can be modeled by a suitable boolean expression.
1	furthermore	furthermore	ADV	B	_	11	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	every	every	DET	DI	Number=Sing|PronType=Ind	8	det	_	_
4	possible	possible	ADJ	A	Degree=Pos	7	amod	_	_
5	input	input	ADJ	A	Degree=Pos	7	amod	_	SpaceAfter=No
6	-	-	PUNCT	FF	_	7	punct	_	SpaceAfter=No
7	output	output	NOUN	S	Number=Sing	8	nmod	_	_
8	behavior	behavior	NOUN	S	Number=Sing	11	nsubj:pass	_	_
9	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	11	aux	_	_
10	be	be	AUX	VA	VerbForm=Inf	11	aux:pass	_	_
11	modeled	modeled	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
12	by	by	ADP	E	_	16	case	_	_
13	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	16	det	_	_
14	suitable	suitable	ADJ	A	Degree=Pos	16	amod	_	_
15	boolean	boolean	ADJ	A	Degree=Pos	16	amod	_	_
16	expression	expression	NOUN	S	Number=Sing	11	obl	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	11	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 82
# text = :* the two-element boolean algebra is also important in the general theory of boolean algebras, because an equation involving several variables is generally true in all boolean algebras if and only if it is true in the two-element boolean algebra (which can be checked by a trivial brute force algorithm for small numbers of variables).
1	:	:	PUNCT	FC	_	11	punct	_	SpaceAfter=No
2	*	*	PUNCT	FF	_	11	punct	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
4	two	two	NUM	N	NumType=Card	6	nummod	_	SpaceAfter=No
5	-	-	PUNCT	FF	_	6	punct	_	SpaceAfter=No
6	element	element	NOUN	S	Number=Sing	7	nmod	_	_
7	boolean	boolean	NOUN	S	Number=Sing	11	nsubj	_	_
8	algebra	algebra	X	SW	_	7	nmod	_	_
9	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	cop	_	_
10	also	also	ADV	B	_	11	advmod	_	_
11	important	important	ADJ	A	Degree=Pos	32	amod	_	_
12	in	in	ADP	E	_	15	case	_	_
13	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
14	general	general	ADJ	A	Degree=Pos	15	amod	_	_
15	theory	theory	NOUN	S	Number=Sing	11	obl	_	_
16	of	of	ADP	E	_	18	case	_	_
17	boolean	boolean	ADJ	A	Degree=Pos	18	amod	_	_
18	algebras	algebra	NOUN	S	Number=Plur	15	nmod	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	11	punct	_	_
20	because	because	ADP	E	_	22	case	_	_
21	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	22	det	_	_
22	equation	equation	NOUN	S	Number=Sing	32	nsubj	_	_
23	involving	involve	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	22	acl	_	_
24	several	several	ADJ	A	Degree=Pos	25	amod	_	_
25	variables	variable	NOUN	S	Number=Plur	23	obj	_	_
26	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	cop	_	_
27	generally	generally	ADV	B	_	28	advmod	_	_
28	true	true	ADV	B	_	32	advmod	_	_
29	in	in	ADP	E	_	32	case	_	_
30	all	all	DET	T	PronType=Tot	32	det	_	_
31	boolean	boolean	ADJ	A	Degree=Pos	32	amod	_	_
32	algebras	algebra	NOUN	S	Number=Plur	0	root	_	_
33	if	if	SCONJ	CS	_	32	acl	_	_
34	and	and	CCONJ	CC	_	39	cc	_	_
35	only	only	ADV	B	_	39	advmod	_	_
36	if	if	SCONJ	CS	_	39	mark	_	_
37	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	39	nsubj	_	_
38	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	39	cop	_	_
39	true	true	ADJ	A	Degree=Pos	33	conj	_	_
40	in	in	ADP	E	_	46	case	_	_
41	the	the	DET	RD	Definite=Def|PronType=Art	46	det	_	_
42	two	two	NUM	N	NumType=Card	44	nummod	_	SpaceAfter=No
43	-	-	PUNCT	FF	_	44	punct	_	SpaceAfter=No
44	element	element	NOUN	S	Number=Sing	45	nmod	_	_
45	boolean	boolean	NOUN	S	Number=Sing	46	nmod	_	_
46	algebra	algebra	NOUN	S	Number=Plur	39	obl	_	_
47	(	(	PUNCT	FB	_	51	punct	_	SpaceAfter=No
48	which	which	PRON	PR	PronType=Rel	51	nsubj:pass	_	_
49	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	51	aux	_	_
50	be	be	AUX	VA	VerbForm=Inf	51	aux:pass	_	_
51	checked	check	VERB	V	Tense=Past|VerbForm=Part	39	advcl	_	_
52	by	by	ADP	E	_	57	case	_	_
53	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	57	det	_	_
54	trivial	trivial	ADJ	A	Degree=Pos	56	amod	_	_
55	brute	brute	ADJ	A	Degree=Pos	56	amod	_	_
56	force	force	NOUN	S	Number=Sing	57	nmod	_	_
57	algorithm	algorithm	NOUN	S	Number=Sing	51	obl	_	_
58	for	for	ADP	E	_	60	case	_	_
59	small	small	ADJ	A	Degree=Pos	60	amod	_	_
60	numbers	number	NOUN	S	Number=Plur	51	obl	_	_
61	of	of	ADP	E	_	62	case	_	_
62	variables	variable	NOUN	S	Number=Plur	60	nmod	_	SpaceAfter=No
63	)	)	PUNCT	FB	_	51	punct	_	SpaceAfter=No
64	.	.	PUNCT	FS	_	32	punct	_	_

# sent_id = 83
# text = this can for example be used to show that the following laws (''consensus theorems'') are generally valid in all boolean algebras:
1	this	this	DET	DD	Number=Sing|PronType=Dem	2	det	_	_
2	can	can	NOUN	S	Number=Sing	6	nsubj:pass	_	_
3	for	for	ADP	E	_	4	case	_	_
4	example	example	NOUN	S	Number=Sing	2	nmod	_	_
5	be	be	AUX	VA	VerbForm=Inf	6	aux:pass	_	_
6	used	use	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
7	to	to	PART	PART	_	8	mark	_	_
8	show	show	VERB	V	VerbForm=Inf	6	xcomp	_	_
9	that	that	SCONJ	CS	_	23	mark	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	following	following	ADJ	A	Degree=Pos	12	amod	_	_
12	laws	law	NOUN	S	Number=Plur	23	nsubj	_	_
13	(	(	PUNCT	FB	_	14	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	consensus	consensus	VERB	V	VerbForm=Inf	14	xcomp	_	_
17	theorems	theorem	NOUN	S	Number=Plur	16	obl	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'	'	PART	PART	_	17	case	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	_
21	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	23	cop	_	_
22	generally	generally	ADV	B	_	23	advmod	_	_
23	valid	valid	ADJ	A	Degree=Pos	8	ccomp	_	_
24	in	in	ADP	E	_	27	case	_	_
25	all	all	DET	T	PronType=Tot	27	det	_	_
26	boolean	boolean	ADJ	A	Degree=Pos	27	amod	_	_
27	algebras	algebra	NOUN	S	Number=Plur	23	obl	_	SpaceAfter=No
28	:	:	PUNCT	FC	_	6	punct	_	SpacesAfter=\n

# sent_id = 84
# text = :** (''a'' ∨ ''b'') ∧ (¬''a'' ∨ ''c'') ∧ (''b'' ∨ ''c'') ≡ (''a'' ∨ ''b'') ∧ (¬''a'' ∨ ''c'') :** (''a'' ∧ ''b'') ∨ (¬''a'' ∧ ''c'') ∨ (''b'' ∧ ''c'') ≡ (''a'' ∧ ''b'') ∨ (¬''a'' ∧ ''c'')
1	:	:	PUNCT	FC	_	11	punct	_	SpaceAfter=No
2	*	*	PUNCT	FF	_	11	punct	_	SpaceAfter=No
3	*	*	PUNCT	FF	_	2	punct	_	_
4	(	(	PUNCT	FB	_	11	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'a	'a	PROPN	SP	_	9	nmod	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	6	punct	_	_
9	∨	∨	SYM	X	_	11	nmod	_	_
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'b	'b	VERB	V	VerbForm=Inf	15	advcl	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
14	)	)	PUNCT	FB	_	11	punct	_	_
15	∧	∧	SYM	X	_	0	root	_	_
16	(	(	PUNCT	FB	_	28	punct	_	SpaceAfter=No
17	¬	¬	SYM	X	_	19	nmod	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'a	'a	NOUN	S	Number=Plur	28	nmod	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'	'	PART	PART	_	19	case	_	_
22	∨	∨	SYM	X	_	28	nmod	_	_
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'c	'c	ADJ	A	Degree=Pos	22	amod	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
27	)	)	PUNCT	FB	_	24	punct	_	_
28	∧	∧	SYM	X	_	15	nmod	_	_
29	(	(	PUNCT	FB	_	31	punct	_	SpaceAfter=No
30	'	'	PART	PART	_	31	mark	_	SpaceAfter=No
31	'b	'b	VERB	V	VerbForm=Inf	28	acl	_	SpaceAfter=No
32	'	'	PART	PART	_	48	mark	_	SpaceAfter=No
33	'	'	PART	PART	_	32	case	_	_
34	∨	∨	SYM	X	_	48	nmod	_	_
35	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
36	'c	'c	ADJ	A	Degree=Pos	48	amod	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
39	)	)	PUNCT	FB	_	36	punct	_	_
40	≡	≡	SYM	X	_	48	cc	_	_
41	(	(	PUNCT	FB	_	48	punct	_	SpaceAfter=No
42	'	'	PUNCT	FB	_	43	punct	_	SpaceAfter=No
43	'a	'a	PROPN	SP	_	46	nmod	_	SpaceAfter=No
44	'	'	PUNCT	FB	_	43	punct	_	SpaceAfter=No
45	'	'	PUNCT	FB	_	43	punct	_	_
46	∨	∨	SYM	X	_	48	nmod	_	_
47	'	'	PART	PART	_	46	case	_	SpaceAfter=No
48	'b	'b	VERB	V	VerbForm=Inf	31	xcomp	_	SpaceAfter=No
49	'	'	PUNCT	FB	_	48	punct	_	SpaceAfter=No
50	'	'	PUNCT	FB	_	48	punct	_	SpaceAfter=No
51	)	)	PUNCT	FB	_	48	punct	_	_
52	∧	∧	SYM	X	_	48	nsubj	_	_
53	(	(	PUNCT	FB	_	59	punct	_	SpaceAfter=No
54	¬	¬	SYM	X	_	56	nmod	_	SpaceAfter=No
55	'	'	PART	PART	_	54	case	_	SpaceAfter=No
56	'a	'a	NOUN	S	Number=Plur	59	nmod	_	SpaceAfter=No
57	'	'	PART	PART	_	56	case	_	SpaceAfter=No
58	'	'	PART	PART	_	56	case	_	_
59	∨	∨	SYM	X	_	52	appos	_	_
60	'	'	PUNCT	FB	_	59	punct	_	SpaceAfter=No
61	'c	'c	ADJ	A	Degree=Pos	59	amod	_	SpaceAfter=No
62	'	'	PUNCT	FB	_	61	punct	_	SpaceAfter=No
63	'	'	PUNCT	FB	_	61	punct	_	SpaceAfter=No
64	)	)	PUNCT	FB	_	61	punct	_	SpacesAfter=\n
65	:	:	PUNCT	FC	_	59	punct	_	SpaceAfter=No
66	*	*	PUNCT	FF	_	59	punct	_	SpaceAfter=No
67	*	*	PUNCT	FF	_	59	punct	_	_
68	(	(	PUNCT	FB	_	75	punct	_	SpaceAfter=No
69	'	'	PUNCT	FB	_	70	punct	_	SpaceAfter=No
70	'a	'a	PROPN	SP	_	73	nmod	_	SpaceAfter=No
71	'	'	PUNCT	FB	_	70	punct	_	SpaceAfter=No
72	'	'	PUNCT	FB	_	70	punct	_	_
73	∧	∧	SYM	X	_	75	nmod	_	_
74	'	'	PART	PART	_	73	case	_	SpaceAfter=No
75	'b	'b	VERB	V	VerbForm=Inf	59	conj	_	SpaceAfter=No
76	'	'	PUNCT	FB	_	75	punct	_	SpaceAfter=No
77	'	'	PUNCT	FB	_	75	punct	_	SpaceAfter=No
78	)	)	PUNCT	FB	_	75	punct	_	_
79	∨	∨	SYM	X	_	75	obj	_	_
80	(	(	PUNCT	FB	_	92	punct	_	SpaceAfter=No
81	¬	¬	SYM	X	_	83	nmod	_	SpaceAfter=No
82	'	'	PART	PART	_	81	case	_	SpaceAfter=No
83	'a	'a	NOUN	S	Number=Plur	92	nmod	_	SpaceAfter=No
84	'	'	PART	PART	_	83	case	_	SpaceAfter=No
85	'	'	PART	PART	_	83	case	_	_
86	∧	∧	SYM	X	_	92	nmod	_	_
87	'	'	PUNCT	FB	_	86	punct	_	SpaceAfter=No
88	'c	'c	ADJ	A	Degree=Pos	86	amod	_	SpaceAfter=No
89	'	'	PUNCT	FB	_	88	punct	_	SpaceAfter=No
90	'	'	PUNCT	FB	_	88	punct	_	SpaceAfter=No
91	)	)	PUNCT	FB	_	88	punct	_	_
92	∨	∨	SYM	X	_	79	nmod	_	_
93	(	(	PUNCT	FB	_	95	punct	_	SpaceAfter=No
94	'	'	PART	PART	_	95	mark	_	SpaceAfter=No
95	'b	'b	VERB	V	VerbForm=Inf	92	acl	_	SpaceAfter=No
96	'	'	PART	PART	_	104	mark	_	SpaceAfter=No
97	'	'	PART	PART	_	96	case	_	_
98	∧	∧	SYM	X	_	104	nmod	_	_
99	'	'	PUNCT	FB	_	98	punct	_	SpaceAfter=No
100	'c	'c	ADJ	A	Degree=Pos	104	amod	_	SpaceAfter=No
101	'	'	PUNCT	FB	_	100	punct	_	SpaceAfter=No
102	'	'	PUNCT	FB	_	100	punct	_	SpaceAfter=No
103	)	)	PUNCT	FB	_	100	punct	_	_
104	≡	≡	SYM	X	_	95	obj	_	_
105	(	(	PUNCT	FB	_	116	punct	_	SpaceAfter=No
106	'	'	PUNCT	FB	_	107	punct	_	SpaceAfter=No
107	'a	'a	PROPN	SP	_	110	nmod	_	SpaceAfter=No
108	'	'	PUNCT	FB	_	107	punct	_	SpaceAfter=No
109	'	'	PUNCT	FB	_	107	punct	_	_
110	∧	∧	SYM	X	_	116	nmod	_	_
111	'	'	PART	PART	_	110	case	_	SpaceAfter=No
112	'b	'b	VERB	V	VerbForm=Inf	116	conj	_	SpaceAfter=No
113	'	'	PUNCT	FB	_	112	punct	_	SpaceAfter=No
114	'	'	PUNCT	FB	_	112	punct	_	SpaceAfter=No
115	)	)	PUNCT	FB	_	112	punct	_	_
116	∨	∨	SYM	X	_	104	conj	_	_
117	(	(	PUNCT	FB	_	123	punct	_	SpaceAfter=No
118	¬	¬	SYM	X	_	120	nmod	_	SpaceAfter=No
119	'	'	PART	PART	_	118	case	_	SpaceAfter=No
120	'a	'a	NOUN	S	Number=Plur	123	nmod	_	SpaceAfter=No
121	'	'	PART	PART	_	120	case	_	SpaceAfter=No
122	'	'	PART	PART	_	120	case	_	_
123	∧	∧	SYM	X	_	116	appos	_	_
124	'	'	PUNCT	FB	_	123	punct	_	SpaceAfter=No
125	'c	'c	ADJ	A	Degree=Pos	123	amod	_	SpaceAfter=No
126	'	'	PUNCT	FB	_	123	punct	_	SpaceAfter=No
127	'	'	PUNCT	FB	_	123	punct	_	SpaceAfter=No
128	)	)	PUNCT	FB	_	123	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 85
# text = * the power set (set of all subsets) of any given nonempty set ''s'' forms a boolean algebra, an algebra of sets, with the two operations ∨ := ∪ (union) and ∧ := ∩ (intersection).
1	*	*	PUNCT	FF	_	4	punct	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	power	power	NOUN	S	Number=Sing	4	nsubj	_	_
4	set	set	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
5	(	(	PUNCT	FB	_	6	punct	_	SpaceAfter=No
6	set	set	NOUN	S	Number=Sing	4	obj	_	_
7	of	of	ADP	E	_	9	case	_	_
8	all	all	DET	T	PronType=Tot	9	det	_	_
9	subsets	subset	NOUN	S	Number=Plur	6	nmod	_	SpaceAfter=No
10	)	)	PUNCT	FB	_	9	punct	_	_
11	of	of	ADP	E	_	14	case	_	_
12	any	any	DET	DI	PronType=Ind	14	det	_	_
13	given	give	ADJ	A	Degree=Pos	14	amod	_	_
14	nonempty	nonempty	NOUN	S	Number=Sing	6	nmod	_	_
15	set	set	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	4	xcomp	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	's	's	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	15	punct	_	_
20	forms	form	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	advcl	_	_
21	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	23	det	_	_
22	boolean	boolean	ADJ	A	Degree=Pos	23	amod	_	_
23	algebra	algebra	NOUN	S	Number=Sing	20	obj	_	SpaceAfter=No
24	,	,	PUNCT	FF	_	20	punct	_	_
25	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	26	det	_	_
26	algebra	algebra	NOUN	S	Number=Sing	20	appos	_	_
27	of	of	ADP	E	_	28	case	_	_
28	sets	sets	NOUN	S	Number=Plur	26	nmod	_	SpaceAfter=No
29	,	,	PUNCT	FF	_	26	punct	_	_
30	with	with	ADP	E	_	34	case	_	_
31	the	the	DET	RD	Definite=Def|PronType=Art	33	det	_	_
32	two	two	NUM	N	NumType=Card	33	nummod	_	_
33	operations	operation	NOUN	S	Number=Plur	34	nmod	_	_
34	∨	∨	SYM	X	_	20	obl	_	_
35	:	:	PUNCT	FC	_	37	punct	_	SpaceAfter=No
36	=	=	SYM	X	_	37	nmod	_	_
37	∪	∪	SYM	X	_	34	conj	_	_
38	(	(	PUNCT	FB	_	39	punct	_	SpaceAfter=No
39	union	union	NOUN	S	Number=Sing	37	appos	_	SpaceAfter=No
40	)	)	PUNCT	FB	_	39	punct	_	_
41	and	and	CCONJ	CC	_	42	cc	_	_
42	∧	∧	SYM	X	_	37	conj	_	_
43	:	:	PUNCT	FC	_	37	punct	_	SpaceAfter=No
44	=	=	SYM	X	_	45	nmod	_	_
45	∩	∩	SYM	X	_	37	conj	_	_
46	(	(	PUNCT	FB	_	47	punct	_	SpaceAfter=No
47	intersection	intersection	NOUN	S	Number=Sing	45	appos	_	SpaceAfter=No
48	)	)	PUNCT	FB	_	47	punct	_	SpaceAfter=No
49	.	.	PUNCT	FS	_	4	punct	_	_

# sent_id = 86
# text = the smallest element 0 is the empty set and the largest element 1 is the set ''s'' itself.
1	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	smallest	smallest	ADJ	A	Degree=Sup	3	amod	_	_
3	element	element	NOUN	S	Number=Sing	7	nsubj	_	_
4	0	0	NUM	N	NumType=Card	3	nummod	_	_
5	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	cop	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	empty	empty	NOUN	S	Number=Sing	0	root	_	_
8	set	set	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	7	acl	_	_
9	and	and	CCONJ	CC	_	12	cc	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	largest	largest	ADJ	A	Degree=Sup	12	amod	_	_
12	element	element	NOUN	S	Number=Sing	8	conj	_	_
13	1	1	NUM	N	NumType=Card	12	nummod	_	_
14	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	cop	_	_
15	the	the	DET	RD	Definite=Def|PronType=Art	16	det	_	_
16	set	set	NOUN	S	Number=Sing	21	nmod	_	_
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	's	'	PART	PART	_	16	case	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	16	punct	_	_
21	itself	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	7	nmod	_	SpaceAfter=No
22	.	.	PUNCT	FS	_	7	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 87
# text = :* after the two-element boolean algebra, the simplest boolean algebra is that defined by the power set of two atoms:
1	:	:	PUNCT	FC	_	13	punct	_	SpaceAfter=No
2	*	*	PUNCT	FF	_	13	punct	_	_
3	after	after	ADP	E	_	8	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
5	two	two	NUM	N	NumType=Card	7	nummod	_	SpaceAfter=No
6	-	-	PUNCT	FF	_	7	punct	_	SpaceAfter=No
7	element	element	NOUN	S	Number=Sing	8	nmod	_	_
8	boolean	boolean	NOUN	S	Number=Sing	13	nmod	_	_
9	algebra	algebra	X	SW	_	8	nmod	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	8	punct	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
12	simplest	simplest	ADJ	A	Degree=Pos	13	amod	_	_
13	boolean	boolean	NOUN	S	Number=Sing	0	root	_	_
14	algebra	algebra	X	X	_	13	nmod	_	_
15	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	cop	_	_
16	that	that	SCONJ	CS	_	17	mark	_	_
17	defined	define	VERB	V	Tense=Past|VerbForm=Part	13	acl	_	_
18	by	by	ADP	E	_	21	case	_	_
19	the	the	DET	RD	Definite=Def|PronType=Art	21	det	_	_
20	power	power	NOUN	S	Number=Sing	21	nmod	_	_
21	set	set	NOUN	S	Number=Sing	17	obl	_	_
22	of	of	ADP	E	_	24	case	_	_
23	two	two	NUM	N	NumType=Card	24	nummod	_	_
24	atoms	atom	NOUN	S	Number=Plur	21	nmod	_	SpaceAfter=No
25	:	:	PUNCT	FC	_	13	punct	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 88
# text = ∧
1	∧	∧	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 89
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 90
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 91
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 92
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 93
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 94
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 95
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 96
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 97
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 98
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 99
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 100
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 101
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 102
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 103
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 104
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 105
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 106
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 107
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 108
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 109
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 110
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 111
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 112
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 113
# text = ∨
1	∨	∨	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 114
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 115
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 116
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 117
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 118
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 119
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 120
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 121
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 122
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 123
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 124
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 125
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 126
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 127
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 128
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 129
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 130
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 131
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 132
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 133
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 134
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 135
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 136
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 137
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 138
# text = ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 139
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 140
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 141
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 142
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 143
# text = ¬''x''
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 144
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 145
# text = b
1	b	b	X	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 146
# text = a
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 147
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\n\n

# newpar
# sent_id = 148
# text = * the set of all subsets of ''s'' that are either finite or cofinite is a boolean algebra, an algebra of sets.
1	*	*	PUNCT	FF	_	3	punct	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	set	set	NOUN	S	Number=Sing	21	nsubj	_	_
4	of	of	ADP	E	_	6	case	_	_
5	all	all	DET	T	PronType=Tot	6	det	_	_
6	subsets	subset	NOUN	S	Number=Plur	3	nmod	_	_
7	of	of	ADP	E	_	11	case	_	_
8	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	's	's	PART	PART	_	7	case	_	SpaceAfter=No
10	'	'	PART	PART	_	7	case	_	SpaceAfter=No
11	'	'	PART	PART	_	6	case	_	_
12	that	that	PRON	PR	PronType=Rel	15	nsubj	_	_
13	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	15	cop	_	_
14	either	either	ADV	B	_	15	advmod	_	_
15	finite	finite	ADJ	A	Degree=Pos	6	acl:relcl	_	_
16	or	or	CCONJ	CC	_	17	cc	_	_
17	cofinite	cofinite	ADJ	A	Degree=Pos	15	conj	_	_
18	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	cop	_	_
19	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	21	det	_	_
20	boolean	boolean	ADJ	A	Degree=Pos	21	amod	_	_
21	algebra	algebra	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
22	,	,	PUNCT	FF	_	21	punct	_	_
23	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	24	det	_	_
24	algebra	algebra	NOUN	S	Number=Sing	21	appos	_	_
25	of	of	ADP	E	_	26	case	_	_
26	sets	sets	NOUN	S	Number=Plur	24	nmod	_	SpaceAfter=No
27	.	.	PUNCT	FS	_	21	punct	_	SpacesAfter=\n

# sent_id = 149
# text = * starting with the propositional calculus with κ sentence symbols, form the lindenbaum algebra (that is, the set of sentences in the propositional calculus modulo logical equivalence).
1	*	*	PUNCT	FF	_	2	punct	_	_
2	starting	starte	VERB	V	VerbForm=Ger	12	advcl	_	_
3	with	with	ADP	E	_	6	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
5	propositional	propositional	ADJ	A	Degree=Pos	6	amod	_	_
6	calculus	calculus	NOUN	S	Number=Sing	2	obl	_	_
7	with	with	ADP	E	_	10	case	_	_
8	κ	κ	NOUN	S	Number=Sing	9	nmod	_	_
9	sentence	sentence	NOUN	S	Number=Sing	10	nmod	_	_
10	symbols	symbol	NOUN	S	Number=Plur	6	nmod	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	2	punct	_	_
12	form	form	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
13	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
14	lindenbaum	lindenbaum	ADJ	A	Degree=Pos	15	amod	_	_
15	algebra	algebra	NOUN	S	Number=Plur	12	obj	_	_
16	(	(	PUNCT	FB	_	21	punct	_	SpaceAfter=No
17	that	that	PRON	PR	PronType=Rel	21	nmod	_	_
18	is	is	VERB	V	Mood=Ind|Tense=Pres|VerbForm=Fin	17	fixed	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	17	punct	_	_
20	the	the	DET	RD	Definite=Def|PronType=Art	21	det	_	_
21	set	set	NOUN	S	Number=Sing	15	appos	_	_
22	of	of	ADP	E	_	23	case	_	_
23	sentences	sentence	NOUN	S	Number=Plur	21	nmod	_	_
24	in	in	ADP	E	_	27	case	_	_
25	the	the	DET	RD	Definite=Def|PronType=Art	27	det	_	_
26	propositional	propositional	ADJ	A	Degree=Pos	27	amod	_	_
27	calculus	calculus	NOUN	S	Number=Sing	23	nmod	_	_
28	modulo	modulo	ADP	E	_	30	case	_	_
29	logical	logical	ADJ	A	Degree=Pos	30	amod	_	_
30	equivalence	equivalence	NOUN	S	Number=Sing	27	nmod	_	SpaceAfter=No
31	)	)	PUNCT	FB	_	21	punct	_	SpaceAfter=No
32	.	.	PUNCT	FS	_	12	punct	_	SpacesAfter=\s\s

# sent_id = 150
# text = this construction yields a boolean algebra.
1	this	this	DET	DD	Number=Sing|PronType=Dem	2	det	_	_
2	construction	construction	NOUN	S	Number=Sing	3	nsubj	_	_
3	yields	yield	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	6	det	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	algebra	algebra	NOUN	S	Number=Sing	3	obj	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\s\s

# sent_id = 151
# text = it is in fact the free boolean algebra on κ generators.
1	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	8	nsubj	_	_
2	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	_	_
3	in	in	ADP	E	_	4	case	_	_
4	fact	fact	NOUN	S	Number=Sing	8	nmod	_	_
5	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
6	free	free	ADJ	A	Degree=Pos	8	amod	_	_
7	boolean	boolean	ADJ	A	Degree=Pos	8	amod	_	_
8	algebra	algebra	NOUN	S	Number=Plur	0	root	_	_
9	on	on	ADP	E	_	11	case	_	_
10	κ	κ	NOUN	S	Number=Sing	11	nmod	_	_
11	generators	generator	NOUN	S	Number=Plur	8	nmod	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	8	punct	_	SpacesAfter=\s\s

# sent_id = 152
# text = a truth assignment in propositional calculus is then a boolean algebra homomorphism from this algebra to the two-element boolean algebra.
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
2	truth	truth	NOUN	S	Number=Sing	3	nmod	_	_
3	assignment	assignment	NOUN	S	Number=Sing	12	nsubj	_	_
4	in	in	ADP	E	_	6	case	_	_
5	propositional	propositional	ADJ	A	Degree=Pos	6	amod	_	_
6	calculus	calculus	NOUN	S	Number=Sing	3	nmod	_	_
7	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	cop	_	_
8	then	then	ADV	B	_	12	advmod	_	_
9	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	12	det	_	_
10	boolean	boolean	NOUN	S	Number=Sing	12	nmod	_	_
11	algebra	algebra	DET	RI	Definite=Ind|Number=Sing|PronType=Art	12	det	_	_
12	homomorphism	homomorphism	NOUN	S	Number=Sing	0	root	_	_
13	from	from	ADP	E	_	15	case	_	_
14	this	this	DET	DD	Number=Sing|PronType=Dem	15	det	_	_
15	algebra	algebra	NOUN	S	Number=Sing	12	nmod	_	_
16	to	to	ADP	E	_	21	case	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	21	det	_	_
18	two	two	NUM	N	NumType=Card	20	nummod	_	SpaceAfter=No
19	-	-	PUNCT	FF	_	20	punct	_	SpaceAfter=No
20	element	element	NOUN	S	Number=Sing	21	nmod	_	_
21	boolean	boolean	NOUN	S	Number=Sing	12	nmod	_	_
22	algebra	algebra	X	X	_	21	dep	_	SpaceAfter=No
23	.	.	PUNCT	FS	_	12	punct	_	SpacesAfter=\n

# sent_id = 153
# text = * given any linearly ordered set ''l'' with a least element, the interval algebra is the smallest algebra of subsets of ''l'' containing all of the half-open intervals ''a'', ''b'') such that ''a'' is in ''l'' and ''b'' is either in ''l'' or equal to ∞.
1	*	*	PUNCT	FF	_	22	punct	_	_
2	given	give	VERB	V	Tense=Past|VerbForm=Part	22	advcl	_	_
3	any	any	DET	DI	PronType=Ind	8	det	_	_
4	linearly	linearly	ADV	B	_	5	advmod	_	_
5	ordered	order	VERB	V	Tense=Past|VerbForm=Part	8	acl	_	_
6	set	set	NOUN	S	Number=Sing	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'l	'l	NOUN	S	Number=Sing	2	obj	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	_
11	with	with	ADP	E	_	14	case	_	_
12	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	14	det	_	_
13	least	least	ADV	B	Degree=Sup	14	advmod	_	_
14	element	element	NOUN	S	Number=Sing	2	obl	_	SpaceAfter=No
15	,	,	PUNCT	FF	_	2	punct	_	_
16	the	the	DET	RD	Definite=Def|PronType=Art	18	det	_	_
17	interval	interval	ADJ	A	Degree=Pos	18	amod	_	_
18	algebra	algebra	NOUN	S	Number=Sing	22	nsubj	_	_
19	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	22	cop	_	_
20	the	the	DET	RD	Definite=Def|PronType=Art	22	det	_	_
21	smallest	smallest	ADJ	A	Degree=Sup	22	amod	_	_
22	algebra	algebra	NOUN	S	Number=Sing	56	nsubj	_	_
23	of	of	ADP	E	_	24	case	_	_
24	subsets	subset	NOUN	S	Number=Plur	22	nmod	_	_
25	of	of	ADP	E	_	30	mark	_	_
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'l	'l	NOUN	S	Number=Sing	30	nmod	_	SpaceAfter=No
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'	'	PART	PART	_	27	case	_	_
30	containing	contain	VERB	V	VerbForm=Ger	24	acl	_	_
31	all	all	PRON	PI	PronType=Ind	30	obj	_	_
32	of	of	ADP	E	_	38	case	_	_
33	the	the	DET	RD	Definite=Def|PronType=Art	36	det	_	_
34	half-	half-	PUNCT	FF	_	36	punct	_	SpaceAfter=No
35	open	open	ADJ	A	Degree=Pos	36	amod	_	_
36	intervals	interval	NOUN	S	Number=Plur	38	nmod	_	_
37	'	'	PART	PART	_	36	case	_	SpaceAfter=No
38	'a	'a	NOUN	S	Number=Sing	31	nmod	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	38	punct	_	SpaceAfter=No
40	'	'	PUNCT	FB	_	31	punct	_	SpaceAfter=No
41	,	,	PUNCT	FF	_	30	punct	_	_
42	'	'	PART	PART	_	43	mark	_	SpaceAfter=No
43	'b	'b	VERB	V	VerbForm=Inf	30	advcl	_	SpaceAfter=No
44	'	'	PUNCT	FB	_	43	punct	_	SpaceAfter=No
45	'	'	PUNCT	FB	_	43	punct	_	SpaceAfter=No
46	)	)	PUNCT	FB	_	43	punct	_	_
47	such	such	DET	DD	PronType=Dem	50	det	_	_
48	that	that	PRON	PR	PronType=Rel	50	nmod	_	_
49	'	'	PART	PART	_	48	case	_	SpaceAfter=No
50	'a	'a	NOUN	S	Number=Plur	22	nmod	_	SpaceAfter=No
51	'	'	PART	PART	_	50	case	_	SpaceAfter=No
52	'	'	PART	PART	_	50	case	_	_
53	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	56	cop	_	_
54	in	in	ADP	E	_	56	mark	_	_
55	'	'	PART	PART	_	54	case	_	SpaceAfter=No
56	'l	'l	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
57	'	'	PART	PART	_	56	compound:prt	_	SpaceAfter=No
58	'	'	PART	PART	_	56	compound:prt	_	_
59	and	and	CCONJ	CC	_	61	cc	_	_
60	'	'	PART	PART	_	59	case	_	SpaceAfter=No
61	'b	'b	VERB	V	VerbForm=Inf	56	conj	_	SpaceAfter=No
62	'	'	PART	PART	_	61	case	_	SpaceAfter=No
63	'	'	PART	PART	_	61	compound:prt	_	_
64	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	68	cop	_	_
65	either	either	ADV	B	_	68	advmod	_	_
66	in	in	ADP	E	_	68	mark	_	_
67	'	'	PART	PART	_	66	case	_	SpaceAfter=No
68	'l	'l	VERB	V	VerbForm=Inf	61	ccomp	_	SpaceAfter=No
69	'	'	PART	PART	_	68	case	_	SpaceAfter=No
70	'	'	PART	PART	_	68	compound:prt	_	_
71	or	or	CCONJ	CC	_	72	cc	_	_
72	equal	equal	ADJ	A	Degree=Pos	68	conj	_	_
73	to	to	ADP	E	_	74	case	_	_
74	∞	∞	SYM	X	_	68	obl	_	SpaceAfter=No
75	.	.	PUNCT	FS	_	56	punct	_	SpacesAfter=\s\s

# sent_id = 154
# text = interval algebras are useful in the study of lindenbaum–tarski algebras;
1	interval	interval	ADJ	A	Degree=Pos	2	amod	_	_
2	algebras	algebra	NOUN	S	Number=Plur	4	nsubj	_	_
3	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	4	cop	_	_
4	useful	useful	ADJ	A	Degree=Pos	0	root	_	_
5	in	in	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	study	study	NOUN	S	Number=Sing	4	obl	_	_
8	of	of	ADP	E	_	9	case	_	_
9	lindenbaum	lindenbaum	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
10	–	–	PUNCT	FF	_	12	punct	_	SpaceAfter=No
11	tarski	tarski	ADJ	A	Degree=Pos	12	amod	_	_
12	algebras	algebra	NOUN	S	Number=Plur	7	nmod	_	SpaceAfter=No
13	;	;	PUNCT	FC	_	4	punct	_	_

# sent_id = 155
# text = every countable boolean algebra is isomorphic to an interval algebra.
1	every	every	DET	DI	Number=Sing|PronType=Ind	4	det	_	_
2	countable	countable	ADJ	A	Degree=Pos	4	amod	_	_
3	boolean	boolean	ADJ	A	Degree=Pos	4	amod	_	_
4	algebra	algebra	NOUN	S	Number=Plur	6	nsubj	_	_
5	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
6	isomorphic	isomorphic	ADJ	A	Degree=Pos	0	root	_	_
7	to	to	ADP	E	_	10	case	_	_
8	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	det	_	_
9	interval	interval	ADJ	A	Degree=Pos	10	amod	_	_
10	algebra	algebra	NOUN	S	Number=Sing	6	obl	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 156
# text = hasse diagram of the boolean algebra of divisors of 30.
1	hasse	hasse	VERB	V	Mood=Imp|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
2	diagram	diagram	NOUN	S	Number=Sing	1	obj	_	_
3	of	of	ADP	E	_	6	case	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	algebra	algebra	NOUN	S	Number=Sing	2	nmod	_	_
7	of	of	ADP	E	_	8	case	_	_
8	divisors	divisor	NOUN	S	Number=Plur	6	nmod	_	_
9	of	of	ADP	E	_	10	case	_	_
10	30	30	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 157
# text = * for any natural number ''n'', the set of all positive divisors of ''n'', defining ''a''≤''b'' if ''a'' divides ''b'', forms a distributive lattice.
1	*	*	PUNCT	FF	_	12	punct	_	_
2	for	for	ADP	E	_	5	case	_	_
3	any	any	DET	DI	PronType=Ind	5	det	_	_
4	natural	natural	ADJ	A	Degree=Pos	5	amod	_	_
5	number	number	NOUN	S	Number=Sing	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'n	'n	VERB	V	Tense=Past|VerbForm=Part	12	acl	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	7	compound:prt	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	7	punct	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
12	set	set	NOUN	S	Number=Sing	0	root	_	_
13	of	of	ADP	E	_	16	case	_	_
14	all	all	DET	T	PronType=Tot	16	det	_	_
15	positive	positive	ADJ	A	Degree=Pos	16	amod	_	_
16	divisors	divisor	NOUN	S	Number=Plur	12	nmod	_	_
17	of	of	ADP	E	_	19	mark	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'n	'n	VERB	V	Tense=Past|VerbForm=Part	16	acl	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'	'	PART	PART	_	19	compound:prt	_	SpaceAfter=No
22	,	,	PUNCT	FF	_	19	punct	_	_
23	defining	defin	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	19	advcl	_	_
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'a	'a	NOUN	S	Number=Plur	30	nmod	_	SpaceAfter=No
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'	'	PART	PART	_	25	case	_	SpaceAfter=No
28	≤	≤	SYM	X	_	30	nmod	_	SpaceAfter=No
29	'	'	PART	PART	_	28	case	_	SpaceAfter=No
30	'b	'b	VERB	V	VerbForm=Inf	23	xcomp	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	30	punct	_	_
33	if	if	SCONJ	CS	_	44	mark	_	_
34	'	'	PART	PART	_	33	case	_	SpaceAfter=No
35	'a	'a	NOUN	S	Number=Plur	40	nmod	_	SpaceAfter=No
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'	'	PART	PART	_	35	case	_	_
38	divides	divides	NOUN	S	Number=Plur	40	nmod	_	_
39	'	'	PART	PART	_	38	case	_	SpaceAfter=No
40	'b	'b	NOUN	S	Number=Sing	44	nsubj	_	SpaceAfter=No
41	'	'	PUNCT	FB	_	40	punct	_	SpaceAfter=No
42	'	'	PUNCT	FB	_	40	punct	_	SpaceAfter=No
43	,	,	PUNCT	FF	_	40	punct	_	_
44	forms	form	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	30	advcl	_	_
45	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	47	det	_	_
46	distributive	distributive	ADJ	A	Degree=Pos	47	amod	_	_
47	lattice	lattice	NOUN	S	Number=Sing	44	obj	_	SpaceAfter=No
48	.	.	PUNCT	FS	_	30	punct	_	_

# sent_id = 158
# text = this lattice is a boolean algebra if and only if ''n'' is square-free.
1	this	this	DET	DD	Number=Sing|PronType=Dem	2	det	_	_
2	lattice	lattice	NOUN	S	Number=Sing	6	nsubj	_	_
3	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	cop	_	_
4	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	6	det	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	algebra	algebra	NOUN	S	Number=Sing	0	root	_	_
7	if	if	SCONJ	CS	_	12	mark	_	_
8	and	and	CCONJ	CC	_	12	cc	_	_
9	only	only	ADV	B	_	12	advmod	_	_
10	if	if	SCONJ	CS	_	12	mark	_	_
11	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
12	'n	'n	VERB	V	Tense=Past|VerbForm=Part	6	acl	_	SpaceAfter=No
13	'	'	PART	PART	_	18	mark	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	_
15	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	18	cop	_	_
16	square	square	ADJ	A	Degree=Pos	18	amod	_	SpaceAfter=No
17	-	-	PUNCT	FF	_	18	punct	_	SpaceAfter=No
18	free	free	ADJ	A	Degree=Pos	12	advcl	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	6	punct	_	_

# sent_id = 159
# text = the bottom and the top element of this boolean algebra is the natural number 1 and ''n'', respectively.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	bottom	bottom	NOUN	S	Number=Sing	14	nsubj	_	_
3	and	and	CCONJ	CC	_	6	cc	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
5	top	top	ADJ	A	Degree=Pos	6	amod	_	_
6	element	element	NOUN	S	Number=Sing	2	conj	_	_
7	of	of	ADP	E	_	10	case	_	_
8	this	this	DET	DD	Number=Sing|PronType=Dem	10	det	_	_
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	algebra	algebra	NOUN	S	Number=Sing	6	nmod	_	_
11	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
13	natural	natural	ADJ	A	Degree=Pos	14	amod	_	_
14	number	number	NOUN	S	Number=Sing	0	root	_	_
15	1	1	NUM	N	NumType=Card	14	nummod	_	_
16	and	and	CCONJ	CC	_	18	cc	_	_
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'n	'n	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	14	conj	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	SpaceAfter=No
20	'	'	PART	PART	_	18	compound:prt	_	SpaceAfter=No
21	,	,	PUNCT	FF	_	18	punct	_	_
22	respectively	respectively	ADV	B	_	18	advmod	_	SpaceAfter=No
23	.	.	PUNCT	FS	_	14	punct	_	_

# sent_id = 160
# text = the complement of ''a'' is given by ''n''/''a''.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	complement	complement	NOUN	S	Number=Sing	9	nsubj:pass	_	_
3	of	of	ADP	E	_	5	case	_	_
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'a	'a	NOUN	S	Number=Plur	2	nmod	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'	'	PART	PART	_	5	case	_	_
8	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux:pass	_	_
9	given	give	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
10	by	by	ADP	E	_	12	mark	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'n	'n	VERB	V	Tense=Past|VerbForm=Part	9	advcl	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	12	case	_	SpaceAfter=No
15	/	/	PUNCT	FF	_	17	punct	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'a	'a	NOUN	S	Number=Plur	12	obl	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'	'	PART	PART	_	17	case	_	SpaceAfter=No
20	.	.	PUNCT	FS	_	9	punct	_	_

# sent_id = 161
# text = the meet and the join of ''a'' and ''b'' is given by the greatest common divisor (gcd) and the least common multiple (lcm) of ''a'' and ''b'', respectively.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	meet	meet	NOUN	S	Number=Sing	17	nsubj:pass	_	_
3	and	and	CCONJ	CC	_	5	cc	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
5	join	join	NOUN	S	Number=Sing	2	conj	_	_
6	of	of	ADP	E	_	13	mark	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'a	'a	NOUN	S	Number=Plur	13	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	_
11	and	and	CCONJ	CC	_	12	cc	_	_
12	'	'	PART	PART	_	8	conj	_	SpaceAfter=No
13	'b	'b	VERB	V	VerbForm=Inf	5	acl	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'	'	PART	PART	_	13	case	_	_
16	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	aux:pass	_	_
17	given	give	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
18	by	by	ADP	E	_	22	case	_	_
19	the	the	DET	RD	Definite=Def|PronType=Art	22	det	_	_
20	greatest	greatest	ADJ	A	Degree=Sup	22	amod	_	_
21	common	common	ADJ	A	Degree=Pos	22	amod	_	_
22	divisor	divisor	NOUN	S	Number=Sing	17	obl	_	_
23	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
24	gcd	gcd	ADJ	A	Degree=Pos	22	appos	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	24	punct	_	_
26	and	and	CCONJ	CC	_	30	cc	_	_
27	the	the	DET	RD	Definite=Def|PronType=Art	30	det	_	_
28	least	least	ADV	B	Degree=Sup	29	advmod	_	_
29	common	common	ADJ	A	Degree=Pos	30	amod	_	_
30	multiple	multiple	NOUN	S	Number=Sing	17	conj	_	_
31	(	(	PUNCT	FB	_	32	punct	_	SpaceAfter=No
32	lcm	lcm	NOUN	S	Number=Sing	30	appos	_	SpaceAfter=No
33	)	)	PUNCT	FB	_	32	punct	_	_
34	of	of	ADP	E	_	36	case	_	_
35	'	'	PART	PART	_	34	case	_	SpaceAfter=No
36	'a	'a	NOUN	S	Number=Plur	30	nmod	_	SpaceAfter=No
37	'	'	PART	PART	_	36	case	_	SpaceAfter=No
38	'	'	PART	PART	_	36	case	_	_
39	and	and	CCONJ	CC	_	41	cc	_	_
40	'	'	PART	PART	_	39	case	_	SpaceAfter=No
41	'b	'b	VERB	V	VerbForm=Inf	36	conj	_	SpaceAfter=No
42	'	'	PART	PART	_	41	case	_	SpaceAfter=No
43	'	'	PART	PART	_	41	compound:prt	_	SpaceAfter=No
44	,	,	PUNCT	FF	_	41	punct	_	_
45	respectively	respectively	ADV	B	_	41	advmod	_	SpaceAfter=No
46	.	.	PUNCT	FS	_	17	punct	_	_

# sent_id = 162
# text = the ring addition ''a''+''b'' is given by lcm(''a'',''b'')/gcd(''a'',''b'').
1	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	ring	r	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	3	acl	_	_
3	addition	addition	NOUN	S	Number=Sing	5	nmod	_	_
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'a	'a	NOUN	S	Number=Plur	10	nmod	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'	'	PART	PART	_	5	case	_	SpaceAfter=No
8	+	+	SYM	X	_	10	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'b	'b	NOUN	S	Number=Sing	14	nsubj:pass	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'	'	PART	PART	_	10	case	_	_
13	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	aux:pass	_	_
14	given	give	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
15	by	by	ADP	E	_	16	case	_	_
16	lcm	lcm	PRON	PE	Number=Plur|Person=3|PronType=Prs	14	obl	_	SpaceAfter=No
17	(	(	PUNCT	FB	_	19	punct	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'a	'a	NOUN	S	Number=Plur	14	obl	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'	'	PART	PART	_	19	case	_	SpaceAfter=No
22	,	,	PUNCT	FF	_	19	punct	_	SpaceAfter=No
23	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
24	'b	'b	VERB	V	VerbForm=Inf	19	acl	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
27	)	)	PUNCT	FB	_	24	punct	_	SpaceAfter=No
28	/	/	PUNCT	FF	_	19	punct	_	SpaceAfter=No
29	gcd	gc	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	19	acl	_	SpaceAfter=No
30	(	(	PUNCT	FB	_	32	punct	_	SpaceAfter=No
31	'	'	PART	PART	_	30	case	_	SpaceAfter=No
32	'a	'a	NOUN	S	Number=Plur	29	obl	_	SpaceAfter=No
33	'	'	PART	PART	_	32	case	_	SpaceAfter=No
34	'	'	PART	PART	_	32	case	_	SpaceAfter=No
35	,	,	PUNCT	FF	_	32	punct	_	SpaceAfter=No
36	'	'	PART	PART	_	37	mark	_	SpaceAfter=No
37	'b	'b	VERB	V	VerbForm=Inf	32	acl	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
40	)	)	PUNCT	FB	_	32	punct	_	SpaceAfter=No
41	.	.	PUNCT	FS	_	14	punct	_	_

# sent_id = 163
# text = the picture shows an example for ''n'' = 30.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	picture	picture	NOUN	S	Number=Sing	3	nsubj	_	_
3	shows	show	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	5	det	_	_
5	example	example	NOUN	S	Number=Sing	3	obj	_	_
6	for	for	ADP	E	_	8	mark	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'n	'n	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	3	advcl	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	11	case	_	_
11	=	=	SYM	X	_	8	obl	_	_
12	30	30	NUM	N	NumType=Card	11	nummod	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	3	punct	_	_

# sent_id = 164
# text = as a counter-example, considering the non-square-free ''n''=60, the greatest common divisor of 30 and its complement 2 would be 2, while it should be the bottom element 1.
1	as	as	ADP	E	_	5	case	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	5	det	_	_
3	counter	counter	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
4	-	-	PUNCT	FF	_	3	punct	_	SpaceAfter=No
5	example	example	NOUN	S	Number=Sing	7	obl	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	5	punct	_	_
7	considering	consider	VERB	V	VerbForm=Ger	0	root	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
9	non	non	ADV	BN	PronType=Neg	11	advmod	_	SpaceAfter=No
10	-	-	PUNCT	FF	_	11	punct	_	SpaceAfter=No
11	square	square	ADJ	A	Degree=Pos	13	amod	_	SpaceAfter=No
12	-	-	PUNCT	FF	_	13	punct	_	SpaceAfter=No
13	free	free	ADJ	A	Degree=Pos	14	amod	_	_
14	'	'	PART	PART	_	15	mark	_	SpaceAfter=No
15	'n	'n	VERB	V	VerbForm=Inf	7	ccomp	_	SpaceAfter=No
16	'	'	PART	PART	_	17	case	_	SpaceAfter=No
17	'=60	'=60	NOUN	S	_	15	obl	_	SpaceAfter=No
18	,	,	PUNCT	FF	_	17	punct	_	_
19	the	the	DET	RD	Definite=Def|PronType=Art	22	det	_	_
20	greatest	greatest	ADJ	A	Degree=Sup	22	amod	_	_
21	common	common	ADJ	A	Degree=Pos	22	amod	_	_
22	divisor	divisor	NOUN	S	Number=Sing	31	nsubj	_	_
23	of	of	ADP	E	_	24	case	_	_
24	30	30	NUM	N	NumType=Card	22	nmod	_	_
25	and	and	CCONJ	CC	_	27	cc	_	_
26	its	its	DET	AP	Number=Sing|Poss=Yes|PronType=Prs	27	nmod:poss	_	_
27	complement	complement	NOUN	S	Number=Sing	24	conj	_	_
28	2	2	NUM	N	NumType=Card	24	flat	_	_
29	would	will	AUX	VM	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	31	aux	_	_
30	be	be	AUX	V	VerbForm=Inf	31	cop	_	_
31	2	2	NUM	N	NumType=Card	17	nummod	_	SpaceAfter=No
32	,	,	PUNCT	FF	_	15	punct	_	_
33	while	while	SCONJ	CS	_	36	mark	_	_
34	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	36	nsubj	_	_
35	should	shall	AUX	VM	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	36	aux	_	_
36	be	be	VERB	V	VerbForm=Inf	15	advcl	_	_
37	the	the	DET	RD	Definite=Def|PronType=Art	39	det	_	_
38	bottom	bottom	NOUN	S	Number=Sing	39	nmod	_	_
39	element	element	NOUN	S	Number=Sing	36	obj	_	_
40	1	1	NUM	N	NumType=Card	39	nummod	_	SpaceAfter=No
41	.	.	PUNCT	FS	_	15	punct	_	SpacesAfter=\n

# sent_id = 165
# text = * other examples of boolean algebras arise from topological spaces:
1	*	*	PUNCT	FF	_	3	punct	_	_
2	other	other	ADJ	A	Degree=Pos	3	amod	_	_
3	examples	examples	NOUN	S	Number=Plur	7	nsubj	_	_
4	of	of	ADP	E	_	6	case	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	algebras	algebra	NOUN	S	Number=Plur	3	nmod	_	_
7	arise	arise	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
8	from	from	ADP	E	_	10	case	_	_
9	topological	topological	ADJ	A	Degree=Pos	10	amod	_	_
10	spaces	space	NOUN	S	Number=Plur	7	obl	_	SpaceAfter=No
11	:	:	PUNCT	FC	_	7	punct	_	_

# sent_id = 166
# text = if ''x'' is a topological space, then the collection of all subsets of ''x'' which are both open and closed forms a boolean algebra with the operations ∨ := ∪ (union) and ∧ := ∩ (intersection).
1	if	if	SCONJ	CS	_	9	mark	_	_
2	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
3	'x	'x	NOUN	S	Number=Sing	9	nmod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PART	PART	_	3	case	_	_
6	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	cop	_	_
7	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	9	det	_	_
8	topological	topological	ADJ	A	Degree=Pos	9	amod	_	_
9	space	space	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	9	punct	_	_
11	then	then	ADV	B	_	13	advmod	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
13	collection	collection	NOUN	S	Number=Sing	9	conj	_	_
14	of	of	ADP	E	_	16	case	_	_
15	all	all	DET	T	PronType=Tot	16	det	_	_
16	subsets	subset	NOUN	S	Number=Plur	13	nmod	_	_
17	of	of	ADP	E	_	31	case	_	_
18	'	'	PART	PART	_	31	case	_	SpaceAfter=No
19	'x	'x	NOUN	S	Number=Sing	31	nmod	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	_
22	which	which	PRON	PR	PronType=Rel	31	nsubj	_	_
23	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	25	cop	_	_
24	both	both	CCONJ	CC	_	25	cc	_	_
25	open	open	ADJ	A	Degree=Pos	31	amod	_	_
26	and	and	CCONJ	CC	_	28	cc	_	_
27	closed	closed	ADJ	A	Degree=Pos	28	amod	_	_
28	forms	form	NOUN	S	Number=Plur	25	conj	_	_
29	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	31	det	_	_
30	boolean	boolean	ADJ	A	Degree=Pos	31	amod	_	_
31	algebra	algebra	NOUN	S	Number=Sing	16	nmod	_	_
32	with	with	ADP	E	_	34	case	_	_
33	the	the	DET	RD	Definite=Def|PronType=Art	34	det	_	_
34	operations	operation	NOUN	S	Number=Plur	31	nmod	_	_
35	∨	∨	SYM	X	_	34	nmod	_	_
36	:	:	PUNCT	FC	_	38	punct	_	SpaceAfter=No
37	=	=	SYM	X	_	38	nmod	_	_
38	∪	∪	SYM	X	_	35	conj	_	_
39	(	(	PUNCT	FB	_	40	punct	_	SpaceAfter=No
40	union	union	NOUN	S	Number=Sing	38	appos	_	SpaceAfter=No
41	)	)	PUNCT	FB	_	40	punct	_	_
42	and	and	CCONJ	CC	_	43	cc	_	_
43	∧	∧	SYM	X	_	38	conj	_	_
44	:	:	PUNCT	FC	_	38	punct	_	SpaceAfter=No
45	=	=	SYM	X	_	46	nmod	_	_
46	∩	∩	SYM	X	_	38	conj	_	_
47	(	(	PUNCT	FB	_	48	punct	_	SpaceAfter=No
48	intersection	intersection	NOUN	S	Number=Sing	46	appos	_	SpaceAfter=No
49	)	)	PUNCT	FB	_	48	punct	_	SpaceAfter=No
50	.	.	PUNCT	FS	_	9	punct	_	SpacesAfter=\n

# sent_id = 167
# text = * if ''r'' is an arbitrary ring and we define the set of ''central idempotents'' by ''a'' = { ''e'' ∈ ''r'' : ''e''2 = ''e'', ''ex'' = ''xe'', ∀''x'' ∈ ''r'' } then the set ''a'' becomes a boolean algebra with the operations ''e'' ∨ ''f'' := ''e'' + ''f'' - ''ef'' and ''e'' ∧ ''f'' := ''ef''.
1	*	*	PUNCT	FF	_	10	punct	_	_
2	if	if	SCONJ	CS	_	4	mark	_	_
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'r	'r	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	10	acl	_	SpaceAfter=No
5	'	'	PART	PART	_	4	compound:prt	_	SpaceAfter=No
6	'	'	PART	PART	_	4	compound:prt	_	_
7	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	_	_
8	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	det	_	_
9	arbitrary	arbitrary	ADJ	A	Degree=Pos	10	amod	_	_
10	ring	ring	NOUN	S	Number=Sing	0	root	_	_
11	and	and	CCONJ	CC	_	13	cc	_	_
12	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	13	nsubj	_	_
13	define	define	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	10	conj	_	_
14	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
15	set	set	NOUN	S	Number=Sing	13	obj	_	_
16	of	of	ADP	E	_	31	mark	_	_
17	'	'	PART	PART	_	31	mark	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	central	central	ADJ	A	Degree=Pos	20	amod	_	_
20	idempotents	idempotent	NOUN	S	Number=Plur	31	nsubj	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'	'	PART	PART	_	31	mark	_	_
23	by	by	ADP	E	_	31	mark	_	SpacesAfter=\s\s
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'a	'a	NOUN	S	Number=Plur	28	nmod	_	SpaceAfter=No
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'	'	PART	PART	_	25	case	_	_
28	=	=	SYM	X	_	31	nsubj	_	_
29	{	{	PUNCT	FF	_	28	punct	_	_
30	'	'	PART	PART	_	28	case	_	SpaceAfter=No
31	'e	'e	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	15	acl	_	SpaceAfter=No
32	'	'	PART	PART	_	31	case	_	SpaceAfter=No
33	'	'	PART	PART	_	41	mark	_	_
34	∈	∈	SYM	X	_	36	nmod	_	_
35	'	'	PART	PART	_	34	case	_	SpaceAfter=No
36	'r	'r	NOUN	S	Number=Sing	41	nsubj	_	SpaceAfter=No
37	'	'	PART	PART	_	36	case	_	SpaceAfter=No
38	'	'	PART	PART	_	36	case	_	_
39	:	:	PUNCT	FC	_	36	punct	_	_
40	'	'	PART	PART	_	36	case	_	SpaceAfter=No
41	'e	'e	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	31	advcl	_	SpaceAfter=No
42	'	'	PART	PART	_	41	case	_	SpaceAfter=No
43	'2	'2	NUM	N	NumType=Card	44	nummod	_	_
44	=	=	SYM	X	_	46	nmod	_	_
45	'	'	PART	PART	_	44	case	_	SpaceAfter=No
46	'e	'e	VERB	V	VerbForm=Inf	41	xcomp	_	SpaceAfter=No
47	'	'	PUNCT	FB	_	46	punct	_	SpaceAfter=No
48	'	'	PUNCT	FB	_	46	punct	_	SpaceAfter=No
49	,	,	PUNCT	FF	_	46	punct	_	_
50	'	'	PUNCT	FB	_	46	punct	_	SpaceAfter=No
51	'	'	PART	PART	_	46	compound:prt	_	SpaceAfter=No
52	ex	ex	VERB	V	VerbForm=Inf	46	advcl	_	SpaceAfter=No
53	'	'	PART	PART	_	52	case	_	SpaceAfter=No
54	'	'	PART	PART	_	52	case	_	_
55	=	=	SYM	X	_	57	nmod	_	_
56	'	'	PART	PART	_	55	case	_	SpaceAfter=No
57	'xe	'xe	VERB	V	VerbForm=Inf	52	xcomp	_	SpaceAfter=No
58	'	'	PUNCT	FB	_	57	punct	_	SpaceAfter=No
59	'	'	PUNCT	FB	_	57	punct	_	SpaceAfter=No
60	,	,	PUNCT	FF	_	57	punct	_	_
61	∀	∀	SYM	X	_	63	mark	_	SpaceAfter=No
62	'	'	PART	PART	_	61	case	_	SpaceAfter=No
63	'x	'x	VERB	V	VerbForm=Inf	57	advcl	_	SpaceAfter=No
64	'	'	PART	PART	_	63	case	_	SpaceAfter=No
65	'	'	PART	PART	_	63	case	_	_
66	∈	∈	SYM	X	_	68	mark	_	_
67	'	'	PART	PART	_	66	case	_	SpaceAfter=No
68	'r	'r	VERB	V	VerbForm=Inf	63	xcomp	_	SpaceAfter=No
69	'	'	PART	PART	_	68	case	_	SpaceAfter=No
70	'	'	PART	PART	_	68	compound:prt	_	_
71	}	}	PUNCT	FF	_	68	punct	_	SpacesAfter=\s\s
72	then	then	ADV	B	_	79	advmod	_	_
73	the	the	DET	RD	Definite=Def|PronType=Art	76	det	_	_
74	set	set	NOUN	S	Number=Sing	76	nmod	_	_
75	'	'	PART	PART	_	74	case	_	SpaceAfter=No
76	'a	'a	NOUN	S	Number=Sing	79	nsubj	_	SpaceAfter=No
77	'	'	PUNCT	FB	_	76	punct	_	SpaceAfter=No
78	'	'	PART	PART	_	76	case	_	_
79	becomes	become	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	68	advcl	_	_
80	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	82	det	_	_
81	boolean	boolean	ADJ	A	Degree=Pos	82	amod	_	_
82	algebra	algebra	NOUN	S	Number=Sing	79	obj	_	_
83	with	with	ADP	E	_	85	case	_	_
84	the	the	DET	RD	Definite=Def|PronType=Art	85	det	_	_
85	operations	operation	NOUN	S	Number=Plur	79	obl	_	_
86	'	'	PART	PART	_	85	case	_	SpaceAfter=No
87	'e	'e	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	79	advcl	_	SpaceAfter=No
88	'	'	PART	PART	_	87	case	_	SpaceAfter=No
89	'	'	PART	PART	_	87	case	_	_
90	∨	∨	SYM	X	_	92	nmod	_	_
91	'	'	PART	PART	_	90	case	_	SpaceAfter=No
92	'f	'f	NOUN	S	Gender=Masc|Number=Sing	102	nmod	_	SpaceAfter=No
93	'	'	PART	PART	_	92	case	_	SpaceAfter=No
94	'	'	PART	PART	_	92	case	_	_
95	:=	:=	NOUN	S	Number=Sing	97	nmod	_	_
96	'	'	PART	PART	_	95	case	_	SpaceAfter=No
97	'e	'e	NOUN	S	Number=Sing	102	nmod	_	SpaceAfter=No
98	'	'	PART	PART	_	97	case	_	SpaceAfter=No
99	'	'	PART	PART	_	97	case	_	_
100	+	+	SYM	X	_	102	nmod	_	_
101	'	'	PART	PART	_	100	case	_	SpaceAfter=No
102	'f	'f	NOUN	S	Gender=Masc|Number=Sing	108	nmod	_	SpaceAfter=No
103	'	'	PART	PART	_	102	case	_	SpaceAfter=No
104	'	'	PART	PART	_	102	case	_	_
105	-	-	PUNCT	FB	_	102	punct	_	_
106	'	'	PART	PART	_	102	case	_	SpaceAfter=No
107	'	'	PART	PART	_	102	case	_	SpaceAfter=No
108	ef	ef	NOUN	S	Gender=Masc|Number=Sing	113	nmod	_	SpaceAfter=No
109	'	'	PART	PART	_	108	case	_	SpaceAfter=No
110	'	'	PART	PART	_	108	case	_	_
111	and	and	CCONJ	CC	_	112	cc	_	_
112	'	'	PART	PART	_	108	conj	_	SpaceAfter=No
113	'e	'e	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	87	xcomp	_	SpaceAfter=No
114	'	'	PART	PART	_	113	case	_	SpaceAfter=No
115	'	'	PART	PART	_	113	case	_	_
116	∧	∧	SYM	X	_	118	nmod	_	_
117	'	'	PART	PART	_	116	case	_	SpaceAfter=No
118	'f	'f	NOUN	S	Gender=Masc|Number=Sing	121	nmod	_	SpaceAfter=No
119	'	'	PART	PART	_	118	case	_	SpaceAfter=No
120	'	'	PART	PART	_	118	case	_	_
121	:=	:=	NOUN	S	Number=Sing	113	obl	_	_
122	'	'	PART	PART	_	121	case	_	SpaceAfter=No
123	'	'	PART	PART	_	121	case	_	SpaceAfter=No
124	ef	ef	ADV	B	_	121	advmod	_	SpaceAfter=No
125	'	'	PUNCT	FB	_	124	punct	_	SpaceAfter=No
126	'	'	PUNCT	FB	_	124	punct	_	SpaceAfter=No
127	.	.	PUNCT	FS	_	57	punct	_	SpacesAfter=\n\s\n\n

# newpar
# sent_id = 168
# text = a ''homomorphism'' between two boolean algebras ''a'' and ''b'' is a function ''f'' : ''a'' → ''b'' such that for all ''a'', ''b'' in ''a'':
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	7	det	_	_
2	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	homomorphism	homomorphism	NOUN	S	Number=Sing	7	nmod	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'	'	PART	PART	_	4	case	_	_
7	between	between	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
8	two	two	NUM	N	NumType=Card	10	nummod	_	_
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	algebras	algebra	NOUN	S	Number=Plur	12	nmod	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'a	'a	NOUN	S	Number=Plur	7	obj	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	12	case	_	_
15	and	and	CCONJ	CC	_	17	cc	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'b	'b	VERB	V	VerbForm=Inf	7	conj	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'	'	PART	PART	_	17	case	_	_
20	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	34	cop	_	_
21	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	22	det	_	_
22	function	function	NOUN	S	Number=Sing	29	nmod	_	_
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'f	'f	ADV	B	_	29	advmod	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	24	punct	_	_
27	:	:	PUNCT	FC	_	24	punct	_	_
28	'	'	PART	PART	_	24	case	_	SpaceAfter=No
29	'a	'a	NOUN	S	Number=Plur	32	nmod	_	SpaceAfter=No
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'	'	PART	PART	_	29	case	_	_
32	→	→	SYM	X	_	34	nmod	_	_
33	'	'	PART	PART	_	32	case	_	SpaceAfter=No
34	'b	'b	VERB	V	VerbForm=Inf	17	advcl	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	34	punct	_	_
37	such	such	DET	DD	PronType=Dem	38	det	_	_
38	that	that	PRON	PR	PronType=Rel	47	nsubj	_	_
39	for	for	ADP	E	_	40	case	_	_
40	all	all	PRON	PI	PronType=Ind	47	obl	_	_
41	'	'	PUNCT	FB	_	40	punct	_	SpaceAfter=No
42	'a	'a	X	SW	_	47	obl	_	SpaceAfter=No
43	'	'	PUNCT	FB	_	42	punct	_	SpaceAfter=No
44	'	'	PUNCT	FB	_	42	punct	_	SpaceAfter=No
45	,	,	PUNCT	FF	_	42	punct	_	_
46	'	'	PART	PART	_	42	case	_	SpaceAfter=No
47	'b	'b	VERB	V	VerbForm=Inf	34	ccomp	_	SpaceAfter=No
48	'	'	PART	PART	_	47	case	_	SpaceAfter=No
49	'	'	PART	PART	_	52	case	_	_
50	in	in	ADP	E	_	52	case	_	_
51	'	'	PUNCT	FB	_	52	punct	_	SpaceAfter=No
52	'a	'a	NOUN	S	Number=Plur	47	obl	_	SpaceAfter=No
53	'	'	PART	PART	_	52	case	_	SpaceAfter=No
54	'	'	PART	PART	_	52	case	_	SpaceAfter=No
55	:	:	PUNCT	FC	_	52	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 169
# text = : ''f''(''a'' ∨ ''b'') = ''f''(''a'') ∨ ''f''(''b''), : ''f''(''a'' ∧ ''b'') = ''f''(''a'') ∧ ''f''(''b''), : ''f''(0) = 0, : ''f''(1) = 1.
1	:	:	PUNCT	FC	_	13	punct	_	_
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'f	'f	ADV	B	_	13	advmod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
8	'a	'a	PROPN	SP	_	11	nmod	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	_
11	∨	∨	SYM	X	_	13	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'b	'b	VERB	V	VerbForm=Inf	52	advcl	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	_
17	=	=	SYM	X	_	52	obl	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'f	'f	ADV	B	_	52	advmod	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
22	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
24	'a	'a	PROPN	SP	_	52	nsubj	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
27	)	)	PUNCT	FB	_	24	punct	_	_
28	∨	∨	SYM	X	_	24	nmod	_	_
29	'	'	PART	PART	_	28	case	_	SpaceAfter=No
30	'f	'f	ADV	B	_	35	advmod	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
33	(	(	PUNCT	FB	_	35	punct	_	SpaceAfter=No
34	'	'	PART	PART	_	35	mark	_	SpaceAfter=No
35	'b	'b	VERB	V	VerbForm=Inf	28	acl	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	35	punct	_	SpaceAfter=No
39	,	,	PUNCT	FF	_	24	punct	_	SpacesAfter=\n
40	:	:	PUNCT	FC	_	24	punct	_	_
41	'	'	PART	PART	_	24	case	_	SpaceAfter=No
42	'f	'f	ADV	B	_	52	advmod	_	SpaceAfter=No
43	'	'	PUNCT	FB	_	42	punct	_	SpaceAfter=No
44	'	'	PUNCT	FB	_	42	punct	_	SpaceAfter=No
45	(	(	PUNCT	FB	_	46	punct	_	SpaceAfter=No
46	'	'	PUNCT	FB	_	52	punct	_	SpaceAfter=No
47	'a	'a	PROPN	SP	_	50	nmod	_	SpaceAfter=No
48	'	'	PUNCT	FB	_	47	punct	_	SpaceAfter=No
49	'	'	PUNCT	FB	_	47	punct	_	_
50	∧	∧	SYM	X	_	52	nmod	_	_
51	'	'	PART	PART	_	50	case	_	SpaceAfter=No
52	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
53	'	'	PUNCT	FB	_	52	punct	_	SpaceAfter=No
54	'	'	PUNCT	FB	_	52	punct	_	SpaceAfter=No
55	)	)	PUNCT	FB	_	52	punct	_	_
56	=	=	SYM	X	_	92	nmod	_	_
57	'	'	PART	PART	_	56	case	_	SpaceAfter=No
58	'f	'f	ADV	B	_	92	advmod	_	SpaceAfter=No
59	'	'	PUNCT	FB	_	58	punct	_	SpaceAfter=No
60	'	'	PUNCT	FB	_	58	punct	_	SpaceAfter=No
61	(	(	PUNCT	FB	_	63	punct	_	SpaceAfter=No
62	'	'	PUNCT	FB	_	63	punct	_	SpaceAfter=No
63	'a	'a	PROPN	SP	_	81	nmod	_	SpaceAfter=No
64	'	'	PUNCT	FB	_	63	punct	_	SpaceAfter=No
65	'	'	PUNCT	FB	_	63	punct	_	SpaceAfter=No
66	)	)	PUNCT	FB	_	63	punct	_	_
67	∧	∧	SYM	X	_	63	nmod	_	_
68	'	'	PART	PART	_	67	case	_	SpaceAfter=No
69	'f	'f	ADV	B	_	74	advmod	_	SpaceAfter=No
70	'	'	PUNCT	FB	_	69	punct	_	SpaceAfter=No
71	'	'	PUNCT	FB	_	69	punct	_	SpaceAfter=No
72	(	(	PUNCT	FB	_	74	punct	_	SpaceAfter=No
73	'	'	PART	PART	_	74	mark	_	SpaceAfter=No
74	'b	'b	VERB	V	VerbForm=Inf	67	acl	_	SpaceAfter=No
75	'	'	PUNCT	FB	_	74	punct	_	SpaceAfter=No
76	'	'	PUNCT	FB	_	74	punct	_	SpaceAfter=No
77	)	)	PUNCT	FB	_	74	punct	_	SpaceAfter=No
78	,	,	PUNCT	FF	_	63	punct	_	SpacesAfter=\n
79	:	:	PUNCT	FC	_	63	punct	_	_
80	'	'	PART	PART	_	63	case	_	SpaceAfter=No
81	'f	'f	NOUN	S	Gender=Masc|Number=Sing	92	nmod	_	SpaceAfter=No
82	'	'	PUNCT	FB	_	81	punct	_	SpaceAfter=No
83	'	'	PUNCT	FB	_	81	punct	_	SpaceAfter=No
84	(	(	PUNCT	FB	_	85	punct	_	SpaceAfter=No
85	0	0	NUM	N	NumType=Card	81	nummod	_	SpaceAfter=No
86	)	)	PUNCT	FB	_	85	punct	_	_
87	=	=	SYM	X	_	92	nmod	_	_
88	0	0	NUM	N	NumType=Card	87	nummod	_	SpaceAfter=No
89	,	,	PUNCT	FF	_	87	punct	_	SpacesAfter=\n
90	:	:	PUNCT	FC	_	87	punct	_	_
91	'	'	PART	PART	_	87	case	_	SpaceAfter=No
92	'f	'f	NOUN	S	Gender=Masc|Number=Sing	52	obj	_	SpaceAfter=No
93	'	'	PUNCT	FB	_	92	punct	_	SpaceAfter=No
94	'	'	PUNCT	FB	_	92	punct	_	SpaceAfter=No
95	(	(	PUNCT	FB	_	96	punct	_	SpaceAfter=No
96	1	1	NUM	N	NumType=Card	92	nummod	_	SpaceAfter=No
97	)	)	PUNCT	FB	_	96	punct	_	_
98	=	=	SYM	X	_	92	nmod	_	_
99	1	1	NUM	N	NumType=Card	98	nummod	_	SpaceAfter=No
100	.	.	PUNCT	FS	_	52	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 170
# text = it then follows that ''f''(¬''a'') = ¬''f''(''a'') for all ''a'' in ''a''.
1	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	3	nsubj	_	_
2	then	then	ADV	B	_	3	advmod	_	_
3	follows	follow	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	that	that	SCONJ	CS	_	12	mark	_	_
5	'	'	PART	PART	_	12	case	_	SpaceAfter=No
6	'f	'f	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
9	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
10	¬	¬	SYM	X	_	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'a	'a	NOUN	S	Number=Plur	3	ccomp	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	12	case	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	12	punct	_	_
16	=	=	SYM	X	_	24	nmod	_	_
17	¬	¬	SYM	X	_	24	nmod	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'f	'f	ADV	B	_	24	advmod	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
22	(	(	PUNCT	FB	_	23	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
24	'a	'a	NOUN	S	Number=Plur	12	nmod	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	SpaceAfter=No
26	'	'	PART	PART	_	24	case	_	SpaceAfter=No
27	)	)	PUNCT	FB	_	24	punct	_	_
28	for	for	ADP	E	_	31	case	_	_
29	all	all	PRON	PI	PronType=Ind	31	nmod	_	_
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'a	'a	NOUN	S	Number=Plur	12	nmod	_	SpaceAfter=No
32	'	'	PART	PART	_	31	case	_	SpaceAfter=No
33	'	'	PART	PART	_	31	case	_	_
34	in	in	ADP	E	_	36	case	_	_
35	'	'	PART	PART	_	36	mark	_	SpaceAfter=No
36	'a	'a	NOUN	S	Number=Plur	12	nmod	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
39	.	.	PUNCT	FS	_	3	punct	_	_

# sent_id = 171
# text = the class of all boolean algebras, together with this notion of morphism, forms a full subcategory of the category of lattices.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	class	class	NOUN	S	Number=Sing	15	nsubj	_	_
3	of	of	ADP	E	_	6	case	_	_
4	all	all	DET	T	PronType=Tot	6	det	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	algebras	algebra	NOUN	S	Number=Plur	2	nmod	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	6	punct	_	_
8	together	together	ADV	B	_	6	advmod	_	_
9	with	with	ADP	E	_	11	case	_	_
10	this	this	DET	DD	Number=Sing|PronType=Dem	11	det	_	_
11	notion	notion	NOUN	S	Number=Sing	2	nmod	_	_
12	of	of	ADP	E	_	13	case	_	_
13	morphism	morphism	NOUN	S	Number=Sing	11	nmod	_	SpaceAfter=No
14	,	,	PUNCT	FF	_	2	punct	_	_
15	forms	form	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
16	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	18	det	_	_
17	full	full	ADJ	A	Degree=Pos	18	amod	_	_
18	subcategory	subcategory	NOUN	S	Number=Sing	15	obj	_	_
19	of	of	ADP	E	_	21	case	_	_
20	the	the	DET	RD	Definite=Def|PronType=Art	21	det	_	_
21	category	category	NOUN	S	Number=Sing	18	nmod	_	_
22	of	of	ADP	E	_	23	case	_	_
23	lattices	lattice	NOUN	S	Number=Plur	21	nmod	_	SpaceAfter=No
24	.	.	PUNCT	FS	_	15	punct	_	SpacesAfter=\n\n\n

# newpar
# sent_id = 172
# text = an ''isomorphism'' between two boolean algebras ''a'' and ''b'' is a homomorphism ''f'' : ''a'' → ''b'' with an inverse homomorphism, that is, a homomorphism ''g'' : ''b'' → ''a'' such that the composition ''g'' ◌ ''f'':
1	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	4	det	_	_
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
4	isomorphism	isomorphism	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PART	PART	_	4	compound:prt	_	SpaceAfter=No
6	'	'	PART	PART	_	4	compound:prt	_	_
7	between	between	ADP	E	_	12	case	_	_
8	two	two	NUM	N	NumType=Card	10	nummod	_	_
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	algebras	algebra	NOUN	S	Number=Plur	12	nmod	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'a	'a	NOUN	S	Number=Plur	4	obl	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	12	case	_	_
15	and	and	CCONJ	CC	_	16	cc	_	_
16	'	'	PART	PART	_	4	conj	_	SpaceAfter=No
17	'b	'b	VERB	V	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'	'	PART	PART	_	17	case	_	_
20	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	34	cop	_	_
21	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	22	det	_	_
22	homomorphism	homomorphism	NOUN	S	Number=Sing	24	obl	_	_
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'f	'f	ADV	B	_	29	advmod	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	24	punct	_	_
27	:	:	PUNCT	FC	_	24	punct	_	_
28	'	'	PART	PART	_	24	case	_	SpaceAfter=No
29	'a	'a	NOUN	S	Number=Plur	32	nmod	_	SpaceAfter=No
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'	'	PART	PART	_	29	case	_	_
32	→	→	SYM	X	_	34	nmod	_	_
33	'	'	PART	PART	_	32	case	_	SpaceAfter=No
34	'b	'b	VERB	V	VerbForm=Inf	17	advcl	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	34	punct	_	_
37	with	with	ADP	E	_	40	case	_	_
38	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	40	det	_	_
39	inverse	inverse	ADJ	A	Degree=Pos	40	amod	_	_
40	homomorphism	homomorphism	NOUN	S	Number=Sing	34	obl	_	SpaceAfter=No
41	,	,	PUNCT	FF	_	34	punct	_	_
42	that	that	PRON	PR	PronType=Rel	48	nmod	_	_
43	is	be	VERB	V	Mood=Ind|Tense=Pres|VerbForm=Fin	42	fixed	_	SpaceAfter=No
44	,	,	PUNCT	FF	_	42	punct	_	_
45	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	46	det	_	_
46	homomorphism	homomorphism	NOUN	S	Number=Sing	48	nmod	_	_
47	'	'	PART	PART	_	46	case	_	SpaceAfter=No
48	'g	'g	VERB	V	VerbForm=Inf	34	conj	_	SpaceAfter=No
49	'	'	PUNCT	FB	_	48	punct	_	SpaceAfter=No
50	'	'	PUNCT	FB	_	48	punct	_	_
51	:	:	PUNCT	FC	_	48	punct	_	_
52	'	'	PART	PART	_	53	mark	_	SpaceAfter=No
53	'b	'b	VERB	V	VerbForm=Inf	48	advcl	_	SpaceAfter=No
54	'	'	PUNCT	FB	_	53	punct	_	SpaceAfter=No
55	'	'	PUNCT	FB	_	53	punct	_	_
56	→	→	SYM	X	_	58	nmod	_	_
57	'	'	PART	PART	_	56	case	_	SpaceAfter=No
58	'a	'a	NOUN	S	Number=Plur	53	obj	_	SpaceAfter=No
59	'	'	PUNCT	FB	_	58	punct	_	SpaceAfter=No
60	'	'	PUNCT	FB	_	58	punct	_	_
61	such	such	DET	DD	PronType=Dem	66	mark	_	_
62	that	that	SCONJ	CS	_	61	fixed	_	_
63	the	the	DET	RD	Definite=Def|PronType=Art	64	det	_	_
64	composition	composition	NOUN	S	Number=Sing	66	nmod	_	_
65	'	'	PART	PART	_	64	case	_	SpaceAfter=No
66	'g	'g	VERB	V	VerbForm=Inf	58	advcl	_	SpaceAfter=No
67	'	'	PUNCT	FB	_	66	punct	_	SpaceAfter=No
68	'	'	PUNCT	FB	_	66	punct	_	_
69	◌	◌	SYM	X	_	71	nmod	_	_
70	'	'	PART	PART	_	69	case	_	SpaceAfter=No
71	'f	'f	NOUN	S	Gender=Masc|Number=Sing	66	obj	_	SpaceAfter=No
72	'	'	PUNCT	FB	_	71	punct	_	SpaceAfter=No
73	'	'	PUNCT	FB	_	71	punct	_	SpaceAfter=No
74	:	:	PUNCT	FC	_	66	punct	_	_

# sent_id = 173
# text = ''a'' → ''a'' is the identity function on ''a'', and the composition ''f'' ◌ ''g'':
1	'	'	PART	PART	_	13	mark	_	SpaceAfter=No
2	'a	'a	NOUN	S	Number=Plur	7	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	_
5	→	→	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'a	'a	NOUN	S	Number=Plur	13	nsubj	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	7	case	_	_
10	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	cop	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
12	identity	identity	NOUN	S	Number=Sing	13	nmod	_	_
13	function	function	NOUN	S	Number=Sing	0	root	_	_
14	on	on	ADP	E	_	16	case	_	_
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'a	'a	NOUN	S	Number=Plur	13	nmod	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	16	case	_	SpaceAfter=No
19	,	,	PUNCT	FF	_	29	punct	_	_
20	and	and	CCONJ	CC	_	29	cc	_	_
21	the	the	DET	RD	Definite=Def|PronType=Art	22	det	_	_
22	composition	composition	NOUN	S	Number=Sing	29	nsubj	_	_
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'f	'f	ADV	B	_	29	advmod	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	24	punct	_	_
27	◌	◌	SYM	X	_	29	nmod	_	_
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'g	'g	VERB	V	VerbForm=Inf	13	conj	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
32	:	:	PUNCT	FC	_	29	punct	_	_

# sent_id = 174
# text = ''b'' → ''b'' is the identity function on ''b''.
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'b	'b	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	7	mark	_	_
5	→	→	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'b	'b	VERB	V	VerbForm=Inf	13	acl	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	_
10	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	cop	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	13	det	_	_
12	identity	identity	NOUN	S	Number=Sing	13	nmod	_	_
13	function	function	NOUN	S	Number=Sing	2	obj	_	_
14	on	on	ADP	E	_	16	mark	_	_
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'b	'b	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\s\s

# sent_id = 175
# text = a homomorphism of boolean algebras is an isomorphism if and only if it is bijective.
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	homomorphism	homomorphism	NOUN	S	Number=Sing	8	nsubj	_	_
3	of	of	ADP	E	_	5	case	_	_
4	boolean	boolean	ADJ	A	Degree=Pos	5	amod	_	_
5	algebras	algebra	NOUN	S	Number=Plur	2	nmod	_	_
6	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	cop	_	_
7	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	8	det	_	_
8	isomorphism	isomorphism	NOUN	S	Number=Sing	0	root	_	_
9	if	if	SCONJ	CS	_	15	mark	_	_
10	and	and	CCONJ	CC	_	15	cc	_	_
11	only	only	ADV	B	_	15	advmod	_	_
12	if	if	SCONJ	CS	_	15	mark	_	_
13	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	15	nsubj	_	_
14	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	cop	_	_
15	bijective	bijective	ADJ	A	Degree=Pos	8	acl	_	SpaceAfter=No
16	.	.	PUNCT	FS	_	8	punct	_	SpacesAfter=\n\s\n

# newpar
# sent_id = 176
# text = every boolean algebra (''a'', ∧, ∨) gives rise to a ring (''a'', +, ·) by defining ''a'' + ''b'' := (''a'' ∧ ¬''b'') ∨ (''b'' ∧ ¬''a'') = (''a'' ∨ ''b'') ∧ ¬(''a'' ∧ ''b'') (this operation is called symmetric difference in the case of sets and xor in the case of logic) and ''a'' · ''b'' := ''a'' ∧ ''b''.
1	every	every	DET	DI	Number=Sing|PronType=Ind	2	det	_	_
2	boolean	boolean	NOUN	S	Number=Sing	14	nsubj	_	_
3	algebra	algebra	ADP	E	_	6	case	_	_
4	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
6	'a	'a	PROPN	SP	_	2	nmod	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	10	punct	_	_
10	∧	∧	SYM	X	_	6	conj	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	12	punct	_	_
12	∨	∨	SYM	X	_	6	conj	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	6	punct	_	_
14	gives	give	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
15	rise	rise	NOUN	S	Number=Sing	14	obj	_	_
16	to	to	ADP	E	_	18	case	_	_
17	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	18	det	_	_
18	ring	ring	NOUN	S	_	14	obl	_	_
19	(	(	PUNCT	FB	_	21	punct	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'a	'a	NOUN	S	Number=Plur	18	nmod	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'	'	PART	PART	_	21	case	_	SpaceAfter=No
24	,	,	PUNCT	FF	_	25	punct	_	_
25	+	+	SYM	X	_	21	conj	_	SpaceAfter=No
26	,	,	PUNCT	FF	_	21	punct	_	_
27	·	·	PUNCT	_	_	21	punct	_	SpaceAfter=No
28	)	)	PUNCT	FB	_	21	punct	_	_
29	by	by	ADP	E	_	30	mark	_	_
30	defining	defining	VERB	V	VerbForm=Ger	14	advcl	_	_
31	'	'	PART	PART	_	30	case	_	SpaceAfter=No
32	'a	'a	NOUN	S	Number=Plur	37	obl	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	32	punct	_	_
35	+	+	SYM	X	_	37	nmod	_	_
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'b	'b	VERB	V	VerbForm=Inf	30	xcomp	_	SpaceAfter=No
38	'	'	PART	PART	_	40	mark	_	SpaceAfter=No
39	'	'	PART	PART	_	38	case	_	_
40	:=	:=	NOUN	S	Number=Sing	37	obj	_	_
41	(	(	PUNCT	FB	_	49	punct	_	SpaceAfter=No
42	'	'	PUNCT	FB	_	49	punct	_	SpaceAfter=No
43	'a	'a	PROPN	SP	_	46	nmod	_	SpaceAfter=No
44	'	'	PUNCT	FB	_	43	punct	_	SpaceAfter=No
45	'	'	PUNCT	FB	_	43	punct	_	_
46	∧	∧	SYM	X	_	49	nmod	_	_
47	¬	¬	SYM	X	_	49	nmod	_	SpaceAfter=No
48	'	'	PART	PART	_	47	case	_	SpaceAfter=No
49	'b	'b	VERB	V	VerbForm=Inf	40	acl	_	SpaceAfter=No
50	'	'	PUNCT	FB	_	49	punct	_	SpaceAfter=No
51	'	'	PUNCT	FB	_	49	punct	_	SpaceAfter=No
52	)	)	PUNCT	FB	_	49	punct	_	_
53	∨	∨	SYM	X	_	56	mark	_	_
54	(	(	PUNCT	FB	_	56	punct	_	SpaceAfter=No
55	'	'	PART	PART	_	56	mark	_	SpaceAfter=No
56	'b	'b	VERB	V	VerbForm=Inf	49	advcl	_	SpaceAfter=No
57	'	'	PART	PART	_	74	mark	_	SpaceAfter=No
58	'	'	PART	PART	_	57	case	_	_
59	∧	∧	SYM	X	_	62	nmod	_	_
60	¬	¬	SYM	X	_	62	nmod	_	SpaceAfter=No
61	'	'	PART	PART	_	60	case	_	SpaceAfter=No
62	'a	'a	NOUN	S	Number=Plur	74	nmod	_	SpaceAfter=No
63	'	'	PUNCT	FB	_	62	punct	_	SpaceAfter=No
64	'	'	PUNCT	FB	_	62	punct	_	SpaceAfter=No
65	)	)	PUNCT	FB	_	62	punct	_	_
66	=	=	SYM	X	_	74	mark	_	_
67	(	(	PUNCT	FB	_	74	punct	_	SpaceAfter=No
68	'	'	PUNCT	FB	_	69	punct	_	SpaceAfter=No
69	'a	'a	PROPN	SP	_	72	nmod	_	SpaceAfter=No
70	'	'	PUNCT	FB	_	69	punct	_	SpaceAfter=No
71	'	'	PUNCT	FB	_	69	punct	_	_
72	∨	∨	SYM	X	_	74	nmod	_	_
73	'	'	PART	PART	_	72	case	_	SpaceAfter=No
74	'b	'b	VERB	V	VerbForm=Inf	56	xcomp	_	SpaceAfter=No
75	'	'	PUNCT	FB	_	74	punct	_	SpaceAfter=No
76	'	'	PUNCT	FB	_	74	punct	_	SpaceAfter=No
77	)	)	PUNCT	FB	_	74	punct	_	_
78	∧	∧	SYM	X	_	87	mark	_	_
79	¬	¬	SYM	X	_	87	mark	_	SpaceAfter=No
80	(	(	PUNCT	FB	_	87	punct	_	SpaceAfter=No
81	'	'	PUNCT	FB	_	87	punct	_	SpaceAfter=No
82	'a	'a	PROPN	SP	_	85	nmod	_	SpaceAfter=No
83	'	'	PUNCT	FB	_	82	punct	_	SpaceAfter=No
84	'	'	PUNCT	FB	_	82	punct	_	_
85	∧	∧	SYM	X	_	87	nmod	_	_
86	'	'	PART	PART	_	85	case	_	SpaceAfter=No
87	'b	'b	VERB	V	VerbForm=Inf	74	advcl	_	SpaceAfter=No
88	'	'	PUNCT	FB	_	87	punct	_	SpaceAfter=No
89	'	'	PUNCT	FB	_	87	punct	_	SpaceAfter=No
90	)	)	PUNCT	FB	_	87	punct	_	_
91	(	(	PUNCT	FB	_	95	punct	_	SpaceAfter=No
92	this	this	DET	DD	Number=Sing|PronType=Dem	93	det	_	_
93	operation	operation	NOUN	S	Number=Sing	95	nsubj:pass	_	_
94	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	95	aux:pass	_	_
95	called	call	VERB	V	Tense=Past|VerbForm=Part	87	conj	_	_
96	symmetric	symmetric	ADJ	A	Degree=Pos	97	amod	_	_
97	difference	difference	NOUN	S	Number=Sing	95	obj	_	_
98	in	in	ADP	E	_	100	case	_	_
99	the	the	DET	RD	Definite=Def|PronType=Art	100	det	_	_
100	case	case	NOUN	S	Number=Sing	95	obl	_	_
101	of	of	ADP	E	_	102	case	_	_
102	sets	sets	NOUN	S	Number=Plur	100	nmod	_	_
103	and	and	CCONJ	CC	_	104	cc	_	_
104	xor	xor	NOUN	S	Number=Sing	102	conj	_	_
105	in	in	ADP	E	_	107	case	_	_
106	the	the	DET	RD	Definite=Def|PronType=Art	107	det	_	_
107	case	case	NOUN	S	Number=Sing	95	obl	_	_
108	of	of	ADP	E	_	109	case	_	_
109	logic	logic	NOUN	S	Number=Sing	107	nmod	_	SpaceAfter=No
110	)	)	PUNCT	FB	_	95	punct	_	_
111	and	and	CCONJ	CC	_	113	cc	_	_
112	'	'	PART	PART	_	111	case	_	SpaceAfter=No
113	'a	'a	NOUN	S	Number=Plur	87	conj	_	SpaceAfter=No
114	'	'	PART	PART	_	113	case	_	SpaceAfter=No
115	'	'	PART	PART	_	113	case	_	_
116	·	·	PUNCT	_	_	87	punct	_	_
117	'	'	PART	PART	_	118	mark	_	SpaceAfter=No
118	'b	'b	VERB	V	VerbForm=Inf	87	advcl	_	SpaceAfter=No
119	'	'	PART	PART	_	118	compound:prt	_	SpaceAfter=No
120	'	'	PART	PART	_	128	mark	_	_
121	:=	:=	NOUN	S	Number=Sing	123	nmod	_	_
122	'	'	PART	PART	_	121	case	_	SpaceAfter=No
123	'a	'a	NOUN	S	Number=Plur	128	nsubj	_	SpaceAfter=No
124	'	'	PART	PART	_	123	case	_	SpaceAfter=No
125	'	'	PART	PART	_	128	mark	_	_
126	∧	∧	SYM	X	_	128	nmod	_	_
127	'	'	PART	PART	_	126	case	_	SpaceAfter=No
128	'b	'b	VERB	V	VerbForm=Inf	118	advcl	_	SpaceAfter=No
129	'	'	PUNCT	FB	_	128	punct	_	SpaceAfter=No
130	'	'	PUNCT	FB	_	128	punct	_	SpaceAfter=No
131	.	.	PUNCT	FS	_	128	punct	_	_

# sent_id = 177
# text = the zero element of this ring coincides with the 0 of the boolean algebra;
1	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	zero	zero	NUM	N	NumType=Card	3	nummod	_	_
3	element	element	NOUN	S	Number=Sing	7	nsubj	_	_
4	of	of	ADP	E	_	6	case	_	_
5	this	this	DET	DD	Number=Sing|PronType=Dem	6	det	_	_
6	ring	ring	NOUN	S	Number=Sing	3	nmod	_	_
7	coincides	coincide	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
8	with	with	ADP	E	_	10	case	_	_
9	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
10	0	0	NUM	N	NumType=Card	7	obl	_	_
11	of	of	ADP	E	_	14	case	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
13	boolean	boolean	ADJ	A	Degree=Pos	14	amod	_	_
14	algebra	algebra	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
15	;	;	PUNCT	FC	_	7	punct	_	_

# sent_id = 178
# text = the multiplicative identity element of the ring is the 1 of the boolean algebra.
1	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
2	multiplicative	multiplicative	ADJ	A	Degree=Pos	3	amod	_	_
3	identity	identity	NOUN	S	Number=Sing	4	nmod	_	_
4	element	element	NOUN	S	Number=Sing	10	nsubj	_	_
5	of	of	ADP	E	_	7	case	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	ring	ring	NOUN	S	Number=Sing	4	nmod	_	_
8	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	cop	_	_
9	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
10	1	1	NUM	N	NumType=Card	0	root	_	_
11	of	of	ADP	E	_	14	case	_	_
12	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
13	boolean	boolean	ADJ	A	Degree=Pos	14	amod	_	_
14	algebra	algebra	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	10	punct	_	_

# sent_id = 179
# text = this ring has the property that ''a'' · ''a'' = ''a'' for all ''a'' in ''a'';
1	this	this	DET	DD	Number=Sing|PronType=Dem	2	det	_	_
2	ring	ring	NOUN	S	Number=Sing	3	nsubj	_	_
3	has	have	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
5	property	property	NOUN	S	Number=Sing	3	obj	_	_
6	that	that	SCONJ	CS	_	18	mark	_	_
7	'	'	PART	PART	_	18	case	_	SpaceAfter=No
8	'a	'a	NOUN	S	Number=Plur	18	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	_
11	·	·	PUNCT	_	_	13	punct	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'a	'a	NOUN	S	Number=Plur	18	nmod	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'	'	PART	PART	_	13	case	_	_
16	=	=	SYM	X	_	18	nmod	_	_
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'a	'a	NOUN	S	Number=Plur	5	acl	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	SpaceAfter=No
20	'	'	PART	PART	_	18	case	_	_
21	for	for	ADP	E	_	24	case	_	_
22	all	all	PRON	PI	PronType=Ind	24	nmod	_	_
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'a	'a	NOUN	S	Number=Plur	18	nmod	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	SpaceAfter=No
26	'	'	PART	PART	_	24	case	_	_
27	in	in	ADP	E	_	29	case	_	_
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'a	'a	NOUN	S	Number=Plur	18	nmod	_	SpaceAfter=No
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'	'	PART	PART	_	29	case	_	SpaceAfter=No
32	;	;	PUNCT	FC	_	3	punct	_	_

# sent_id = 180
# text = rings with this property are called boolean rings.
1	rings	ring	NOUN	S	Number=Plur	6	nsubj:pass	_	_
2	with	with	ADP	E	_	4	case	_	_
3	this	this	DET	DD	Number=Sing|PronType=Dem	4	det	_	_
4	property	property	NOUN	S	Number=Sing	1	nmod	_	_
5	are	be	AUX	VA	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	6	aux:pass	_	_
6	called	call	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
7	boolean	boolean	ADJ	A	Degree=Pos	8	amod	_	_
8	rings	ring	NOUN	S	Number=Plur	6	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	6	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 181
# text = conversely, if a boolean ring ''a'' is given, we can turn it into a boolean algebra by defining ''x'' ∨ ''y'' := ''x'' + ''y'' + (''x'' · ''y'') and ''x'' ∧ ''y'' := ''x'' · ''y''.
1	conversely	conversely	ADV	B	_	12	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	if	if	SCONJ	CS	_	12	mark	_	_
4	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	6	det	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	ring	ring	NOUN	S	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'a	'a	NOUN	S	Number=Plur	12	nsubj:pass	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	_
11	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	12	aux:pass	_	_
12	given	give	VERB	V	Tense=Past|VerbForm=Part	16	advcl	_	SpaceAfter=No
13	,	,	PUNCT	FF	_	12	punct	_	_
14	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	16	nsubj	_	_
15	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	16	aux	_	_
16	turn	turn	VERB	V	VerbForm=Inf	0	root	_	_
17	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	16	obj	_	_
18	into	into	ADP	E	_	21	case	_	_
19	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	21	det	_	_
20	boolean	boolean	ADJ	A	Degree=Pos	21	amod	_	_
21	algebra	algebra	NOUN	S	Number=Sing	16	obl	_	_
22	by	by	ADP	E	_	23	mark	_	_
23	defining	defining	VERB	V	VerbForm=Ger	16	advcl	_	_
24	'	'	PART	PART	_	23	compound:prt	_	SpaceAfter=No
25	'x	'x	VERB	V	VerbForm=Inf	23	xcomp	_	SpaceAfter=No
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'	'	PART	PART	_	25	case	_	_
28	∨	∨	SYM	X	_	30	nmod	_	_
29	'	'	PART	PART	_	28	case	_	SpaceAfter=No
30	'y	'y	VERB	V	VerbForm=Inf	25	advcl	_	SpaceAfter=No
31	'	'	PART	PART	_	30	case	_	SpaceAfter=No
32	'	'	PART	PART	_	35	mark	_	_
33	:=	:=	NOUN	S	Number=Sing	35	nmod	_	_
34	'	'	PART	PART	_	33	case	_	SpaceAfter=No
35	'x	'x	VERB	V	VerbForm=Inf	30	xcomp	_	SpaceAfter=No
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'	'	PART	PART	_	35	case	_	_
38	+	+	SYM	X	_	40	mark	_	_
39	'	'	PART	PART	_	38	case	_	SpaceAfter=No
40	'y	'y	VERB	V	VerbForm=Inf	35	xcomp	_	SpaceAfter=No
41	'	'	PART	PART	_	46	mark	_	SpaceAfter=No
42	'	'	PART	PART	_	41	case	_	_
43	+	+	SYM	X	_	46	mark	_	_
44	(	(	PUNCT	FB	_	46	punct	_	SpaceAfter=No
45	'	'	PART	PART	_	46	mark	_	SpaceAfter=No
46	'x	'x	VERB	V	VerbForm=Inf	40	advcl	_	SpaceAfter=No
47	'	'	PART	PART	_	46	compound:prt	_	SpaceAfter=No
48	'	'	PART	PART	_	46	compound:prt	_	_
49	·	·	PUNCT	_	_	51	punct	_	_
50	'	'	PART	PART	_	49	case	_	SpaceAfter=No
51	'y	'y	VERB	V	VerbForm=Inf	46	xcomp	_	SpaceAfter=No
52	'	'	PUNCT	FB	_	51	punct	_	SpaceAfter=No
53	'	'	PUNCT	FB	_	51	punct	_	SpaceAfter=No
54	)	)	PUNCT	FB	_	51	punct	_	_
55	and	and	CCONJ	CC	_	57	cc	_	_
56	'	'	PART	PART	_	55	case	_	SpaceAfter=No
57	'x	'x	VERB	V	VerbForm=Inf	46	conj	_	SpaceAfter=No
58	'	'	PART	PART	_	57	case	_	SpaceAfter=No
59	'	'	PART	PART	_	62	mark	_	_
60	∧	∧	SYM	X	_	62	nmod	_	_
61	'	'	PART	PART	_	60	case	_	SpaceAfter=No
62	'y	'y	VERB	V	VerbForm=Inf	57	xcomp	_	SpaceAfter=No
63	'	'	PART	PART	_	62	case	_	SpaceAfter=No
64	'	'	PART	PART	_	62	case	_	_
65	:=	:=	NOUN	S	Number=Sing	67	nmod	_	_
66	'	'	PART	PART	_	65	case	_	SpaceAfter=No
67	'x	'x	VERB	V	VerbForm=Inf	62	xcomp	_	SpaceAfter=No
68	'	'	PART	PART	_	67	case	_	SpaceAfter=No
69	'	'	PART	PART	_	67	compound:prt	_	_
70	·	·	PUNCT	_	_	72	punct	_	_
71	'	'	PART	PART	_	70	case	_	SpaceAfter=No
72	'y	'y	VERB	V	VerbForm=Inf	67	xcomp	_	SpaceAfter=No
73	'	'	PUNCT	FB	_	72	punct	_	SpaceAfter=No
74	'	'	PUNCT	FB	_	72	punct	_	SpaceAfter=No
75	.	.	PUNCT	FS	_	72	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 182
# text = since these two constructions are inverses of each other, we can say that every boolean ring arises from a boolean algebra, and vice versa.
1	since	since	ADP	E	_	4	case	_	_
2	these	this	DET	DD	Number=Plur|PronType=Dem	4	det	_	_
3	two	two	NUM	N	NumType=Card	4	nummod	_	_
4	constructions	construction	NOUN	S	Number=Plur	6	nsubj	_	_
5	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	6	cop	_	_
6	inverses	inverse	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	advcl	_	_
7	of	of	ADP	E	_	8	case	_	_
8	each	each	PRON	PI	PronType=Ind	6	obl	_	_
9	other	other	ADJ	A	Degree=Pos	8	amod	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	6	punct	_	_
11	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	13	nsubj	_	_
12	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	13	aux	_	_
13	say	say	VERB	V	VerbForm=Inf	0	root	_	_
14	that	that	SCONJ	CS	_	16	mark	_	_
15	every	every	DET	DI	Number=Sing|PronType=Ind	16	det	_	_
16	boolean	boolean	NOUN	S	Number=Sing	13	ccomp	_	_
17	ring	r	ADP	E	_	18	case	_	_
18	arises	arise	NOUN	S	Number=Plur	16	nmod	_	_
19	from	from	ADP	E	_	22	case	_	_
20	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	22	det	_	_
21	boolean	boolean	ADJ	A	Degree=Pos	22	amod	_	_
22	algebra	algebra	NOUN	S	Number=Sing	16	nmod	_	SpaceAfter=No
23	,	,	PUNCT	FF	_	26	punct	_	_
24	and	and	CCONJ	CC	_	26	cc	_	_
25	vice	vice	ADJ	A	Degree=Pos	26	amod	_	_
26	versa	versa	NOUN	S	Number=Plur	16	conj	_	SpaceAfter=No
27	.	.	PUNCT	FS	_	13	punct	_	_

# sent_id = 183
# text = furthermore, a map ''f'' : ''a'' → ''b'' is a homomorphism of boolean algebras if and only if it is a homomorphism of boolean rings.
1	furthermore	furthermore	ADV	B	_	21	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	4	det	_	_
4	map	map	NOUN	S	Number=Sing	21	nmod	_	_
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'f	'f	ADV	B	_	11	advmod	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	6	punct	_	_
9	:	:	PUNCT	FC	_	6	punct	_	_
10	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
11	'a	'a	X	SW	_	14	nmod	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	11	punct	_	_
14	→	→	SYM	X	_	21	nmod	_	_
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'b	'b	VERB	V	VerbForm=Inf	21	acl	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	_
19	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	21	cop	_	_
20	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	21	det	_	_
21	homomorphism	homomorphism	NOUN	S	Number=Sing	0	root	_	_
22	of	of	ADP	E	_	24	case	_	_
23	boolean	boolean	ADJ	A	Degree=Pos	24	amod	_	_
24	algebras	algebra	NOUN	S	Number=Plur	21	nmod	_	_
25	if	if	SCONJ	CS	_	21	conj	_	_
26	and	and	CCONJ	CC	_	32	cc	_	_
27	only	only	ADV	B	_	32	advmod	_	_
28	if	if	SCONJ	CS	_	32	mark	_	_
29	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	32	nsubj	_	_
30	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	32	cop	_	_
31	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	32	det	_	_
32	homomorphism	homomorphism	NOUN	S	Number=Sing	25	conj	_	_
33	of	of	ADP	E	_	35	case	_	_
34	boolean	boolean	ADJ	A	Degree=Pos	35	amod	_	_
35	rings	ring	NOUN	S	Number=Plur	32	nmod	_	SpaceAfter=No
36	.	.	PUNCT	FS	_	21	punct	_	_

# sent_id = 184
# text = the categories of boolean rings and boolean algebras are equivalent.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	categories	category	NOUN	S	Number=Plur	10	nsubj	_	_
3	of	of	ADP	E	_	5	case	_	_
4	boolean	boolean	ADJ	A	Degree=Pos	5	amod	_	_
5	rings	ring	NOUN	S	Number=Plur	2	nmod	_	_
6	and	and	CCONJ	CC	_	8	cc	_	_
7	boolean	boolean	ADJ	A	Degree=Pos	8	amod	_	_
8	algebras	algebra	NOUN	S	Number=Plur	5	conj	_	_
9	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	10	cop	_	_
10	equivalent	equivalent	ADJ	A	Degree=Pos	0	root	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	10	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 185
# text = hsiang (1985) gave a rule-based algorithm to check whether two arbitrary expressions denote the same value in every boolean ring.
1	hsiang	hsiang	ADP	E	_	3	case	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	1985	1985	NUM	N	NumType=Card	5	obl	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	_
5	gave	give	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
6	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	det	_	_
7	rule	rule	NOUN	S	Number=Sing	9	obl	_	SpaceAfter=No
8	-	-	PUNCT	FF	_	9	punct	_	SpaceAfter=No
9	based	based	VERB	V	Tense=Past|VerbForm=Part	10	acl	_	_
10	algorithm	algorithm	NOUN	S	Number=Sing	5	obj	_	_
11	to	to	PART	PART	_	12	mark	_	_
12	check	check	VERB	V	VerbForm=Inf	5	advcl	_	_
13	whether	whether	SCONJ	CS	_	17	mark	_	_
14	two	two	NUM	N	NumType=Card	16	nummod	_	_
15	arbitrary	arbitrary	ADJ	A	Degree=Pos	16	amod	_	_
16	expressions	expression	NOUN	S	Number=Plur	17	nsubj	_	_
17	denote	denote	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	12	advcl	_	_
18	the	the	DET	RD	Definite=Def|PronType=Art	20	det	_	_
19	same	same	ADJ	A	Degree=Pos	20	amod	_	_
20	value	value	NOUN	S	Number=Sing	17	obj	_	_
21	in	in	ADP	E	_	24	case	_	_
22	every	every	DET	DI	Number=Sing|PronType=Ind	24	det	_	_
23	boolean	boolean	ADJ	A	Degree=Pos	24	amod	_	_
24	ring	ring	NOUN	S	Number=Sing	17	obl	_	SpaceAfter=No
25	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 186
# text = more generally, boudet, jouannaud, and schmidt-schauß (1989) gave an algorithm to solve equations between arbitrary boolean-ring expressions.
1	more	more	ADV	B	Degree=Cmp	2	advmod	_	_
2	generally	generally	ADV	B	_	15	advmod	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	4	punct	_	_
4	boudet	boudet	NOUN	S	Number=Sing	2	conj	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	6	punct	_	_
6	jouannaud	jouannaud	VERB	V	Tense=Past|VerbForm=Part	2	conj	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	11	punct	_	_
8	and	and	CCONJ	CC	_	11	cc	_	_
9	schmidt	schmidt	ADJ	A	Degree=Pos	11	amod	_	SpaceAfter=No
10	-	-	PUNCT	FF	_	11	punct	_	SpaceAfter=No
11	schauß	schauß	NOUN	S	Number=Sing	2	conj	_	_
12	(	(	PUNCT	FB	_	13	punct	_	SpaceAfter=No
13	1989	1989	NUM	N	NumType=Card	2	nummod	_	SpaceAfter=No
14	)	)	PUNCT	FB	_	13	punct	_	_
15	gave	give	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
16	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	17	det	_	_
17	algorithm	algorithm	NOUN	S	Number=Sing	15	obj	_	_
18	to	to	PART	PART	_	19	mark	_	_
19	solve	solve	VERB	V	VerbForm=Inf	17	acl	_	_
20	equations	equation	NOUN	S	Number=Plur	19	obj	_	_
21	between	between	ADP	E	_	23	case	_	_
22	arbitrary	arbitrary	ADJ	A	Degree=Pos	23	amod	_	_
23	boolean	boolean	NOUN	S	Gender=Masc|Number=Sing	20	nmod	_	SpaceAfter=No
24	-ring	-ring	ADP	E	_	25	case	_	_
25	expressions	expression	NOUN	S	Number=Plur	23	nmod	_	SpaceAfter=No
26	.	.	PUNCT	FS	_	15	punct	_	SpacesAfter=\n

# sent_id = 187
# text = employing the similarity of boolean rings and boolean algebras, both algorithms have applications in automated theorem proving.
1	employing	employ	VERB	V	VerbForm=Ger	0	root	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	similarity	similarity	NOUN	S	Number=Sing	1	obj	_	_
4	of	of	ADP	E	_	6	case	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	rings	ring	NOUN	S	Number=Plur	3	nmod	_	_
7	and	and	CCONJ	CC	_	9	cc	_	_
8	boolean	boolean	ADJ	A	Degree=Pos	9	amod	_	_
9	algebras	algebra	NOUN	S	Number=Plur	6	conj	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	1	punct	_	_
11	both	both	CCONJ	CC	_	12	cc	_	_
12	algorithms	algorithm	NOUN	S	Number=Plur	1	conj	_	_
13	have	have	AUX	VA	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	14	aux	_	_
14	applications	application	NOUN	S	Number=Plur	12	nsubj	_	_
15	in	in	ADP	E	_	17	case	_	_
16	automated	automated	VERB	V	Tense=Past|VerbForm=Part	17	acl	_	_
17	theorem	theorem	PRON	PE	Number=Plur|Person=3|PronType=Prs	14	nmod	_	_
18	proving	prove	VERB	V	VerbForm=Ger	12	acl	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n\s\n

# newpar
# sent_id = 188
# text = an ''ideal'' of the boolean algebra ''a'' is a subset ''i'' such that for all ''x'', ''y'' in ''i'' we have ''x'' ∨ ''y'' in ''i'' and for all ''a'' in ''a'' we have ''a'' ∧ ''x'' in ''i''.
1	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	19	det	_	_
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
4	ideal	ideal	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	19	acl	_	SpaceAfter=No
5	'	'	PART	PART	_	4	compound:prt	_	SpaceAfter=No
6	'	'	PART	PART	_	4	compound:prt	_	_
7	of	of	ADP	E	_	12	case	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	algebra	algebra	NOUN	S	Number=Plur	12	nmod	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'a	'a	NOUN	S	Number=Plur	4	obl	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	12	case	_	_
15	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	19	cop	_	_
16	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	17	det	_	_
17	subset	subset	NOUN	S	Number=Sing	19	nmod	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'i	'i	NOUN	S	_	0	root	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	_
22	such	such	DET	DD	PronType=Dem	23	det	_	_
23	that	that	PRON	PR	PronType=Rel	32	nsubj	_	_
24	for	for	ADP	E	_	27	case	_	_
25	all	all	PRON	PI	PronType=Ind	27	nmod	_	_
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'x	'x	NOUN	S	Gender=Masc|Number=Sing	23	nmod	_	SpaceAfter=No
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'	'	PART	PART	_	27	case	_	SpaceAfter=No
30	,	,	PUNCT	FF	_	23	punct	_	_
31	'	'	PART	PART	_	23	case	_	SpaceAfter=No
32	'y	'y	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	19	acl:relcl	_	SpaceAfter=No
33	'	'	PART	PART	_	32	compound:prt	_	SpaceAfter=No
34	'	'	PART	PART	_	32	compound:prt	_	_
35	in	in	ADP	E	_	41	mark	_	_
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'i	'i	NOUN	S	_	40	nmod	_	SpaceAfter=No
38	'	'	PART	PART	_	37	case	_	SpaceAfter=No
39	'	'	PART	PART	_	37	case	_	_
40	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	41	nsubj	_	_
41	have	have	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	32	advcl	_	_
42	'	'	PART	PART	_	41	case	_	SpaceAfter=No
43	'x	'x	NOUN	S	Gender=Masc|Number=Sing	48	nmod	_	SpaceAfter=No
44	'	'	PART	PART	_	43	case	_	SpaceAfter=No
45	'	'	PART	PART	_	43	case	_	_
46	∨	∨	SYM	X	_	48	nmod	_	_
47	'	'	PART	PART	_	46	case	_	SpaceAfter=No
48	'y	'y	NOUN	S	Number=Sing	41	obj	_	SpaceAfter=No
49	'	'	PART	PART	_	48	case	_	SpaceAfter=No
50	'	'	PART	PART	_	48	case	_	_
51	in	in	ADP	E	_	60	case	_	_
52	'	'	PART	PART	_	51	case	_	SpaceAfter=No
53	'i	'i	NOUN	S	Number=Sing	60	nmod	_	SpaceAfter=No
54	'	'	PART	PART	_	53	case	_	SpaceAfter=No
55	'	'	PART	PART	_	53	case	_	_
56	and	and	CCONJ	CC	_	60	cc	_	_
57	for	for	ADP	E	_	60	case	_	_
58	all	all	PRON	PI	PronType=Ind	60	nmod	_	_
59	'	'	PART	PART	_	58	case	_	SpaceAfter=No
60	'a	'a	NOUN	S	Number=Plur	69	obl	_	SpaceAfter=No
61	'	'	PART	PART	_	60	case	_	SpaceAfter=No
62	'	'	PART	PART	_	60	case	_	_
63	in	in	ADP	E	_	65	case	_	_
64	'	'	PART	PART	_	63	case	_	SpaceAfter=No
65	'a	'a	NOUN	S	Number=Plur	60	nmod	_	SpaceAfter=No
66	'	'	PART	PART	_	65	case	_	SpaceAfter=No
67	'	'	PART	PART	_	65	case	_	_
68	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	69	nsubj	_	_
69	have	have	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	41	advcl	_	_
70	'	'	PART	PART	_	76	case	_	SpaceAfter=No
71	'a	'a	NOUN	S	Number=Plur	76	nmod	_	SpaceAfter=No
72	'	'	PART	PART	_	71	case	_	SpaceAfter=No
73	'	'	PART	PART	_	71	case	_	_
74	∧	∧	SYM	X	_	76	nmod	_	_
75	'	'	PART	PART	_	74	case	_	SpaceAfter=No
76	'x	'x	NOUN	S	Number=Sing	69	obj	_	SpaceAfter=No
77	'	'	PART	PART	_	76	case	_	SpaceAfter=No
78	'	'	PART	PART	_	76	case	_	_
79	in	in	ADP	E	_	81	case	_	_
80	'	'	PART	PART	_	79	case	_	SpaceAfter=No
81	'i	'i	NOUN	S	_	76	nmod	_	SpaceAfter=No
82	'	'	PART	PART	_	81	case	_	SpaceAfter=No
83	'	'	PART	PART	_	81	case	_	SpaceAfter=No
84	.	.	PUNCT	FS	_	19	punct	_	_

# sent_id = 189
# text = this notion of ideal coincides with the notion of ring ideal in the boolean ring ''a''.
1	this	this	DET	DD	Number=Sing|PronType=Dem	2	det	_	_
2	notion	notion	NOUN	S	Number=Sing	0	root	_	_
3	of	of	ADP	E	_	5	case	_	_
4	ideal	ideal	ADJ	A	Degree=Pos	5	amod	_	_
5	coincides	coincide	NOUN	S	Number=Plur	2	nmod	_	_
6	with	with	ADP	E	_	8	case	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	8	det	_	_
8	notion	notion	NOUN	S	Number=Sing	2	nmod	_	_
9	of	of	ADP	E	_	10	case	_	_
10	ring	r	NOUN	S	_	8	nmod	_	_
11	ideal	ideal	ADJ	A	Degree=Pos	10	amod	_	_
12	in	in	ADP	E	_	14	case	_	_
13	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
14	boolean	boolean	NOUN	S	Number=Sing	8	nmod	_	_
15	ring	ring	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	14	acl	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'a	'a	NOUN	S	Number=Plur	15	obl	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'	'	PART	PART	_	17	case	_	SpaceAfter=No
20	.	.	PUNCT	FS	_	2	punct	_	_

# sent_id = 190
# text = an ideal ''i'' of ''a'' is called ''prime'' if ''i'' ≠ ''a'' and if ''a'' ∧ ''b'' in ''i'' always implies ''a'' in ''i'' or ''b'' in ''i''.
1	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	4	det	_	_
2	ideal	ideal	NOUN	S	Gender=Masc|Number=Sing	4	nmod	_	_
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'i	'i	NOUN	S	Number=Sing	13	nsubj:pass	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	_
7	of	of	ADP	E	_	9	case	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'a	'a	NOUN	S	Number=Plur	4	nmod	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	9	case	_	_
12	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	_	_
13	called	call	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
14	'	'	PART	PART	_	13	compound:prt	_	SpaceAfter=No
15	'	'	PART	PART	_	13	compound:prt	_	SpaceAfter=No
16	prime	prime	VERB	V	Tense=Past|VerbForm=Part	13	xcomp	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	16	compound:prt	_	_
19	if	if	SCONJ	CS	_	26	mark	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'i	'i	NOUN	S	Number=Sing	26	nmod	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'	'	PART	PART	_	21	case	_	_
24	≠	≠	SYM	X	_	26	nmod	_	_
25	'	'	PART	PART	_	24	case	_	SpaceAfter=No
26	'a	'a	NOUN	S	Number=Plur	16	advcl	_	SpaceAfter=No
27	'	'	PART	PART	_	26	case	_	SpaceAfter=No
28	'	'	PART	PART	_	26	case	_	_
29	and	and	CCONJ	CC	_	37	cc	_	_
30	if	if	SCONJ	CS	_	37	mark	_	_
31	'	'	PART	PART	_	30	case	_	SpaceAfter=No
32	'a	'a	NOUN	S	Number=Plur	37	nmod	_	SpaceAfter=No
33	'	'	PART	PART	_	32	case	_	SpaceAfter=No
34	'	'	PART	PART	_	32	case	_	_
35	∧	∧	SYM	X	_	37	nmod	_	_
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'b	'b	NOUN	S	Number=Sing	26	conj	_	SpaceAfter=No
38	'	'	PART	PART	_	37	case	_	SpaceAfter=No
39	'	'	PART	PART	_	37	case	_	_
40	in	in	ADP	E	_	48	case	_	_
41	'	'	PUNCT	FB	_	42	punct	_	SpaceAfter=No
42	'i	'i	NOUN	S	Number=Sing	48	nmod	_	SpaceAfter=No
43	'	'	PART	PART	_	42	case	_	SpaceAfter=No
44	'	'	PART	PART	_	42	case	_	_
45	always	always	ADV	B	_	48	advmod	_	_
46	implies	imply	NOUN	S	Number=Plur	48	nmod	_	_
47	'	'	PART	PART	_	46	case	_	SpaceAfter=No
48	'a	'a	NOUN	S	Number=Plur	37	nmod	_	SpaceAfter=No
49	'	'	PART	PART	_	48	case	_	SpaceAfter=No
50	'	'	PART	PART	_	48	case	_	_
51	in	in	ADP	E	_	53	case	_	_
52	'	'	PART	PART	_	51	case	_	SpaceAfter=No
53	'i	'i	NOUN	S	Number=Sing	37	nmod	_	SpaceAfter=No
54	'	'	PART	PART	_	53	case	_	SpaceAfter=No
55	'	'	PART	PART	_	53	case	_	_
56	or	or	CCONJ	CC	_	58	cc	_	_
57	'	'	PART	PART	_	58	mark	_	SpaceAfter=No
58	'b	'b	VERB	V	VerbForm=Inf	53	conj	_	SpaceAfter=No
59	'	'	PART	PART	_	58	compound:prt	_	SpaceAfter=No
60	'	'	PART	PART	_	58	compound:prt	_	_
61	in	in	ADP	E	_	63	case	_	_
62	'	'	PUNCT	FB	_	63	punct	_	SpaceAfter=No
63	'i	'i	NOUN	S	_	58	obl	_	SpaceAfter=No
64	'	'	PUNCT	FB	_	63	punct	_	SpaceAfter=No
65	'	'	PUNCT	FB	_	63	punct	_	SpaceAfter=No
66	.	.	PUNCT	FS	_	13	punct	_	_

# sent_id = 191
# text = furthermore, for every ''a'' ∈ ''a'' we have that ''a'' ∧ ''-a'' = 0 ∈ ''i'' and then ''a'' ∈ ''i'' or ''-a'' ∈ ''i'' for every ''a'' ∈ ''a'', if ''i'' is prime.
1	furthermore	furthermore	ADV	B	_	15	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	for	for	ADP	E	_	11	case	_	_
4	every	every	DET	DI	Number=Sing|PronType=Ind	6	det	_	_
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'a	'a	NOUN	S	Number=Plur	11	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'	'	PART	PART	_	6	case	_	_
9	∈	∈	SYM	X	_	11	nmod	_	_
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'a	'a	NOUN	S	Number=Plur	14	nmod	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'	'	PART	PART	_	11	case	_	_
14	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	15	nsubj	_	_
15	have	have	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
16	that	that	SCONJ	CS	_	31	mark	_	_
17	'	'	PART	PART	_	31	case	_	SpaceAfter=No
18	'a	'a	NOUN	S	Number=Plur	31	nmod	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	SpaceAfter=No
20	'	'	PART	PART	_	18	case	_	_
21	∧	∧	SYM	X	_	24	nmod	_	_
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'	'	PART	PART	_	21	case	_	SpaceAfter=No
24	-a	-a	NOUN	S	Number=Plur	31	nmod	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	SpaceAfter=No
26	'	'	PART	PART	_	24	case	_	_
27	=	=	SYM	X	_	31	nmod	_	_
28	0	0	NUM	N	NumType=Card	31	nummod	_	_
29	∈	∈	SYM	X	_	31	nmod	_	_
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'i	'i	NOUN	S	Number=Sing	15	obl	_	SpaceAfter=No
32	'	'	PART	PART	_	31	case	_	SpaceAfter=No
33	'	'	PART	PART	_	31	case	_	_
34	and	and	CCONJ	CC	_	42	cc	_	_
35	then	then	ADV	B	_	42	advmod	_	_
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'a	'a	NOUN	S	Number=Plur	42	nmod	_	SpaceAfter=No
38	'	'	PART	PART	_	37	case	_	SpaceAfter=No
39	'	'	PART	PART	_	37	case	_	_
40	∈	∈	SYM	X	_	42	nmod	_	_
41	'	'	PART	PART	_	40	case	_	SpaceAfter=No
42	'i	'i	NOUN	S	Number=Sing	31	conj	_	SpaceAfter=No
43	'	'	PART	PART	_	42	case	_	SpaceAfter=No
44	'	'	PART	PART	_	42	case	_	_
45	or	or	CCONJ	CC	_	64	cc	_	_
46	'	'	PART	PART	_	64	nmod	_	SpaceAfter=No
47	'	'	PART	PART	_	46	case	_	SpaceAfter=No
48	-a	-a	NOUN	S	Number=Plur	53	nmod	_	SpaceAfter=No
49	'	'	PART	PART	_	48	case	_	SpaceAfter=No
50	'	'	PART	PART	_	48	case	_	_
51	∈	∈	SYM	X	_	53	nmod	_	_
52	'	'	PART	PART	_	51	case	_	SpaceAfter=No
53	'i	'i	NOUN	S	Number=Sing	64	nmod	_	SpaceAfter=No
54	'	'	PART	PART	_	53	case	_	SpaceAfter=No
55	'	'	PART	PART	_	53	case	_	_
56	for	for	ADP	E	_	64	case	_	_
57	every	every	DET	DI	Number=Sing|PronType=Ind	59	det	_	_
58	'	'	PART	PART	_	57	case	_	SpaceAfter=No
59	'a	'a	NOUN	S	Number=Plur	64	nmod	_	SpaceAfter=No
60	'	'	PART	PART	_	59	case	_	SpaceAfter=No
61	'	'	PART	PART	_	59	case	_	_
62	∈	∈	SYM	X	_	64	nmod	_	_
63	'	'	PART	PART	_	62	case	_	SpaceAfter=No
64	'a	'a	NOUN	S	Number=Plur	31	conj	_	SpaceAfter=No
65	'	'	PART	PART	_	64	case	_	SpaceAfter=No
66	'	'	PART	PART	_	64	case	_	SpaceAfter=No
67	,	,	PUNCT	FF	_	31	punct	_	_
68	if	if	SCONJ	CS	_	74	mark	_	_
69	'	'	PART	PART	_	68	case	_	SpaceAfter=No
70	'i	'i	NOUN	S	Number=Sing	74	nsubj	_	SpaceAfter=No
71	'	'	PART	PART	_	70	case	_	SpaceAfter=No
72	'	'	PART	PART	_	70	case	_	_
73	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	74	cop	_	_
74	prime	prime	ADJ	A	Degree=Pos	31	acl	_	SpaceAfter=No
75	.	.	PUNCT	FS	_	15	punct	_	_

# sent_id = 192
# text = an ideal ''i'' of ''a'' is called ''maximal'' if ''i'' ≠ ''a'' and if the only ideal properly containing ''i'' is ''a'' itself.
1	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	4	det	_	_
2	ideal	ideal	NOUN	S	Gender=Masc|Number=Sing	4	nmod	_	_
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'i	'i	NOUN	S	Number=Sing	13	nsubj:pass	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	_
7	of	of	ADP	E	_	9	case	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'a	'a	NOUN	S	Number=Plur	4	nmod	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	9	case	_	_
12	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	aux:pass	_	_
13	called	call	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
14	'	'	PART	PART	_	13	compound:prt	_	SpaceAfter=No
15	'	'	PART	PART	_	13	compound:prt	_	SpaceAfter=No
16	maximal	maximal	VERB	V	VerbForm=Inf	13	xcomp	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	16	compound:prt	_	_
19	if	if	SCONJ	CS	_	26	mark	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'i	'i	NOUN	S	Number=Sing	26	nmod	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'	'	PART	PART	_	21	case	_	_
24	≠	≠	SYM	X	_	26	nmod	_	_
25	'	'	PART	PART	_	24	case	_	SpaceAfter=No
26	'a	'a	NOUN	S	Number=Plur	16	advcl	_	SpaceAfter=No
27	'	'	PART	PART	_	26	case	_	SpaceAfter=No
28	'	'	PART	PART	_	26	case	_	_
29	and	and	CCONJ	CC	_	42	cc	_	_
30	if	if	SCONJ	CS	_	42	mark	_	_
31	the	the	DET	RD	Definite=Def|PronType=Art	37	det	_	_
32	only	only	ADV	B	_	33	advmod	_	_
33	ideal	ideal	ADJ	A	Degree=Pos	37	amod	_	_
34	properly	properly	ADV	B	_	35	advmod	_	_
35	containing	contain	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	37	acl	_	_
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'i	'i	NOUN	S	_	42	nmod	_	SpaceAfter=No
38	'	'	PART	PART	_	37	case	_	SpaceAfter=No
39	'	'	PART	PART	_	37	case	_	_
40	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	37	cop	_	_
41	'	'	PART	PART	_	37	case	_	SpaceAfter=No
42	'a	'a	NOUN	S	Number=Plur	26	conj	_	SpaceAfter=No
43	'	'	PART	PART	_	42	case	_	SpaceAfter=No
44	'	'	PART	PART	_	45	case	_	_
45	itself	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	42	nmod	_	SpaceAfter=No
46	.	.	PUNCT	FS	_	13	punct	_	_

# sent_id = 193
# text = for an ideal ''i'', if ''a'' ∉ ''i'' and ''-a'' ∉ ''i'', then ''i'' ∪ {''a''} or ''i'' ∪ {''-a''} is properly contained in another ideal ''j''.
1	for	for	ADP	E	_	5	case	_	_
2	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	ideal	ideal	NOUN	S	Gender=Masc|Number=Sing	5	nmod	_	_
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'i	'i	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'	'	PART	PART	_	5	case	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	5	punct	_	_
9	if	if	SCONJ	CS	_	16	mark	_	_
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'a	'a	NOUN	S	Number=Plur	16	nmod	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'	'	PART	PART	_	11	case	_	_
14	∉	∉	SYM	X	_	16	nmod	_	_
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'i	'i	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	_
19	and	and	CCONJ	CC	_	27	cc	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'	'	PART	PART	_	19	case	_	SpaceAfter=No
22	-a	-a	NOUN	S	Number=Plur	27	nmod	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'	'	PART	PART	_	22	case	_	_
25	∉	∉	SYM	X	_	27	nmod	_	_
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'i	'i	NOUN	S	Number=Sing	16	conj	_	SpaceAfter=No
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'	'	PART	PART	_	27	case	_	SpaceAfter=No
30	,	,	PUNCT	FF	_	16	punct	_	_
31	then	then	ADV	B	_	39	advmod	_	_
32	'	'	PART	PART	_	31	case	_	SpaceAfter=No
33	'i	'i	NOUN	S	_	36	nmod	_	SpaceAfter=No
34	'	'	PART	PART	_	33	case	_	SpaceAfter=No
35	'	'	PART	PART	_	33	case	_	_
36	∪	∪	SYM	X	_	39	nmod	_	_
37	{	{	PUNCT	FF	_	36	punct	_	SpaceAfter=No
38	'	'	PART	PART	_	36	case	_	SpaceAfter=No
39	'a	'a	NOUN	S	Number=Plur	16	nmod	_	SpaceAfter=No
40	'	'	PART	PART	_	39	case	_	SpaceAfter=No
41	'	'	PART	PART	_	39	case	_	SpaceAfter=No
42	}	}	PUNCT	FF	_	59	punct	_	_
43	or	or	CCONJ	CC	_	59	cc	_	_
44	'	'	PART	PART	_	43	case	_	SpaceAfter=No
45	'i	'i	NOUN	S	_	48	nmod	_	SpaceAfter=No
46	'	'	PART	PART	_	45	case	_	SpaceAfter=No
47	'	'	PART	PART	_	45	case	_	_
48	∪	∪	SYM	X	_	59	nsubj:pass	_	_
49	{	{	PUNCT	FF	_	48	punct	_	SpaceAfter=No
50	'	'	PUNCT	FB	_	48	punct	_	SpaceAfter=No
51	'	'	PUNCT	FB	_	48	punct	_	SpaceAfter=No
52	-	-	PUNCT	FB	_	48	punct	_	SpaceAfter=No
53	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	54	det	_	SpaceAfter=No
54	'	'	PART	PART	_	48	case	_	SpaceAfter=No
55	'	'	PART	PART	_	54	case	_	SpaceAfter=No
56	}	}	PUNCT	FF	_	54	punct	_	_
57	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	59	aux:pass	_	_
58	properly	properly	ADV	B	_	59	advmod	_	_
59	contained	containe	VERB	V	Tense=Past|VerbForm=Part	39	conj	_	_
60	in	in	ADP	E	_	64	case	_	_
61	another	another	DET	RI	Definite=Ind|Number=Sing|PronType=Art	62	det	_	_
62	ideal	ideal	NOUN	S	Number=Sing	64	nmod	_	_
63	'	'	PART	PART	_	62	case	_	SpaceAfter=No
64	'j	'j	PROPN	SP	_	59	obl	_	SpaceAfter=No
65	'	'	PUNCT	FB	_	64	punct	_	SpaceAfter=No
66	'	'	PUNCT	FB	_	64	punct	_	SpaceAfter=No
67	.	.	PUNCT	FS	_	5	punct	_	_

# sent_id = 194
# text = hence, that an ''i'' is not maximal and therefore the notions of prime ideal and maximal ideal are equivalent in boolean algebras.
1	hence	hence	ADV	B	_	23	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	that	that	SCONJ	CS	_	23	mark	_	_
4	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	11	det	_	_
5	'	'	PART	PART	_	11	mark	_	SpaceAfter=No
6	'i	'i	NOUN	S	_	11	nsubj	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'	'	PART	PART	_	6	case	_	_
9	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	11	cop	_	_
10	not	not	PART	PART	Polarity=Neg	11	advmod	_	_
11	maximal	maximal	ADJ	A	Degree=Pos	23	nsubj	_	_
12	and	and	CCONJ	CC	_	15	cc	_	_
13	therefore	therefore	ADV	B	_	15	advmod	_	_
14	the	the	DET	RD	Definite=Def|PronType=Art	15	det	_	_
15	notions	notion	NOUN	S	Number=Plur	11	conj	_	_
16	of	of	ADP	E	_	21	case	_	_
17	prime	prime	ADJ	A	Degree=Pos	18	amod	_	_
18	ideal	ideal	ADJ	A	Degree=Pos	21	amod	_	_
19	and	and	CCONJ	CC	_	20	cc	_	_
20	maximal	maximal	ADJ	A	Degree=Pos	18	conj	_	_
21	ideal	ideal	NOUN	S	Number=Sing	15	nmod	_	_
22	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	23	cop	_	_
23	equivalent	equivalend	ADJ	A	Degree=Pos	0	root	_	_
24	in	in	ADP	E	_	26	case	_	_
25	boolean	boolean	ADJ	A	Degree=Pos	26	amod	_	_
26	algebras	algebra	NOUN	S	Number=Plur	23	obl	_	SpaceAfter=No
27	.	.	PUNCT	FS	_	23	punct	_	_

# sent_id = 195
# text = moreover, these notions coincide with ring theoretic ones of prime ideal and maximal ideal in the boolean ring ''a''.
1	moreover	moreover	ADV	B	_	5	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	these	this	DET	DD	Number=Plur|PronType=Dem	4	det	_	_
4	notions	notion	NOUN	S	Number=Plur	5	nsubj	_	_
5	coincide	coincide	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
6	with	with	ADP	E	_	9	case	_	_
7	ring	ring	NOUN	S	_	9	nmod	_	_
8	theoretic	theoretic	ADJ	A	Degree=Pos	9	amod	_	_
9	ones	one	PRON	PE	Number=Plur|Person=3|PronType=Prs	5	obl	_	_
10	of	of	ADP	E	_	15	case	_	_
11	prime	prime	ADJ	A	Degree=Pos	12	amod	_	_
12	ideal	ideal	ADJ	A	Degree=Pos	15	amod	_	_
13	and	and	CCONJ	CC	_	14	cc	_	_
14	maximal	maximal	ADJ	A	Degree=Pos	12	conj	_	_
15	ideal	ideal	NOUN	S	Number=Sing	9	nmod	_	_
16	in	in	ADP	E	_	21	case	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	19	det	_	_
18	boolean	boolean	ADJ	A	Degree=Pos	19	amod	_	_
19	ring	ring	NOUN	S	Number=Sing	21	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'a	'a	NOUN	S	Number=Plur	5	obl	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'	'	PART	PART	_	21	case	_	SpaceAfter=No
24	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 196
# text = the dual of an ''ideal'' is a ''filter''.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	dual	dual	NOUN	S	Number=Sing	14	nsubj	_	_
3	of	of	ADP	E	_	7	mark	_	_
4	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	5	det	_	_
5	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	ideal	ideal	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	2	acl	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	_
10	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	_
11	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	14	det	_	_
12	'	'	PART	PART	_	14	mark	_	SpaceAfter=No
13	'	'	PART	PART	_	14	mark	_	SpaceAfter=No
14	filter	filter	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	14	punct	_	_

# sent_id = 197
# text = a ''filter'' of the boolean algebra ''a'' is a subset ''p'' such that for all ''x'', ''y'' in ''p'' we have ''x'' ∧ ''y'' in ''p'' and for all ''a'' in ''a'' we have ''a'' ∨ ''x'' in ''p''.
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	filter	filter	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'	'	PART	PART	_	4	compound:prt	_	_
7	of	of	ADP	E	_	12	case	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	algebra	algebra	NOUN	S	Number=Plur	12	nmod	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'a	'a	NOUN	S	Number=Plur	4	obl	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	12	case	_	_
15	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	17	cop	_	_
16	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	17	det	_	_
17	subset	subset	NOUN	S	Number=Sing	19	obl	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'p	'p	VERB	V	VerbForm=Inf	4	advcl	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	_
22	such	such	DET	DD	PronType=Dem	23	det	_	_
23	that	that	PRON	PR	PronType=Rel	19	obj	_	_
24	for	for	ADP	E	_	27	mark	_	_
25	all	all	PRON	PI	PronType=Ind	27	nmod	_	_
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'x	'x	VERB	V	VerbForm=Inf	19	advcl	_	SpaceAfter=No
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'	'	PART	PART	_	27	case	_	SpaceAfter=No
30	,	,	PUNCT	FF	_	27	punct	_	_
31	'	'	PART	PART	_	27	case	_	SpaceAfter=No
32	'y	'y	VERB	V	VerbForm=Inf	27	xcomp	_	SpaceAfter=No
33	'	'	PART	PART	_	32	case	_	SpaceAfter=No
34	'	'	PART	PART	_	32	compound:prt	_	_
35	in	in	ADP	E	_	37	mark	_	_
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'p	'p	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	32	advcl	_	SpaceAfter=No
38	'	'	PART	PART	_	37	case	_	SpaceAfter=No
39	'	'	PART	PART	_	37	case	_	_
40	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	41	nsubj	_	_
41	have	have	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	37	xcomp	_	_
42	'	'	PART	PART	_	41	case	_	SpaceAfter=No
43	'x	'x	NOUN	S	Gender=Masc|Number=Sing	48	nmod	_	SpaceAfter=No
44	'	'	PART	PART	_	43	case	_	SpaceAfter=No
45	'	'	PART	PART	_	43	case	_	_
46	∧	∧	SYM	X	_	48	nmod	_	_
47	'	'	PART	PART	_	46	case	_	SpaceAfter=No
48	'y	'y	NOUN	S	Number=Sing	41	obj	_	SpaceAfter=No
49	'	'	PART	PART	_	48	case	_	SpaceAfter=No
50	'	'	PART	PART	_	48	case	_	_
51	in	in	ADP	E	_	60	case	_	_
52	'	'	PART	PART	_	51	case	_	SpaceAfter=No
53	'p	'p	NOUN	S	Number=Sing	60	nmod	_	SpaceAfter=No
54	'	'	PART	PART	_	53	case	_	SpaceAfter=No
55	'	'	PART	PART	_	53	case	_	_
56	and	and	CCONJ	CC	_	60	cc	_	_
57	for	for	ADP	E	_	60	case	_	_
58	all	all	PRON	PI	PronType=Ind	60	nmod	_	_
59	'	'	PART	PART	_	58	case	_	SpaceAfter=No
60	'a	'a	NOUN	S	Number=Plur	41	obl	_	SpaceAfter=No
61	'	'	PART	PART	_	60	case	_	SpaceAfter=No
62	'	'	PART	PART	_	60	case	_	_
63	in	in	ADP	E	_	65	case	_	_
64	'	'	PART	PART	_	63	case	_	SpaceAfter=No
65	'a	'a	NOUN	S	Number=Plur	60	nmod	_	SpaceAfter=No
66	'	'	PART	PART	_	65	case	_	SpaceAfter=No
67	'	'	PART	PART	_	65	case	_	_
68	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	69	nsubj	_	_
69	have	have	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	60	acl:relcl	_	_
70	'	'	PART	PART	_	76	case	_	SpaceAfter=No
71	'a	'a	NOUN	S	Number=Plur	76	nmod	_	SpaceAfter=No
72	'	'	PART	PART	_	71	case	_	SpaceAfter=No
73	'	'	PART	PART	_	71	case	_	_
74	∨	∨	SYM	X	_	76	nmod	_	_
75	'	'	PART	PART	_	74	case	_	SpaceAfter=No
76	'x	'x	NOUN	S	Number=Sing	69	xcomp	_	SpaceAfter=No
77	'	'	PART	PART	_	76	case	_	SpaceAfter=No
78	'	'	PART	PART	_	76	case	_	_
79	in	in	ADP	E	_	81	case	_	_
80	'	'	PART	PART	_	79	case	_	SpaceAfter=No
81	'p	'p	NOUN	S	Number=Sing	76	nmod	_	SpaceAfter=No
82	'	'	PART	PART	_	81	case	_	SpaceAfter=No
83	'	'	PART	PART	_	81	case	_	SpaceAfter=No
84	.	.	PUNCT	FS	_	4	punct	_	_

# sent_id = 198
# text = the dual of a ''maximal'' (or ''prime'') ''ideal'' in a boolean algebra is ''ultrafilter''.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	dual	dual	NOUN	S	Number=Sing	20	nsubj	_	_
3	of	of	ADP	E	_	7	mark	_	_
4	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	5	det	_	_
5	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	maximal	maximal	VERB	V	VerbForm=Inf	2	acl	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	7	punct	_	_
10	(	(	PUNCT	FB	_	14	punct	_	SpaceAfter=No
11	or	or	CCONJ	CC	_	14	cc	_	_
12	'	'	PART	PART	_	14	mark	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	prime	prime	VERB	V	VerbForm=Inf	7	conj	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	7	punct	_	_
18	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
19	'	'	PART	PART	_	2	case	_	SpaceAfter=No
20	ideal	ideal	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'	'	PART	PART	_	20	compound:prt	_	_
23	in	in	ADP	E	_	25	case	_	_
24	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	25	det	_	_
25	boolean	boolean	NOUN	S	Gender=Masc|Number=Sing	20	obl	_	_
26	algebra	algebra	DET	RI	Definite=Ind|Number=Sing|PronType=Art	25	nmod	_	_
27	is	be	NOUN	S	Gender=Masc|Number=Sing	30	obl	_	_
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'	'	PART	PART	_	27	case	_	SpaceAfter=No
30	ultrafilter	ultrafilter	VERB	V	VerbForm=Inf	20	advcl	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
33	.	.	PUNCT	FS	_	30	punct	_	_

# sent_id = 199
# text = ultrafilters can alternatively be described as 2-valued morphisms from ''a'' to the two-element boolean algebra.
1	ultrafilters	ultrafilter	NOUN	S	Number=Plur	5	nsubj:pass	_	_
2	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
3	alternatively	alternatively	ADV	B	_	5	advmod	_	_
4	be	be	AUX	VA	VerbForm=Inf	5	aux:pass	_	_
5	described	describe	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
6	as	as	ADP	E	_	10	case	_	_
7	2	2	NUM	N	NumType=Card	9	nummod	_	SpaceAfter=No
8	-	-	PUNCT	FF	_	7	punct	_	SpaceAfter=No
9	valued	value	NOUN	S	Number=Sing	10	nmod	_	_
10	morphisms	morphism	NOUN	S	Number=Plur	5	obl	_	_
11	from	from	ADP	E	_	21	case	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'a	'a	NOUN	S	Number=Plur	21	nmod	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'	'	PART	PART	_	13	case	_	_
16	to	to	ADP	E	_	21	case	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	21	det	_	_
18	two	two	NUM	N	NumType=Card	20	nummod	_	SpaceAfter=No
19	-	-	PUNCT	FF	_	20	punct	_	SpaceAfter=No
20	element	element	NOUN	S	Number=Sing	21	nmod	_	_
21	boolean	boolean	NOUN	S	Number=Sing	5	obl	_	_
22	algebra	algebra	X	X	_	21	dep	_	SpaceAfter=No
23	.	.	PUNCT	FS	_	5	punct	_	_

# sent_id = 200
# text = the statement ''every filter in a boolean algebra can be extended to an ultrafilter'' is called the ''ultrafilter theorem'' and cannot be proven in zf, if zf is consistent.
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	statement	statement	NOUN	S	Number=Sing	6	nmod	_	_
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	SpaceAfter=No
5	every	every	DET	DI	Number=Sing|PronType=Ind	6	det	_	_
6	filter	filter	NOUN	S	Number=Sing	13	nsubj:pass	_	_
7	in	in	ADP	E	_	10	case	_	_
8	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	10	det	_	_
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	algebra	algebra	NOUN	S	Number=Sing	6	nmod	_	_
11	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	13	aux	_	_
12	be	be	AUX	VA	VerbForm=Inf	13	aux:pass	_	_
13	extended	extend	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
14	to	to	ADP	E	_	16	case	_	_
15	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	16	det	_	_
16	ultrafilter	ultrafilter	NOUN	S	Number=Sing	13	obl	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	16	case	_	_
19	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	13	cop	_	_
20	called	call	VERB	V	Tense=Past|VerbForm=Part	13	advcl	_	_
21	the	the	DET	RD	Definite=Def|PronType=Art	24	det	_	_
22	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	ultrafilter	ultrafilter	VERB	V	VerbForm=Inf	20	xcomp	_	_
25	theorem	theorem	PRON	PE	Number=Plur|Person=3|PronType=Prs	24	obj	_	SpaceAfter=No
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	25	punct	_	_
28	and	and	CCONJ	CC	_	32	cc	_	_
29-30	cannot	_	_	_	_	_	_	_	_
29	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	32	aux	_	_
30	not	not	PART	PART	Polarity=Neg	32	advmod	_	_
31	be	be	AUX	VA	VerbForm=Inf	32	aux:pass	_	_
32	proven	prove	VERB	V	Tense=Past|VerbForm=Part	24	conj	_	_
33	in	in	ADP	E	_	34	case	_	_
34	zf	zf	NOUN	S	Number=Sing	32	obl	_	SpaceAfter=No
35	,	,	PUNCT	FF	_	24	punct	_	_
36	if	if	SCONJ	CS	_	39	mark	_	_
37	zf	zf	NOUN	S	Gender=Masc|Number=Sing	39	nsubj	_	_
38	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	39	cop	_	_
39	consistent	consistent	ADJ	A	Degree=Pos	24	advcl	_	SpaceAfter=No
40	.	.	PUNCT	FS	_	13	punct	_	_

# sent_id = 201
# text = within zf, it is strictly weaker than the axiom of choice.
1	within	within	ADP	E	_	2	case	_	_
2	zf	zf	NOUN	S	Number=Sing	5	obl	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	2	punct	_	_
4	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	5	nsubj	_	_
5	is	be	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
6	strictly	strictly	ADV	B	_	7	advmod	_	_
7	weaker	weaker	ADJ	A	Degree=Cmp	5	xcomp	_	_
8	than	than	ADP	E	_	10	case	_	_
9	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
10	axiom	axiom	NOUN	S	Number=Sing	7	obl	_	_
11	of	of	ADP	E	_	12	case	_	_
12	choice	choice	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n

# sent_id = 202
# text = the ultrafilter theorem has many equivalent formulations:
1	the	the	DET	RD	Definite=Def|PronType=Art	2	det	_	_
2	ultrafilter	ultrafilter	NOUN	S	Number=Sing	0	root	_	_
3	theorem	theorey	PRON	PR	PronType=Rel	4	nsubj	_	_
4	has	have	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	acl:relcl	_	_
5	many	many	ADJ	A	Degree=Pos	7	amod	_	_
6	equivalent	equivalent	ADJ	A	Degree=Pos	7	amod	_	_
7	formulations	formulation	NOUN	S	Number=Plur	4	obj	_	SpaceAfter=No
8	:	:	PUNCT	FC	_	2	punct	_	_

# sent_id = 203
# text = ''every boolean algebra has an ultrafilter'', ''every ideal in a boolean algebra can be extended to a prime ideal'', etc.
1	'	'	PART	PART	_	6	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	every	every	DET	DI	Number=Sing|PronType=Ind	5	det	_	_
4	boolean	boolean	ADJ	A	Degree=Pos	5	amod	_	_
5	algebra	algebra	NOUN	S	Number=Sing	6	nsubj	_	_
6	has	have	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
7	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	8	det	_	_
8	ultrafilter	ultrafilter	NOUN	S	Number=Sing	6	obj	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	SpaceAfter=No
11	,	,	PUNCT	FF	_	6	punct	_	_
12	'	'	PART	PART	_	22	mark	_	SpaceAfter=No
13	'	'	PUNCT	FF	_	15	punct	_	SpaceAfter=No
14	every	every	DET	DI	Number=Sing|PronType=Ind	15	det	_	_
15	ideal	ideal	NOUN	S	Number=Sing	22	nsubj:pass	_	_
16	in	in	ADP	E	_	19	case	_	_
17	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	19	det	_	_
18	boolean	boolean	ADJ	A	Degree=Pos	19	amod	_	_
19	algebra	algebra	NOUN	S	Number=Sing	15	nmod	_	_
20	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	22	aux	_	_
21	be	be	AUX	VA	VerbForm=Inf	22	aux:pass	_	_
22	extended	extend	VERB	V	Tense=Past|VerbForm=Part	30	advcl	_	_
23	to	to	ADP	E	_	26	case	_	_
24	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	26	det	_	_
25	prime	prime	ADJ	A	Degree=Pos	26	amod	_	_
26	ideal	ideal	NOUN	S	Number=Sing	22	obl	_	SpaceAfter=No
27	'	'	PART	PART	_	26	case	_	SpaceAfter=No
28	'	'	PART	PART	_	26	case	_	SpaceAfter=No
29	,	,	PUNCT	FF	_	22	punct	_	_
30	etc.	etc.	INTJ	I	_	6	conj	_	SpacesAfter=\n\s\n

# newpar
# sent_id = 204
# text = it can be shown that every ''finite'' boolean algebra is isomorphic to the boolean algebra of all subsets of a finite set.
1	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	4	nsubj:pass	_	_
2	can	can	AUX	VM	Mood=Ind|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	be	be	AUX	VA	VerbForm=Inf	4	aux:pass	_	_
4	shown	show	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
5	that	that	SCONJ	CS	_	9	mark	_	_
6	every	every	DET	DI	Number=Sing|PronType=Ind	9	det	_	_
7	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	finite	finite	VERB	V	VerbForm=Inf	4	ccomp	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PART	PART	_	12	mark	_	_
12	boolean	boolean	VERB	V	VerbForm=Inf	9	advcl	_	_
13	algebra	algebra	DET	RI	Definite=Ind|Number=Sing|PronType=Art	15	det	_	_
14	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	15	cop	_	_
15	isomorphic	isomorphic	ADJ	A	Degree=Pos	12	ccomp	_	_
16	to	to	ADP	E	_	19	case	_	_
17	the	the	DET	RD	Definite=Def|PronType=Art	19	det	_	_
18	boolean	boolean	ADJ	A	Degree=Pos	19	amod	_	_
19	algebra	algebra	NOUN	S	Number=Sing	15	obl	_	_
20	of	of	ADP	E	_	22	case	_	_
21	all	all	DET	T	PronType=Tot	22	det	_	_
22	subsets	subset	NOUN	S	Number=Plur	19	nmod	_	_
23	of	of	ADP	E	_	26	case	_	_
24	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	26	det	_	_
25	finite	finite	ADJ	A	Degree=Pos	26	amod	_	_
26	set	set	NOUN	S	Number=Sing	22	nmod	_	SpaceAfter=No
27	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\s

# sent_id = 205
# text = therefore, the number of elements of every finite boolean algebra is a power of two.
1	therefore	therefore	ADV	B	_	14	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
4	number	number	NOUN	S	Number=Sing	14	nsubj	_	_
5	of	of	ADP	E	_	6	case	_	_
6	elements	element	NOUN	S	Number=Plur	4	nmod	_	_
7	of	of	ADP	E	_	11	case	_	_
8	every	every	DET	DI	Number=Sing|PronType=Ind	11	det	_	_
9	finite	finite	ADJ	A	Degree=Pos	11	amod	_	_
10	boolean	boolean	ADJ	A	Degree=Pos	11	amod	_	_
11	algebra	algebra	NOUN	S	Number=Sing	6	nmod	_	_
12	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	_
13	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	14	det	_	_
14	power	power	NOUN	S	Number=Sing	0	root	_	_
15	of	of	ADP	E	_	16	case	_	_
16	two	two	NUM	N	NumType=Card	14	nummod	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	14	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 206
# text = stone's celebrated ''representation theorem for boolean algebras'' states that ''every'' boolean algebra ''a'' is isomorphic to the boolean algebra of all clopen sets in some (compact totally disconnected hausdorff) topological space.
1	stone	stone	PRON	PE	Number=Sing|Person=3|PronType=Prs	3	nsubj	_	SpaceAfter=No
2	's	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	celebrated	celebrate	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
4	'	'	PART	PART	_	7	case	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	representation	representation	NOUN	S	Number=Sing	7	nmod	_	_
7	theorem	theorem	NOUN	S	Number=Sing	3	obl	_	_
8	for	for	ADP	E	_	13	case	_	_
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	algebras	algebra	NOUN	S	Number=Plur	13	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'	'	PART	PART	_	10	case	_	_
13	states	state	NOUN	S	Number=Plur	7	nmod	_	_
14	that	that	SCONJ	CS	_	17	mark	_	_
15	'	'	PART	PART	_	17	mark	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	every	every	VERB	V	VerbForm=Inf	13	acl	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	_
20	boolean	boolean	VERB	V	VerbForm=Inf	27	advcl	_	_
21	algebra	algebra	NOUN	S	Number=Plur	23	nmod	_	_
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'a	'a	NOUN	S	Number=Plur	27	nsubj	_	SpaceAfter=No
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'	'	PART	PART	_	23	case	_	_
26	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	27	cop	_	_
27	isomorphic	isomorphic	ADJ	A	Degree=Pos	17	xcomp	_	_
28	to	to	ADP	E	_	31	case	_	_
29	the	the	DET	RD	Definite=Def|PronType=Art	31	det	_	_
30	boolean	boolean	ADJ	A	Degree=Pos	31	amod	_	_
31	algebra	algebra	NOUN	S	Number=Sing	27	obl	_	_
32	of	of	ADP	E	_	35	case	_	_
33	all	all	DET	T	PronType=Tot	35	det	_	_
34	clopen	clopen	ADJ	A	Degree=Pos	35	amod	_	_
35	sets	sets	NOUN	S	Number=Plur	31	nmod	_	_
36	in	in	ADP	E	_	39	case	_	_
37	some	some	DET	DI	PronType=Ind	39	det	_	_
38	(	(	PUNCT	FB	_	39	punct	_	SpaceAfter=No
39	compact	compact	NOUN	S	Number=Sing	27	obl	_	_
40	totally	totally	ADV	B	_	41	advmod	_	_
41	disconnected	disconnect	VERB	V	Tense=Past|VerbForm=Part	39	acl	_	_
42	hausdorff	hausdorff	ADP	E	_	45	case	_	SpaceAfter=No
43	)	)	PUNCT	FB	_	45	punct	_	_
44	topological	topological	ADJ	A	Degree=Pos	45	amod	_	_
45	space	space	NOUN	S	Number=Sing	41	obl	_	SpaceAfter=No
46	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n\s\n\n\n\n\s

# newpar
# sent_id = 207
# text = '''proven properties'''
1	'	'	PART	PART	_	5	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	1	case	_	SpaceAfter=No
4	proven	prove	VERB	V	Tense=Past|VerbForm=Part	5	acl	_	_
5	properties	property	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'	'	PART	PART	_	5	case	_	SpaceAfter=No
8	'	'	PART	PART	_	5	case	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 208
# text = '''uid1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	uid1	uid1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 209
# text = if ''x'' ∨ ''o'' = ''x'' for all ''x'', then ''o'' = 0
1	if	if	SCONJ	CS	_	3	mark	_	_
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	8	mark	_	_
6	∨	∨	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'o	'o	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	compound:prt	_	_
11	=	=	SYM	X	_	13	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
14	'	'	PART	PART	_	13	compound:prt	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	_
16	for	for	ADP	E	_	19	mark	_	_
17	all	all	PRON	PI	PronType=Ind	19	nmod	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'x	'x	VERB	V	VerbForm=Inf	28	advcl	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'	'	PART	PART	_	19	compound:prt	_	SpaceAfter=No
22	,	,	PUNCT	FF	_	19	punct	_	_
23	then	then	ADV	B	_	25	advmod	_	_
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'o	'o	VERB	V	VerbForm=Inf	28	acl	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	25	punct	_	_
28	=	=	SYM	X	_	13	obj	_	_
29	0	0	NUM	N	NumType=Card	28	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 210
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\s\n\n\s

# newpar
# sent_id = 211
# text = if ''x'' ∨ ''o'' = ''x'', then
1	if	if	SCONJ	CS	_	3	mark	_	_
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	17	advcl	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	8	mark	_	_
6	∨	∨	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'o	'o	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	13	mark	_	_
11	=	=	SYM	X	_	13	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'	'	PART	PART	_	13	compound:prt	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	3	punct	_	_
17	then	then	ADV	B	_	0	root	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s\s\n\n\s

# newpar
# sent_id = 212
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 213
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 214
# text = 0 ∨ ''o''
1	0	0	NUM	N	NumType=Card	2	nummod	_	_
2	∨	∨	SYM	X	_	4	nmod	_	_
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'o	'o	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 215
# text = by assumption
1	by	by	ADP	E	_	2	case	_	_
2	assumption	assumption	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 216
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 217
# text = ''o'' ∨ 0
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'o	'o	VERB	V	VerbForm=Inf	5	advcl	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	_
5	∨	∨	SYM	X	_	0	root	_	_
6	0	0	NUM	N	NumType=Card	5	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 218
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 219
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 220
# text = ''o''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'o	'o	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 221
# text = by '''idn1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn1	idn1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 222
# text = '''uid2''' dual if ''x'' ∧ ''i'' = ''x'' for all ''x'', then ''i'' = 1
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	uid2	uid2	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpacesAfter=\s \s
8	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s \s
9	if	if	SCONJ	CS	_	21	mark	_	_
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'x	'x	NOUN	S	Number=Sing	16	nmod	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	11	punct	_	_
14	∧	∧	SYM	X	_	16	nmod	_	_
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'i	'i	NOUN	S	_	19	nmod	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	_
19	=	=	SYM	X	_	21	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'x	'x	VERB	V	VerbForm=Inf	8	ccomp	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'	'	PART	PART	_	21	compound:prt	_	_
24	for	for	ADP	E	_	27	mark	_	_
25	all	all	PRON	PI	PronType=Ind	27	nmod	_	_
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'x	'x	VERB	V	VerbForm=Inf	21	advcl	_	SpaceAfter=No
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'	'	PART	PART	_	27	compound:prt	_	SpaceAfter=No
30	,	,	PUNCT	FF	_	27	punct	_	_
31	then	then	ADV	B	_	36	advmod	_	_
32	'	'	PART	PART	_	31	case	_	SpaceAfter=No
33	'i	'i	NOUN	S	_	36	nmod	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	33	punct	_	_
36	=	=	SYM	X	_	27	obl	_	_
37	1	1	NUM	N	NumType=Card	36	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 223
# text = '''idm1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	idm1	idm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 224
# text = ''x'' ∨ ''x'' = ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	7	mark	_	_
5	∨	∨	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	12	mark	_	_
10	=	=	SYM	X	_	12	nmod	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'x	'x	VERB	V	VerbForm=Inf	7	xcomp	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 225
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 226
# text = ''x'' ∨ ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	7	mark	_	_
5	∨	∨	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'x	'x	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 227
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 228
# text = (''x'' ∨ ''x'') ∧ 1
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	8	mark	_	_
6	∨	∨	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	8	punct	_	_
12	∧	∧	SYM	X	_	3	obl	_	_
13	1	1	NUM	N	NumType=Card	12	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 229
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 230
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 231
# text = (''x'' ∨ ''x'') ∧ (''x'' ∨ ¬''x'')
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	8	mark	_	_
6	∨	∨	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	8	punct	_	_
12	∧	∧	SYM	X	_	15	mark	_	_
13	(	(	PUNCT	FB	_	15	punct	_	SpaceAfter=No
14	'	'	PART	PART	_	15	mark	_	SpaceAfter=No
15	'x	'x	VERB	V	VerbForm=Inf	8	advcl	_	SpaceAfter=No
16	'	'	PART	PART	_	21	mark	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	_
18	∨	∨	SYM	X	_	21	nsubj	_	_
19	¬	¬	SYM	X	_	21	nmod	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'x	'x	VERB	V	VerbForm=Inf	15	xcomp	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 232
# text = by '''cpl1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 233
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 234
# text = ''x'' ∨ (''x'' ∧ ¬''x'')
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	8	nsubj	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PART	PART	_	14	mark	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	_
11	∧	∧	SYM	X	_	14	nsubj	_	_
12	¬	¬	SYM	X	_	14	nmod	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'x	'x	VERB	V	VerbForm=Inf	8	advcl	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 235
# text = by '''dst1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst1	dst1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 236
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 237
# text = ''x'' ∨ 0
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	5	advcl	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	_
5	∨	∨	SYM	X	_	0	root	_	_
6	0	0	NUM	N	NumType=Card	5	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 238
# text = by '''cpl2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl2	cpl2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 239
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 240
# text = ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 241
# text = by '''idn1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn1	idn1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 242
# text = '''idm2''' dual ''x'' ∧ ''x'' = ''x''
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	idm2	idm2	NUM	N	NumType=Card	8	nsubj	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpacesAfter=\s \s
8	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s \s
9	'	'	PART	PART	_	8	compound:prt	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'	'	PART	PART	_	10	case	_	_
13	∧	∧	SYM	X	_	15	mark	_	_
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'x	'x	VERB	V	VerbForm=Inf	10	advcl	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'	'	PART	PART	_	20	mark	_	_
18	=	=	SYM	X	_	20	nmod	_	_
19	'	'	PART	PART	_	18	case	_	SpaceAfter=No
20	'x	'x	VERB	V	VerbForm=Inf	15	xcomp	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	10	punct	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 243
# text = '''bnd1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	bnd1	bnd1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 244
# text = ''x'' ∨ 1 = 1
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	5	punct	_	_
5	∨	∨	SYM	X	_	2	obj	_	_
6	1	1	NUM	N	NumType=Card	5	nummod	_	_
7	=	=	SYM	X	_	5	nmod	_	_
8	1	1	NUM	N	NumType=Card	7	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 245
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 246
# text = ''x'' ∨ 1
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	5	punct	_	_
5	∨	∨	SYM	X	_	2	obl	_	_
6	1	1	NUM	N	NumType=Card	5	nummod	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 247
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 248
# text = (''x'' ∨ 1) ∧ 1
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	6	punct	_	_
6	∨	∨	SYM	X	_	3	obl	_	_
7	1	1	NUM	N	NumType=Card	6	nummod	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	6	punct	_	_
9	∧	∧	SYM	X	_	3	obj	_	_
10	1	1	NUM	N	NumType=Card	9	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 249
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 250
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 251
# text = 1 ∧ (''x'' ∨ 1)
1	1	1	NUM	N	NumType=Card	2	nummod	_	_
2	∧	∧	SYM	X	_	5	obl	_	_
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PART	PART	_	5	mark	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	_
8	∨	∨	SYM	X	_	5	obj	_	_
9	1	1	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
10	)	)	PUNCT	FB	_	5	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 252
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 253
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 254
# text = (''x'' ∨ ¬''x'') ∧ (''x'' ∨ 1)
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	3	compound:prt	_	_
6	∨	∨	SYM	X	_	9	mark	_	_
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	_
13	∧	∧	SYM	X	_	16	mark	_	_
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	9	advcl	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	19	punct	_	_
19	∨	∨	SYM	X	_	16	obl	_	_
20	1	1	NUM	N	NumType=Card	19	nummod	_	SpaceAfter=No
21	)	)	PUNCT	FB	_	19	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 255
# text = by '''cpl1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 256
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 257
# text = ''x'' ∨ (¬''x'' ∧ 1)
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	5	case	_	_
5	∨	∨	SYM	X	_	9	obl	_	_
6	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	_
12	∧	∧	SYM	X	_	9	obj	_	_
13	1	1	NUM	N	NumType=Card	12	nummod	_	SpaceAfter=No
14	)	)	PUNCT	FB	_	9	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 258
# text = by '''dst1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst1	dst1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 259
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 260
# text = ''x'' ∨ ¬''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	8	mark	_	_
6	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 261
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 262
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 263
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 264
# text = by '''cpl1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 265
# text = '''bnd2''' dual ''x'' ∧ 0 = 0
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	bnd2	bnd2	NUM	N	NumType=Card	8	nsubj	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpacesAfter=\s \s
8	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s \s
9	'	'	PART	PART	_	8	compound:prt	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	13	punct	_	_
13	∧	∧	SYM	X	_	15	nmod	_	_
14	0	0	NUM	N	NumType=Card	13	nummod	_	_
15	=	=	SYM	X	_	10	obj	_	_
16	0	0	NUM	N	NumType=Card	10	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 266
# text = '''abs1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	abs1	abs1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 267
# text = ''x'' ∨ (''x'' ∧ ''y'') = ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	8	mark	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PART	PART	_	8	compound:prt	_	SpaceAfter=No
10	'	'	PART	PART	_	19	mark	_	_
11	∧	∧	SYM	X	_	19	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'y	'y	ADV	B	_	19	advmod	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	SpacesAfter=\s\s
17	=	=	SYM	X	_	19	nmod	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 268
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 269
# text = ''x'' ∨ (''x'' ∧ ''y'')
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	8	mark	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PART	PART	_	8	compound:prt	_	SpaceAfter=No
10	'	'	PART	PART	_	13	mark	_	_
11	∧	∧	SYM	X	_	13	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'y	'y	VERB	V	VerbForm=Inf	8	advcl	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 270
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 271
# text = (''x'' ∧ 1) ∨ (''x'' ∧ ''y'')
1	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	12	advcl	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	6	case	_	_
6	∧	∧	SYM	X	_	3	obl	_	_
7	1	1	NUM	N	NumType=Card	6	nummod	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	6	punct	_	_
9	∨	∨	SYM	X	_	12	mark	_	_
10	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
11	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
12	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
13	'	'	PART	PART	_	12	compound:prt	_	SpaceAfter=No
14	'	'	PART	PART	_	17	mark	_	_
15	∧	∧	SYM	X	_	17	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'y	'y	VERB	V	VerbForm=Inf	12	advcl	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 272
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 273
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 274
# text = ''x'' ∧ (1 ∨ ''y'')
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∧	∧	SYM	X	_	10	nsubj	_	_
6	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
7	1	1	NUM	N	NumType=Card	8	nummod	_	_
8	∨	∨	SYM	X	_	10	nmod	_	_
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'y	'y	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 275
# text = by '''dst2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst2	dst2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 276
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 277
# text = ''x'' ∧ (''y'' ∨ 1)
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	5	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∧	∧	SYM	X	_	2	obj	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'y	'y	VERB	V	VerbForm=Inf	5	acl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	11	punct	_	_
11	∨	∨	SYM	X	_	8	obl	_	_
12	1	1	NUM	N	NumType=Card	11	nummod	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	8	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 278
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 279
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 280
# text = ''x'' ∧ 1
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	5	punct	_	_
5	∧	∧	SYM	X	_	2	obl	_	_
6	1	1	NUM	N	NumType=Card	5	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 281
# text = by '''bnd1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	bnd1	bnd1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 282
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 283
# text = ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 284
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 285
# text = '''abs2''' dual ''x'' ∧ (''x'' ∨ ''y'') = ''x''
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	abs2	abs2	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpacesAfter=\s \s
8	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s \s
9	'	'	PART	PART	_	8	compound:prt	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'	'	PART	PART	_	10	case	_	_
13	∧	∧	SYM	X	_	16	mark	_	_
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	10	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	16	compound:prt	_	SpaceAfter=No
18	'	'	PART	PART	_	27	mark	_	_
19	∨	∨	SYM	X	_	27	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'y	'y	ADV	B	_	27	advmod	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	_
25	=	=	SYM	X	_	27	nmod	_	_
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'x	'x	VERB	V	VerbForm=Inf	16	xcomp	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	16	punct	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 286
# text = '''ung'''
1	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'ung	'ung	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 287
# text = if ''x'' ∨ ''x''n = 1 and ''x'' ∧ ''x''n = 0, then ''x''n = ¬''x''
1	if	if	SCONJ	CS	_	3	mark	_	_
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	26	advcl	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	8	mark	_	_
6	∨	∨	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	''n	'en	ADP	E	_	10	case	_	_
10	=	=	SYM	X	_	8	obl	_	_
11	1	1	NUM	N	NumType=Card	10	nummod	_	_
12	and	and	CCONJ	CC	_	14	cc	_	_
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'x	'x	VERB	V	VerbForm=Inf	8	conj	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'	'	PART	PART	_	19	mark	_	_
17	∧	∧	SYM	X	_	19	nmod	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'x	'x	VERB	V	VerbForm=Inf	14	xcomp	_	SpaceAfter=No
20	''n	'en	ADP	E	_	21	case	_	_
21	=	=	SYM	X	_	19	obl	_	_
22	0	0	NUM	N	NumType=Card	21	nummod	_	SpaceAfter=No
23	,	,	PUNCT	FF	_	3	punct	_	_
24	then	then	ADV	B	_	26	advmod	_	_
25	'	'	PART	PART	_	24	case	_	SpaceAfter=No
26	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
27	''n	''n	ADP	E	_	31	mark	_	_
28	=	=	SYM	X	_	29	nmod	_	_
29	¬	¬	SYM	X	_	31	nmod	_	SpaceAfter=No
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'x	'x	VERB	V	VerbForm=Inf	26	advcl	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	31	punct	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	26	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 288
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 289
# text = if ''x'' ∨ ''x''n = 1 and ''x'' ∧ ''x''n = 0, then
1	if	if	SCONJ	CS	_	3	mark	_	_
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	24	advcl	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	8	mark	_	_
6	∨	∨	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	''n	'en	ADP	E	_	10	case	_	_
10	=	=	SYM	X	_	8	obl	_	_
11	1	1	NUM	N	NumType=Card	10	nummod	_	_
12	and	and	CCONJ	CC	_	14	cc	_	_
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'x	'x	VERB	V	VerbForm=Inf	8	conj	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'	'	PART	PART	_	19	mark	_	_
17	∧	∧	SYM	X	_	19	nmod	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'x	'x	VERB	V	VerbForm=Inf	14	xcomp	_	SpaceAfter=No
20	''n	'en	ADP	E	_	21	case	_	_
21	=	=	SYM	X	_	19	obl	_	_
22	0	0	NUM	N	NumType=Card	21	nummod	_	SpaceAfter=No
23	,	,	PUNCT	FF	_	3	punct	_	_
24	then	then	ADV	B	_	0	root	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s\s\s\n\n

# newpar
# sent_id = 290
# text = ''x''n
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	''n	''n	ADP	E	_	2	compound:prt	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 291
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 292
# text = ''x''n ∧ 1
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	''n	''n	ADP	E	_	4	case	_	_
4	∧	∧	SYM	X	_	2	obl	_	_
5	1	1	NUM	N	NumType=Card	2	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 293
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 294
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 295
# text = ''x''n ∧ (''x'' ∨ ¬''x'')
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	''n	''n	ADP	E	_	4	case	_	_
4	∧	∧	SYM	X	_	2	obl	_	_
5	(	(	PUNCT	FB	_	6	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
7	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
8	'	'	PART	PART	_	13	mark	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	_
10	∨	∨	SYM	X	_	13	nsubj	_	_
11	¬	¬	SYM	X	_	13	nmod	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'x	'x	VERB	V	VerbForm=Inf	7	advcl	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 296
# text = by '''cpl1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 297
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 298
# text = (''x''n ∧ ''x'') ∨ (''x''n ∧ ¬''x'')
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	''n	''n	ADP	E	_	7	mark	_	_
5	∧	∧	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'x	'x	VERB	V	VerbForm=Inf	3	advcl	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
10	)	)	PUNCT	FB	_	7	punct	_	_
11	∨	∨	SYM	X	_	14	mark	_	_
12	(	(	PUNCT	FB	_	14	punct	_	SpaceAfter=No
13	'	'	PART	PART	_	14	mark	_	SpaceAfter=No
14	'x	'x	VERB	V	VerbForm=Inf	7	advcl	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'n	'n	VERB	V	VerbForm=Inf	14	xcomp	_	_
17	∧	∧	SYM	X	_	16	obj	_	_
18	¬	¬	SYM	X	_	20	nmod	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	SpaceAfter=No
20	'x	'x	VERB	V	VerbForm=Inf	17	acl	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
23	)	)	PUNCT	FB	_	20	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 299
# text = by '''dst2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst2	dst2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 300
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 301
# text = (''x'' ∧ ''x''n) ∨ (¬''x'' ∧ ''x''n)
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	8	case	_	_
6	∧	∧	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	NOUN	S	Gender=Masc|Number=Sing	3	obl	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'n	'n	ADV	B	_	12	advmod	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	10	punct	_	_
12	∨	∨	SYM	X	_	8	nmod	_	_
13	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	12	conj	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	21	mark	_	_
19	∧	∧	SYM	X	_	21	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'x	'x	VERB	V	VerbForm=Inf	16	xcomp	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'n	'n	VERB	V	VerbForm=Inf	21	xcomp	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 302
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 303
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 304
# text = 0 ∨ (¬''x'' ∧ ''x''n)
1	0	0	NUM	N	NumType=Card	2	nummod	_	_
2	∨	∨	SYM	X	_	6	obl	_	_
3	(	(	PUNCT	FB	_	6	punct	_	SpaceAfter=No
4	¬	¬	SYM	X	_	6	nmod	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'	'	PART	PART	_	11	mark	_	_
9	∧	∧	SYM	X	_	11	nmod	_	_
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'x	'x	VERB	V	VerbForm=Inf	6	xcomp	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'n	'n	VERB	V	VerbForm=Inf	11	xcomp	_	SpaceAfter=No
14	)	)	PUNCT	FB	_	6	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 305
# text = by assumption
1	by	by	ADP	E	_	2	case	_	_
2	assumption	assumption	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 306
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 307
# text = (''x'' ∧ ¬''x'') ∨ (¬''x'' ∧ ''x''n)
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∧	∧	SYM	X	_	9	nsubj	_	_
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	SpacesAfter=\s\s
13	∨	∨	SYM	X	_	17	mark	_	_
14	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
15	¬	¬	SYM	X	_	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'x	'x	VERB	V	VerbForm=Inf	9	advcl	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'	'	PART	PART	_	22	mark	_	_
20	∧	∧	SYM	X	_	22	nmod	_	_
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	17	xcomp	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'n	'n	VERB	V	VerbForm=Inf	22	xcomp	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	9	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 308
# text = by '''cpl2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl2	cpl2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 309
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 310
# text = (¬''x'' ∧ ''x'') ∨ (¬''x'' ∧ ''x''n)
1	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	4	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'	'	PART	PART	_	9	mark	_	_
7	∧	∧	SYM	X	_	9	nmod	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	SpacesAfter=\s\s
13	∨	∨	SYM	X	_	17	mark	_	_
14	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
15	¬	¬	SYM	X	_	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'x	'x	VERB	V	VerbForm=Inf	9	advcl	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'	'	PART	PART	_	17	case	_	_
20	∧	∧	SYM	X	_	22	nmod	_	_
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	17	xcomp	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'n	'n	VERB	V	VerbForm=Inf	22	xcomp	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	9	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 311
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 312
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 313
# text = ¬''x'' ∧ (''x'' ∨ ''x''n)
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	6	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∧	∧	SYM	X	_	3	obj	_	_
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	6	acl	_	SpaceAfter=No
10	'	'	PART	PART	_	9	compound:prt	_	SpaceAfter=No
11	'	'	PART	PART	_	14	mark	_	_
12	∨	∨	SYM	X	_	14	nmod	_	_
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'x	'x	VERB	V	VerbForm=Inf	9	xcomp	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'n	'n	VERB	V	VerbForm=Inf	14	xcomp	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	9	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 314
# text = by '''dst2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst2	dst2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 315
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 316
# text = ¬''x'' ∧ 1
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	_
6	∧	∧	SYM	X	_	3	obj	_	_
7	1	1	NUM	N	NumType=Card	6	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 317
# text = by assumption
1	by	by	ADP	E	_	2	case	_	_
2	assumption	assumption	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 318
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 319
# text = ¬''x''
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 320
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 321
# text = '''dng'''
1	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'dng	'dng	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 322
# text = ¬¬''x'' = ''x''
1	¬¬	¬¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'	'	PART	PART	_	8	mark	_	_
6	=	=	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 323
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\s\s\n\n\s

# newpar
# sent_id = 324
# text = ¬''x'' ∨ ''x'' = ''x'' ∨ ¬''x'' = 1
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'	'	PART	PART	_	3	case	_	_
6	∨	∨	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	13	mark	_	_
11	=	=	SYM	X	_	13	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
14	'	'	PART	PART	_	19	mark	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	_
16	∨	∨	SYM	X	_	19	nsubj	_	_
17	¬	¬	SYM	X	_	19	nmod	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'x	'x	VERB	V	VerbForm=Inf	13	advcl	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	_
22	=	=	SYM	X	_	19	obj	_	_
23	1	1	NUM	N	NumType=Card	22	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 325
# text = by '''cmm1''', '''cpl1'''
1	by	by	ADP	E	_	13	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	13	nummod	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	5	punct	_	_
10	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
13	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	13	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 326
# text = and
1	and	and	CCONJ	CC	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 327
# text = ¬''x'' ∧ ''x'' = ''x'' ∧ ¬''x'' = 0
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'	'	PART	PART	_	3	case	_	_
6	∧	∧	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	_
11	=	=	SYM	X	_	13	mark	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
14	'	'	PART	PART	_	19	mark	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	_
16	∧	∧	SYM	X	_	19	nsubj	_	_
17	¬	¬	SYM	X	_	19	nmod	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'x	'x	VERB	V	VerbForm=Inf	13	advcl	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	_
22	=	=	SYM	X	_	19	obj	_	_
23	0	0	NUM	N	NumType=Card	22	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 328
# text = by '''cmm2''', '''cpl2'''
1	by	by	ADP	E	_	13	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	13	nummod	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	5	punct	_	_
10	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
13	cpl2	cpl2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	13	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 329
# text = hence
1	hence	hence	ADV	B	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 330
# text = ''x'' = ¬¬''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	=	=	SYM	X	_	8	mark	_	_
6	¬¬	¬¬	SYM	X	_	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 331
# text = by '''ung'''
1	by	by	ADP	E	_	4	mark	_	_
2	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'ung	'ung	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 332
# text = '''a1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	a1	a1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 333
# text = ''x'' ∨ (¬''x'' ∨ ''y'') = 1
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	5	case	_	_
5	∨	∨	SYM	X	_	2	obl	_	_
6	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	5	conj	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	14	mark	_	_
12	∨	∨	SYM	X	_	14	nmod	_	_
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'y	'y	VERB	V	VerbForm=Inf	9	xcomp	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	_
18	=	=	SYM	X	_	9	obl	_	_
19	1	1	NUM	N	NumType=Card	18	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 334
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 335
# text = ''x'' ∨ (¬''x'' ∨ ''y'')
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	5	case	_	_
5	∨	∨	SYM	X	_	9	mark	_	_
6	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	14	mark	_	_
12	∨	∨	SYM	X	_	14	nmod	_	_
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'y	'y	VERB	V	VerbForm=Inf	9	advcl	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 336
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 337
# text = (''x'' ∨ (¬''x'' ∨ ''y'')) ∧ 1
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	10	nsubj	_	_
7	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
8	¬	¬	SYM	X	_	10	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'	'	PART	PART	_	15	mark	_	_
13	∨	∨	SYM	X	_	15	nmod	_	_
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'y	'y	VERB	V	VerbForm=Inf	10	xcomp	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	15	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	15	punct	_	_
20	∧	∧	SYM	X	_	10	obl	_	_
21	1	1	NUM	N	NumType=Card	20	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 338
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 339
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 340
# text = 1 ∧ (''x'' ∨ (¬''x'' ∨ ''y''))
1	1	1	NUM	N	NumType=Card	2	nummod	_	_
2	∧	∧	SYM	X	_	0	root	_	_
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PART	PART	_	5	mark	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	2	acl	_	SpaceAfter=No
6	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	_
8	∨	∨	SYM	X	_	12	mark	_	_
9	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
10	¬	¬	SYM	X	_	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'x	'x	VERB	V	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	17	mark	_	_
15	∨	∨	SYM	X	_	17	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'y	'y	VERB	V	VerbForm=Inf	12	xcomp	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	SpaceAfter=No
21	)	)	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 341
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 342
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 343
# text = (''x'' ∨ ¬''x'') ∧ (''x'' ∨ (¬''x'' ∨ ''y''))
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	3	compound:prt	_	_
6	∨	∨	SYM	X	_	9	mark	_	_
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	_
13	∧	∧	SYM	X	_	16	mark	_	_
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	9	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	19	mark	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	_
19	∨	∨	SYM	X	_	16	obj	_	_
20	(	(	PUNCT	FB	_	23	punct	_	SpaceAfter=No
21	¬	¬	SYM	X	_	23	nmod	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'x	'x	VERB	V	VerbForm=Inf	19	conj	_	SpaceAfter=No
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'	'	PART	PART	_	28	mark	_	_
26	∨	∨	SYM	X	_	28	nmod	_	_
27	'	'	PART	PART	_	26	case	_	SpaceAfter=No
28	'y	'y	VERB	V	VerbForm=Inf	23	xcomp	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
31	)	)	PUNCT	FB	_	28	punct	_	SpaceAfter=No
32	)	)	PUNCT	FB	_	23	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 344
# text = by '''cpl1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 345
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 346
# text = ''x'' ∨ (¬''x'' ∧ (¬''x'' ∨ ''y''))
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	5	case	_	_
5	∨	∨	SYM	X	_	9	obl	_	_
6	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
10	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	_
12	∧	∧	SYM	X	_	16	mark	_	_
13	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	9	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	21	mark	_	_
19	∨	∨	SYM	X	_	21	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'y	'y	VERB	V	VerbForm=Inf	16	xcomp	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	9	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 347
# text = by '''dst1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst1	dst1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 348
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 349
# text = ''x'' ∨ ¬''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	8	mark	_	_
6	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 350
# text = by '''abs2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	abs2	abs2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 351
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 352
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 353
# text = by '''cpl1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 354
# text = '''a2''' dual ''x'' ∧ (¬''x'' ∧ ''y'') = 0
1	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'a2	'a2	NUM	N	NumType=Card	7	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpacesAfter=\s \s
7	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s \s
8	'	'	PART	PART	_	7	compound:prt	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	7	xcomp	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	9	case	_	_
12	∧	∧	SYM	X	_	9	obj	_	_
13	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	12	conj	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	21	mark	_	_
19	∧	∧	SYM	X	_	21	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'y	'y	VERB	V	VerbForm=Inf	16	advcl	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	_
25	=	=	SYM	X	_	16	obj	_	_
26	0	0	NUM	N	NumType=Card	25	flat	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 355
# text = '''b1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	b1	b1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 356
# text = (''x'' ∨ ''y'') ∨ (¬''x'' ∧ ¬''y'') = 1
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	16	mark	_	_
6	∨	∨	SYM	X	_	12	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'y	'y	ADV	B	_	12	advmod	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	8	punct	_	_
12	∨	∨	SYM	X	_	16	nsubj	_	_
13	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	3	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	22	mark	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	_
19	∧	∧	SYM	X	_	22	nsubj	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'y	'y	VERB	V	VerbForm=Inf	16	ccomp	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	_
26	=	=	SYM	X	_	22	obj	_	_
27	1	1	NUM	N	NumType=Card	26	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 357
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 358
# text = (''x'' ∨ ''y'') ∨ (¬''x'' ∧ ¬''y'')
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	16	mark	_	_
6	∨	∨	SYM	X	_	12	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'y	'y	ADV	B	_	12	advmod	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	8	punct	_	_
12	∨	∨	SYM	X	_	16	nsubj	_	_
13	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	3	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	22	mark	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	_
19	∧	∧	SYM	X	_	22	nsubj	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'y	'y	VERB	V	VerbForm=Inf	16	advcl	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 359
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 360
# text = ((''x'' ∨ ''y'') ∨ ¬''x'') ∧ ((''x'' ∨ ''y'') ∨ ¬''y'')
1	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
4	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PART	PART	_	4	compound:prt	_	SpaceAfter=No
6	'	'	PART	PART	_	16	mark	_	_
7	∨	∨	SYM	X	_	16	nmod	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'y	'y	ADV	B	_	16	advmod	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	_
13	∨	∨	SYM	X	_	16	mark	_	_
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	_
20	∧	∧	SYM	X	_	24	mark	_	_
21	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
22	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
23	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
24	'x	'x	VERB	V	VerbForm=Inf	16	advcl	_	SpaceAfter=No
25	'	'	PART	PART	_	24	compound:prt	_	SpaceAfter=No
26	'	'	PART	PART	_	24	compound:prt	_	_
27	∨	∨	SYM	X	_	29	nmod	_	_
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'y	'y	NOUN	S	Number=Sing	24	obj	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
32	)	)	PUNCT	FB	_	29	punct	_	_
33	∨	∨	SYM	X	_	36	mark	_	SpacesAfter=\s\s
34	¬	¬	SYM	X	_	36	nmod	_	SpaceAfter=No
35	'	'	PART	PART	_	34	case	_	SpaceAfter=No
36	'y	'y	VERB	V	VerbForm=Inf	24	advcl	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
39	)	)	PUNCT	FB	_	36	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 361
# text = by '''dst1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst1	dst1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 362
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 363
# text = (¬''x'' ∨ (''x'' ∨ ''y'')) ∧ (¬''y'' ∨ (''y'' ∨ ''x''))
1	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	4	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	_
7	∨	∨	SYM	X	_	24	nsubj	_	_
8	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	24	advcl	_	SpaceAfter=No
11	'	'	PART	PART	_	10	compound:prt	_	SpaceAfter=No
12	'	'	PART	PART	_	15	case	_	_
13	∨	∨	SYM	X	_	15	nmod	_	_
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'y	'y	NOUN	S	Number=Sing	10	obl	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	15	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	10	punct	_	_
20	∧	∧	SYM	X	_	24	mark	_	_
21	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
22	¬	¬	SYM	X	_	24	nmod	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'y	'y	VERB	V	VerbForm=Inf	4	ccomp	_	SpaceAfter=No
25	'	'	PART	PART	_	27	mark	_	SpaceAfter=No
26	'	'	PART	PART	_	25	case	_	_
27	∨	∨	SYM	X	_	24	obj	_	_
28	(	(	PUNCT	FB	_	30	punct	_	SpaceAfter=No
29	'	'	PART	PART	_	30	mark	_	SpaceAfter=No
30	'y	'y	VERB	V	VerbForm=Inf	27	acl	_	SpaceAfter=No
31	'	'	PART	PART	_	30	compound:prt	_	SpaceAfter=No
32	'	'	PART	PART	_	35	mark	_	_
33	∨	∨	SYM	X	_	35	nmod	_	_
34	'	'	PART	PART	_	33	case	_	SpaceAfter=No
35	'x	'x	VERB	V	VerbForm=Inf	30	xcomp	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	35	punct	_	SpaceAfter=No
39	)	)	PUNCT	FB	_	30	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 364
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 365
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 366
# text = (¬''x'' ∨ (¬¬''x'' ∨ ''y'')) ∧ (¬''y'' ∨ (¬¬''y'' ∨ ''x''))
1	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	4	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PART	PART	_	25	mark	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	_
7	∨	∨	SYM	X	_	25	nsubj	_	_
8	(	(	PUNCT	FB	_	11	punct	_	SpaceAfter=No
9	¬¬	¬¬	SYM	X	_	11	nmod	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'x	'x	VERB	V	VerbForm=Inf	25	advcl	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'	'	PART	PART	_	11	case	_	_
14	∨	∨	SYM	X	_	16	nmod	_	_
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'y	'y	NOUN	S	Number=Sing	11	obj	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	11	punct	_	_
21	∧	∧	SYM	X	_	25	mark	_	_
22	(	(	PUNCT	FB	_	25	punct	_	SpaceAfter=No
23	¬	¬	SYM	X	_	25	nmod	_	SpaceAfter=No
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'y	'y	VERB	V	VerbForm=Inf	4	ccomp	_	SpaceAfter=No
26	'	'	PART	PART	_	32	mark	_	SpaceAfter=No
27	'	'	PART	PART	_	26	case	_	_
28	∨	∨	SYM	X	_	32	nsubj	_	_
29	(	(	PUNCT	FB	_	32	punct	_	SpaceAfter=No
30	¬¬	¬¬	SYM	X	_	32	nmod	_	SpaceAfter=No
31	'	'	PART	PART	_	30	case	_	SpaceAfter=No
32	'y	'y	VERB	V	VerbForm=Inf	25	advcl	_	SpaceAfter=No
33	'	'	PART	PART	_	32	case	_	SpaceAfter=No
34	'	'	PART	PART	_	37	mark	_	_
35	∨	∨	SYM	X	_	37	nmod	_	_
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'x	'x	VERB	V	VerbForm=Inf	32	xcomp	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
40	)	)	PUNCT	FB	_	37	punct	_	SpaceAfter=No
41	)	)	PUNCT	FB	_	32	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 367
# text = by '''dng'''
1	by	by	ADP	E	_	4	mark	_	_
2	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'dng	'dng	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 368
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 369
# text = 1 ∧ 1
1	1	1	NUM	N	NumType=Card	2	nummod	_	_
2	∧	∧	SYM	X	_	0	root	_	_
3	1	1	NUM	N	NumType=Card	2	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 370
# text = by '''a1'''
1	by	by	ADP	E	_	4	case	_	_
2	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'a1	'a1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 371
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 372
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 373
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 374
# text = '''b2''' dual (''x'' ∧ ''y'') ∧ (¬''x'' ∨ ¬''y'') = 0
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	b2	b2	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpacesAfter=\s \s
8	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s \s
9	(	(	PUNCT	FB	_	11	punct	_	SpaceAfter=No
10	'	'	PART	PART	_	11	mark	_	SpaceAfter=No
11	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
12	'	'	PART	PART	_	11	compound:prt	_	SpaceAfter=No
13	'	'	PART	PART	_	24	mark	_	_
14	∧	∧	SYM	X	_	20	nmod	_	_
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'y	'y	ADV	B	_	20	advmod	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	_
20	∧	∧	SYM	X	_	24	nsubj	_	_
21	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
22	¬	¬	SYM	X	_	24	nmod	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'x	'x	VERB	V	VerbForm=Inf	11	advcl	_	SpaceAfter=No
25	'	'	PART	PART	_	30	mark	_	SpaceAfter=No
26	'	'	PART	PART	_	25	case	_	_
27	∨	∨	SYM	X	_	30	nsubj	_	_
28	¬	¬	SYM	X	_	30	nmod	_	SpaceAfter=No
29	'	'	PART	PART	_	28	case	_	SpaceAfter=No
30	'y	'y	VERB	V	VerbForm=Inf	24	advcl	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
33	)	)	PUNCT	FB	_	30	punct	_	_
34	=	=	SYM	X	_	24	obj	_	_
35	0	0	NUM	N	NumType=Card	34	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 375
# text = '''c1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'c1	'c1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 376
# text = (''x'' ∨ ''y'') ∧ (¬''x'' ∧ ¬''y'') = 0
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	16	mark	_	_
6	∨	∨	SYM	X	_	12	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'y	'y	ADV	B	_	12	advmod	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	8	punct	_	_
12	∧	∧	SYM	X	_	16	nsubj	_	_
13	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
17	'	'	PART	PART	_	22	mark	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	_
19	∧	∧	SYM	X	_	22	nsubj	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'y	'y	VERB	V	VerbForm=Inf	16	advcl	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	_
26	=	=	SYM	X	_	16	obj	_	_
27	0	0	NUM	N	NumType=Card	26	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 377
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 378
# text = (''x'' ∨ ''y'') ∧ (¬''x'' ∧ ¬''y'')
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	16	mark	_	_
6	∨	∨	SYM	X	_	12	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'y	'y	ADV	B	_	12	advmod	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	8	punct	_	_
12	∧	∧	SYM	X	_	16	nsubj	_	_
13	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	3	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	22	mark	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	_
19	∧	∧	SYM	X	_	22	nsubj	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'y	'y	VERB	V	VerbForm=Inf	16	advcl	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 379
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 380
# text = (¬''x'' ∧ ¬''y'') ∧ (''x'' ∨ ''y'')
1	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	4	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PART	PART	_	17	mark	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	_
7	∧	∧	SYM	X	_	17	nsubj	_	_
8	¬	¬	SYM	X	_	17	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'y	'y	ADV	B	_	17	advmod	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	_
14	∧	∧	SYM	X	_	17	mark	_	_
15	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
16	'	'	PART	PART	_	17	mark	_	SpaceAfter=No
17	'x	'x	VERB	V	VerbForm=Inf	4	ccomp	_	SpaceAfter=No
18	'	'	PART	PART	_	17	compound:prt	_	SpaceAfter=No
19	'	'	PART	PART	_	22	mark	_	_
20	∨	∨	SYM	X	_	22	nmod	_	_
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'y	'y	VERB	V	VerbForm=Inf	17	advcl	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 381
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 382
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 383
# text = ((¬''x'' ∧ ¬''y'') ∧ ''x'') ∨ ((¬''x'' ∧ ¬''y'') ∧ ''y'')
1	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
3	¬	¬	SYM	X	_	5	nmod	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'	'	PART	PART	_	5	compound:prt	_	_
8	∧	∧	SYM	X	_	17	mark	_	_
9	¬	¬	SYM	X	_	17	nmod	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'y	'y	ADV	B	_	17	advmod	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
14	)	)	PUNCT	FB	_	11	punct	_	_
15	∧	∧	SYM	X	_	17	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'x	'x	VERB	V	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	_
21	∨	∨	SYM	X	_	26	mark	_	_
22	(	(	PUNCT	FB	_	26	punct	_	SpaceAfter=No
23	(	(	PUNCT	FB	_	26	punct	_	SpaceAfter=No
24	¬	¬	SYM	X	_	26	nmod	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	SpaceAfter=No
26	'x	'x	VERB	V	VerbForm=Inf	17	advcl	_	SpaceAfter=No
27	'	'	PART	PART	_	38	mark	_	SpaceAfter=No
28	'	'	PART	PART	_	27	case	_	_
29	∧	∧	SYM	X	_	32	nmod	_	_
30	¬	¬	SYM	X	_	32	nmod	_	SpaceAfter=No
31	'	'	PART	PART	_	30	case	_	SpaceAfter=No
32	'y	'y	NOUN	S	Number=Sing	38	nsubj	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
35	)	)	PUNCT	FB	_	32	punct	_	_
36	∧	∧	SYM	X	_	38	nmod	_	_
37	'	'	PART	PART	_	36	case	_	SpaceAfter=No
38	'y	'y	VERB	V	VerbForm=Inf	26	advcl	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	38	punct	_	SpaceAfter=No
40	'	'	PUNCT	FB	_	38	punct	_	SpaceAfter=No
41	)	)	PUNCT	FB	_	38	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 384
# text = by '''dst2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst2	dst2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 385
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 386
# text = (''x'' ∧ (¬''x'' ∧ ¬''y'')) ∨ (''y'' ∧ (¬''y'' ∧ ¬''x''))
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∧	∧	SYM	X	_	10	nsubj	_	_
7	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
8	¬	¬	SYM	X	_	10	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
11	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	_
13	∧	∧	SYM	X	_	16	nmod	_	_
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'y	'y	NOUN	S	Number=Sing	11	conj	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	16	punct	_	_
21	∨	∨	SYM	X	_	24	mark	_	_
22	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
23	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
24	'y	'y	VERB	V	VerbForm=Inf	10	advcl	_	SpaceAfter=No
25	'	'	PART	PART	_	31	mark	_	SpaceAfter=No
26	'	'	PART	PART	_	25	case	_	_
27	∧	∧	SYM	X	_	31	obl	_	_
28	(	(	PUNCT	FB	_	31	punct	_	SpaceAfter=No
29	¬	¬	SYM	X	_	31	nmod	_	SpaceAfter=No
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'y	'y	VERB	V	VerbForm=Inf	24	xcomp	_	SpaceAfter=No
32	'	'	PART	PART	_	31	case	_	SpaceAfter=No
33	'	'	PART	PART	_	31	compound:prt	_	_
34	∧	∧	SYM	X	_	31	obj	_	_
35	¬	¬	SYM	X	_	37	nmod	_	SpaceAfter=No
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'x	'x	VERB	V	VerbForm=Inf	34	acl	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
40	)	)	PUNCT	FB	_	37	punct	_	SpaceAfter=No
41	)	)	PUNCT	FB	_	31	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 387
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 388
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 389
# text = 0 ∨ 0
1	0	0	NUM	N	NumType=Card	2	nummod	_	_
2	∨	∨	SYM	X	_	0	root	_	_
3	0	0	NUM	N	NumType=Card	2	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 390
# text = by '''a2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	a2	a2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 391
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 392
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 393
# text = by '''idn1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn1	idn1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 394
# text = '''c2''' dual (''x'' ∧ ''y'') ∨ (¬''x'' ∨ ¬''y'') = 1
1	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'c2	'c2	NUM	N	NumType=Card	7	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpacesAfter=\s \s
7	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s \s
8	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	7	xcomp	_	SpaceAfter=No
11	'	'	PART	PART	_	10	compound:prt	_	SpaceAfter=No
12	'	'	PART	PART	_	23	mark	_	_
13	∧	∧	SYM	X	_	19	nmod	_	_
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'y	'y	ADV	B	_	19	advmod	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	15	punct	_	_
19	∨	∨	SYM	X	_	23	nsubj	_	_
20	(	(	PUNCT	FB	_	23	punct	_	SpaceAfter=No
21	¬	¬	SYM	X	_	23	nmod	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'x	'x	VERB	V	VerbForm=Inf	10	advcl	_	SpaceAfter=No
24	'	'	PART	PART	_	29	mark	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	_
26	∨	∨	SYM	X	_	29	nsubj	_	_
27	¬	¬	SYM	X	_	29	nmod	_	SpaceAfter=No
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'y	'y	VERB	V	VerbForm=Inf	23	ccomp	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
32	)	)	PUNCT	FB	_	29	punct	_	_
33	=	=	SYM	X	_	29	obj	_	_
34	1	1	NUM	N	NumType=Card	33	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 395
# text = '''dmg1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	dmg1	dmg1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 396
# text = ¬(''x'' ∨ ''y'') = ¬''x'' ∧ ¬''y''
1	¬	¬	SYM	X	_	0	root	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
4	'x	'x	VERB	V	VerbForm=Inf	1	acl	_	SpaceAfter=No
5	'	'	PART	PART	_	4	compound:prt	_	SpaceAfter=No
6	'	'	PART	PART	_	16	mark	_	_
7	∨	∨	SYM	X	_	16	nmod	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'y	'y	ADV	B	_	16	advmod	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	_
13	=	=	SYM	X	_	16	mark	_	_
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	16	compound:prt	_	_
19	∧	∧	SYM	X	_	22	mark	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'y	'y	VERB	V	VerbForm=Inf	16	xcomp	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 397
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 398
# text = by '''b1''', '''c1''', and '''ung'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PART	PART	_	5	advmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'	'	PART	PART	_	2	case	_	SpaceAfter=No
5	b1	b1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	5	punct	_	_
10	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
13	c1	c1	NUM	N	NumType=Card	5	nummod	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
17	,	,	PUNCT	FF	_	21	punct	_	_
18	and	and	CCONJ	CC	_	21	cc	_	_
19	'	'	PART	PART	_	21	mark	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'ung	'ung	VERB	V	VerbForm=Inf	5	conj	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 399
# text = '''dmg2''' dual ¬(''x'' ∧ ''y'') = ¬''x'' ∨ ¬''y''
1	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	dmg2	dmg2	NUM	N	NumType=Card	12	nummod	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	4	case	_	SpaceAfter=No
7	'	'	PART	PART	_	12	mark	_	SpacesAfter=\s \s
8	dual	du	ADJ	A	Degree=Pos	9	amod	_	SpacesAfter=\s \s
9	¬	¬	SYM	X	_	12	nsubj	_	SpaceAfter=No
10	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
11	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
12	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
13	'	'	PART	PART	_	12	compound:prt	_	SpaceAfter=No
14	'	'	PART	PART	_	24	mark	_	_
15	∧	∧	SYM	X	_	24	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'y	'y	ADV	B	_	24	advmod	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	_
21	=	=	SYM	X	_	24	mark	_	_
22	¬	¬	SYM	X	_	24	nmod	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'x	'x	VERB	V	VerbForm=Inf	12	xcomp	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	SpaceAfter=No
26	'	'	PART	PART	_	24	compound:prt	_	_
27	∨	∨	SYM	X	_	30	mark	_	_
28	¬	¬	SYM	X	_	30	nmod	_	SpaceAfter=No
29	'	'	PART	PART	_	28	case	_	SpaceAfter=No
30	'y	'y	VERB	V	VerbForm=Inf	24	xcomp	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	12	punct	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 400
# text = '''d1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'd1	'd1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 401
# text = (''x''∨(''y''∨''z'')) ∨ ¬''x'' = 1
1	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	'x	'x	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'∨	'∨	NOUN	S	Number=Sing	20	obl	_	SpaceAfter=No
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'y	'y	VERB	V	VerbForm=Inf	5	acl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'∨	'∨	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'z	'z	PROPN	SP	_	8	obj	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	8	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	5	punct	_	_
17	∨	∨	SYM	X	_	20	nsubj	_	_
18	¬	¬	SYM	X	_	20	nmod	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	SpaceAfter=No
20	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	_
23	=	=	SYM	X	_	20	obj	_	_
24	1	1	NUM	N	NumType=Card	23	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 402
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 403
# text = (''x'' ∨ (''y'' ∨ ''z'')) ∨ ¬''x''
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	9	mark	_	_
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
10	'	'	PART	PART	_	9	compound:prt	_	SpaceAfter=No
11	'	'	PART	PART	_	14	case	_	_
12	∨	∨	SYM	X	_	14	nmod	_	_
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'z	'z	PROPN	SP	_	9	obl	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	9	punct	_	_
19	∨	∨	SYM	X	_	22	mark	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	9	conj	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 404
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 405
# text = ¬''x'' ∨ (''x'' ∨ (''y'' ∨ ''z''))
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	6	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	3	obj	_	_
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	6	acl	_	SpaceAfter=No
10	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	_
12	∨	∨	SYM	X	_	9	obj	_	_
13	(	(	PUNCT	FB	_	15	punct	_	SpaceAfter=No
14	'	'	PART	PART	_	15	mark	_	SpaceAfter=No
15	'y	'y	VERB	V	VerbForm=Inf	12	acl	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	_
18	∨	∨	SYM	X	_	15	conj	_	_
19	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
20	'z	'z	PROPN	SP	_	18	appos	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
23	)	)	PUNCT	FB	_	20	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	15	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 406
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 407
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 408
# text = ¬''x'' ∨ (¬¬''x'' ∨ (''y'' ∨ ''z''))
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	6	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	3	obj	_	_
7	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
8	¬¬	¬¬	SYM	X	_	10	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	6	conj	_	SpaceAfter=No
11	'	'	PART	PART	_	13	mark	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	_
13	∨	∨	SYM	X	_	10	obj	_	_
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'y	'y	VERB	V	VerbForm=Inf	13	acl	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	_
19	∨	∨	SYM	X	_	16	conj	_	_
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'z	'z	PROPN	SP	_	19	appos	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	16	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 409
# text = by '''dng'''
1	by	by	ADP	E	_	4	mark	_	_
2	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'dng	'dng	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 410
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 411
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 412
# text = by '''a1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	a1	a1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 413
# text = '''d2''' dual (''x''∧(''y''∧''z'')) ∧ ¬''x'' = 0
1	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'd2	'd2	NUM	N	NumType=Card	7	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpacesAfter=\s \s
7	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s \s
8	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'x	'x	NOUN	S	Gender=Masc|Number=Sing	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'∧	'∧	NOUN	S	Number=Sing	7	obj	_	SpaceAfter=No
13	(	(	PUNCT	FB	_	19	punct	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'y	'y	NOUN	S	Number=Sing	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'∧	'∧	NOUN	S	Number=Sing	19	nmod	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'z	'z	PROPN	SP	_	12	nmod	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
22	)	)	PUNCT	FB	_	19	punct	_	SpaceAfter=No
23	)	)	PUNCT	FB	_	12	punct	_	_
24	∧	∧	SYM	X	_	27	nsubj	_	_
25	¬	¬	SYM	X	_	27	nmod	_	SpaceAfter=No
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'x	'x	VERB	V	VerbForm=Inf	7	conj	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	27	punct	_	_
30	=	=	SYM	X	_	27	obj	_	_
31	0	0	NUM	N	NumType=Card	30	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 414
# text = '''e1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'e1	'e1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 415
# text = ''y'' ∧ (''x''∨(''y''∨''z'')) = ''y''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∧	∧	SYM	X	_	24	nmod	_	_
6	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'x	'x	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'∨	'∨	NOUN	S	Number=Sing	5	appos	_	SpaceAfter=No
11	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
12	'	'	PART	PART	_	17	case	_	SpaceAfter=No
13	'y	'y	NOUN	S	Number=Sing	15	nmod	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'∨	'∨	NOUN	S	Number=Sing	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'z	'z	PROPN	SP	_	10	nmod	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	SpaceAfter=No
21	)	)	PUNCT	FB	_	10	punct	_	_
22	=	=	SYM	X	_	24	nmod	_	_
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'y	'y	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 416
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 417
# text = ''y'' ∧ (''x'' ∨ (''y'' ∨ ''z''))
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∧	∧	SYM	X	_	8	mark	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PART	PART	_	11	mark	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	_
11	∨	∨	SYM	X	_	8	obj	_	_
12	(	(	PUNCT	FB	_	14	punct	_	SpaceAfter=No
13	'	'	PART	PART	_	14	mark	_	SpaceAfter=No
14	'y	'y	VERB	V	VerbForm=Inf	11	advcl	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	_
17	∨	∨	SYM	X	_	14	conj	_	_
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'z	'z	PROPN	SP	_	17	appos	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
22	)	)	PUNCT	FB	_	19	punct	_	SpaceAfter=No
23	)	)	PUNCT	FB	_	14	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 418
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 419
# text = (''y'' ∧ ''x'') ∨ (''y'' ∧ (''y'' ∨ ''z''))
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	8	mark	_	_
6	∧	∧	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	8	punct	_	_
12	∨	∨	SYM	X	_	15	mark	_	_
13	(	(	PUNCT	FB	_	15	punct	_	SpaceAfter=No
14	'	'	PART	PART	_	15	mark	_	SpaceAfter=No
15	'y	'y	VERB	V	VerbForm=Inf	8	advcl	_	SpaceAfter=No
16	'	'	PART	PART	_	18	mark	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	_
18	∧	∧	SYM	X	_	15	obj	_	_
19	(	(	PUNCT	FB	_	21	punct	_	SpaceAfter=No
20	'	'	PART	PART	_	21	mark	_	SpaceAfter=No
21	'y	'y	VERB	V	VerbForm=Inf	18	advcl	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	_
24	∨	∨	SYM	X	_	21	conj	_	_
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'z	'z	PROPN	SP	_	24	appos	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	26	punct	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	26	punct	_	SpaceAfter=No
29	)	)	PUNCT	FB	_	26	punct	_	SpaceAfter=No
30	)	)	PUNCT	FB	_	21	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 420
# text = by '''dst2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst2	dst2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 421
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 422
# text = (''y'' ∧ ''x'') ∨ ''y''
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	8	mark	_	_
6	∧	∧	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	8	punct	_	_
12	∨	∨	SYM	X	_	14	mark	_	_
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'y	'y	VERB	V	VerbForm=Inf	8	advcl	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 423
# text = by '''abs2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	abs2	abs2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 424
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 425
# text = ''y'' ∨ (''y'' ∧ ''x'')
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	8	mark	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'y	'y	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PART	PART	_	8	compound:prt	_	SpaceAfter=No
10	'	'	PART	PART	_	13	mark	_	_
11	∧	∧	SYM	X	_	13	nmod	_	_
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'x	'x	VERB	V	VerbForm=Inf	8	advcl	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 426
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 427
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 428
# text = ''y''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 429
# text = by '''abs1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	abs1	abs1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 430
# text = '''e2''' dual ''y'' ∨ (''x''∧(''y''∧''z'')) = ''y''
1	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'e2	'e2	NUM	N	NumType=Card	9	nsubj	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PART	PART	_	3	case	_	SpaceAfter=No
6	'	'	PART	PART	_	9	mark	_	SpacesAfter=\s \s
7	dual	du	ADJ	A	Degree=Pos	9	amod	_	SpacesAfter=\s \s
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
10	'	'	PART	PART	_	31	mark	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	_
12	∨	∨	SYM	X	_	31	nmod	_	_
13	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'x	'x	NOUN	S	Number=Sing	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'∧	'∧	NOUN	S	Number=Sing	12	appos	_	SpaceAfter=No
18	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
19	'	'	PART	PART	_	24	case	_	SpaceAfter=No
20	'y	'y	NOUN	S	Number=Sing	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'∧	'∧	NOUN	S	Number=Sing	24	nmod	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'z	'z	PROPN	SP	_	17	nmod	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
27	)	)	PUNCT	FB	_	24	punct	_	SpaceAfter=No
28	)	)	PUNCT	FB	_	17	punct	_	_
29	=	=	SYM	X	_	31	nmod	_	_
30	'	'	PART	PART	_	29	case	_	SpaceAfter=No
31	'y	'y	VERB	V	VerbForm=Inf	9	xcomp	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	31	punct	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	9	punct	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 431
# text = '''f1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'f1	'f1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 432
# text = (''x''∨(''y''∨''z'')) ∨ ¬''y'' = 1
1	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
3	'x	'x	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'∨	'∨	NOUN	S	Number=Sing	20	obl	_	SpaceAfter=No
6	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	12	case	_	SpaceAfter=No
8	'y	'y	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'∨	'∨	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'z	'z	PROPN	SP	_	5	nmod	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	12	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	5	punct	_	_
17	∨	∨	SYM	X	_	20	nsubj	_	_
18	¬	¬	SYM	X	_	20	nmod	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	SpaceAfter=No
20	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	_
23	=	=	SYM	X	_	20	obj	_	_
24	1	1	NUM	N	NumType=Card	23	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 433
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 434
# text = (''x'' ∨ (''y'' ∨ ''z'')) ∨ ¬''y''
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	9	mark	_	_
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
10	'	'	PART	PART	_	9	compound:prt	_	SpaceAfter=No
11	'	'	PART	PART	_	14	case	_	_
12	∨	∨	SYM	X	_	14	nmod	_	_
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'z	'z	PROPN	SP	_	9	obl	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	9	punct	_	_
19	∨	∨	SYM	X	_	22	mark	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'y	'y	VERB	V	VerbForm=Inf	9	conj	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 435
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 436
# text = ¬''y'' ∨ (''x'' ∨ (''y'' ∨ ''z''))
1	¬	¬	SYM	X	_	3	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	6	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	3	obj	_	_
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	6	acl	_	SpaceAfter=No
10	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	_
12	∨	∨	SYM	X	_	9	obj	_	_
13	(	(	PUNCT	FB	_	15	punct	_	SpaceAfter=No
14	'	'	PART	PART	_	15	mark	_	SpaceAfter=No
15	'y	'y	VERB	V	VerbForm=Inf	12	acl	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	_
18	∨	∨	SYM	X	_	15	conj	_	_
19	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
20	'z	'z	PROPN	SP	_	18	appos	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
23	)	)	PUNCT	FB	_	20	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	15	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 437
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 438
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 439
# text = (¬''y'' ∨ (''x'' ∨ (''y'' ∨ ''z''))) ∧ 1
1	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	4	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	_
7	∨	∨	SYM	X	_	10	nsubj	_	_
8	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	4	ccomp	_	SpaceAfter=No
11	'	'	PART	PART	_	27	mark	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	_
13	∨	∨	SYM	X	_	27	nmod	_	_
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'y	'y	VERB	V	VerbForm=Inf	27	advcl	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	_
19	∨	∨	SYM	X	_	16	appos	_	_
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'z	'z	PROPN	SP	_	19	appos	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	19	punct	_	SpaceAfter=No
26	)	)	PUNCT	FB	_	16	punct	_	_
27	∧	∧	SYM	X	_	10	obj	_	_
28	1	1	NUM	N	NumType=Card	27	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 440
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 441
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 442
# text = 1 ∧ (¬''y'' ∨ (''x'' ∨ (''y'' ∨ ''z'')))
1	1	1	NUM	N	NumType=Card	2	nummod	_	_
2	∧	∧	SYM	X	_	6	obl	_	_
3	(	(	PUNCT	FB	_	6	punct	_	SpaceAfter=No
4	¬	¬	SYM	X	_	6	nmod	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
7	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	_
9	∨	∨	SYM	X	_	6	obj	_	_
10	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
11	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
12	'x	'x	VERB	V	VerbForm=Inf	9	acl	_	SpaceAfter=No
13	'	'	PART	PART	_	15	mark	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	_
15	∨	∨	SYM	X	_	12	obj	_	_
16	(	(	PUNCT	FB	_	18	punct	_	SpaceAfter=No
17	'	'	PART	PART	_	18	mark	_	SpaceAfter=No
18	'y	'y	VERB	V	VerbForm=Inf	15	acl	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	18	punct	_	_
21	∨	∨	SYM	X	_	18	conj	_	_
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'z	'z	PROPN	SP	_	21	appos	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
26	)	)	PUNCT	FB	_	23	punct	_	SpaceAfter=No
27	)	)	PUNCT	FB	_	18	punct	_	SpaceAfter=No
28	)	)	PUNCT	FB	_	12	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 443
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 444
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 445
# text = (''y'' ∨ ¬''y'') ∧ (¬''y'' ∨ (''x'' ∨ (''y'' ∨ ''z'')))
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	13	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	9	nmod	_	_
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'y	'y	NOUN	S	Number=Sing	13	nmod	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	_
13	∧	∧	SYM	X	_	3	obj	_	_
14	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
15	¬	¬	SYM	X	_	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'y	'y	VERB	V	VerbForm=Inf	13	conj	_	SpaceAfter=No
18	'	'	PART	PART	_	20	mark	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	_
20	∨	∨	SYM	X	_	17	obj	_	_
21	(	(	PUNCT	FB	_	23	punct	_	SpaceAfter=No
22	'	'	PART	PART	_	23	mark	_	SpaceAfter=No
23	'x	'x	VERB	V	VerbForm=Inf	20	acl	_	SpaceAfter=No
24	'	'	PART	PART	_	26	mark	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	_
26	∨	∨	SYM	X	_	23	obj	_	_
27	(	(	PUNCT	FB	_	29	punct	_	SpaceAfter=No
28	'	'	PART	PART	_	29	mark	_	SpaceAfter=No
29	'y	'y	VERB	V	VerbForm=Inf	26	advcl	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	_
32	∨	∨	SYM	X	_	29	obj	_	_
33	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
34	'z	'z	PROPN	SP	_	32	appos	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
37	)	)	PUNCT	FB	_	34	punct	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	32	punct	_	SpaceAfter=No
39	)	)	PUNCT	FB	_	29	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 446
# text = by '''cpl1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 447
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 448
# text = (¬''y'' ∨ ''y'') ∧ (¬''y'' ∨ (''x'' ∨ (''y'' ∨ ''z'')))
1	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	4	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	'y	'y	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'	'	PART	PART	_	4	case	_	_
7	∨	∨	SYM	X	_	13	nmod	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'y	'y	ADV	B	_	13	advmod	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	_
13	∧	∧	SYM	X	_	4	obj	_	_
14	(	(	PUNCT	FB	_	20	punct	_	SpaceAfter=No
15	¬	¬	SYM	X	_	20	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'y	'y	ADV	B	_	20	advmod	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	_
20	∨	∨	SYM	X	_	13	nmod	_	_
21	(	(	PUNCT	FB	_	23	punct	_	SpaceAfter=No
22	'	'	PART	PART	_	23	mark	_	SpaceAfter=No
23	'x	'x	VERB	V	VerbForm=Inf	20	acl	_	SpaceAfter=No
24	'	'	PART	PART	_	26	mark	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	_
26	∨	∨	SYM	X	_	23	obj	_	_
27	(	(	PUNCT	FB	_	29	punct	_	SpaceAfter=No
28	'	'	PART	PART	_	29	mark	_	SpaceAfter=No
29	'y	'y	VERB	V	VerbForm=Inf	26	acl	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	_
32	∨	∨	SYM	X	_	29	appos	_	_
33	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
34	'z	'z	PROPN	SP	_	32	appos	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
37	)	)	PUNCT	FB	_	34	punct	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	32	punct	_	SpaceAfter=No
39	)	)	PUNCT	FB	_	29	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 449
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 450
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 451
# text = ¬''y'' ∨ (''y'' ∧ (''x'' ∨ (''y'' ∨ ''z'')))
1	¬	¬	SYM	X	_	3	obl	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'y	'y	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	12	case	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	12	nmod	_	_
7	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	12	case	_	SpaceAfter=No
9	'y	'y	ADV	B	_	12	advmod	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	_
12	∧	∧	SYM	X	_	3	obj	_	_
13	(	(	PUNCT	FB	_	15	punct	_	SpaceAfter=No
14	'	'	PART	PART	_	15	mark	_	SpaceAfter=No
15	'x	'x	VERB	V	VerbForm=Inf	12	acl	_	SpaceAfter=No
16	'	'	PART	PART	_	18	mark	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	_
18	∨	∨	SYM	X	_	15	obj	_	_
19	(	(	PUNCT	FB	_	21	punct	_	SpaceAfter=No
20	'	'	PART	PART	_	21	mark	_	SpaceAfter=No
21	'y	'y	VERB	V	VerbForm=Inf	18	advcl	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	_
24	∨	∨	SYM	X	_	21	obj	_	_
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'z	'z	PROPN	SP	_	24	appos	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	26	punct	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	26	punct	_	SpaceAfter=No
29	)	)	PUNCT	FB	_	26	punct	_	SpaceAfter=No
30	)	)	PUNCT	FB	_	24	punct	_	SpaceAfter=No
31	)	)	PUNCT	FB	_	21	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 452
# text = by '''dst1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst1	dst1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 453
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 454
# text = ¬''y'' ∨ ''y''
1	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'y	'y	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	8	nmod	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'	'	PART	PART	_	3	case	_	_
6	∨	∨	SYM	X	_	8	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'y	'y	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 455
# text = by '''e1'''
1	by	by	ADP	E	_	4	case	_	_
2	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'e1	'e1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 456
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 457
# text = ''y'' ∨ ¬''y''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	8	mark	_	_
6	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'y	'y	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 458
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 459
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 460
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 461
# text = by '''cpl1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 462
# text = '''f2''' dual (''x''∧(''y''∧''z'')) ∧ ¬''y'' = 0
1	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'f2	'f2	NUM	N	NumType=Card	7	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpacesAfter=\s \s
7	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s \s
8	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'x	'x	NOUN	S	Gender=Masc|Number=Sing	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'∧	'∧	NOUN	S	Number=Sing	7	obj	_	SpaceAfter=No
13	(	(	PUNCT	FB	_	19	punct	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'y	'y	NOUN	S	Number=Sing	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'∧	'∧	NOUN	S	Number=Sing	19	nmod	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'z	'z	PROPN	SP	_	12	nmod	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
22	)	)	PUNCT	FB	_	19	punct	_	SpaceAfter=No
23	)	)	PUNCT	FB	_	12	punct	_	_
24	∧	∧	SYM	X	_	27	nsubj	_	_
25	¬	¬	SYM	X	_	27	nmod	_	SpaceAfter=No
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'y	'y	VERB	V	VerbForm=Inf	7	conj	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	27	punct	_	_
30	=	=	SYM	X	_	27	obj	_	_
31	0	0	NUM	N	NumType=Card	30	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 463
# text = '''g1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'g1	'g1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 464
# text = (''x''∨(''y''∨''z'')) ∨ ¬''z'' = 1
1	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'x	'x	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'∨	'∨	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'y	'y	VERB	V	VerbForm=Inf	5	acl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
10	'∨	'∨	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'z	'z	PROPN	SP	_	8	obj	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	8	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	5	punct	_	_
17	∨	∨	SYM	X	_	23	nmod	_	_
18	¬	¬	SYM	X	_	23	nmod	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
20	'z	'z	PROPN	SP	_	23	nmod	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	_
23	=	=	SYM	X	_	5	nmod	_	_
24	1	1	NUM	N	NumType=Card	23	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 465
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 466
# text = (''x'' ∨ (''y'' ∨ ''z'')) ∨ ¬''z''
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	9	nmod	_	_
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	_
12	∨	∨	SYM	X	_	9	conj	_	_
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'z	'z	PROPN	SP	_	12	appos	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	12	punct	_	_
19	∨	∨	SYM	X	_	9	obj	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'z	'z	PROPN	SP	_	19	conj	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	9	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 467
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 468
# text = (''x'' ∨ (''z'' ∨ ''y'')) ∨ ¬''z''
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	14	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	14	nsubj	_	_
7	(	(	PUNCT	FB	_	14	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	'z	'z	PROPN	SP	_	12	nmod	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	9	case	_	_
12	∨	∨	SYM	X	_	14	nmod	_	_
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'y	'y	VERB	V	VerbForm=Inf	3	ccomp	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	14	punct	_	_
19	∨	∨	SYM	X	_	14	nmod	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'z	'z	PROPN	SP	_	19	conj	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	14	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 469
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 470
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 471
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 472
# text = by '''f1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	f1	f1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 473
# text = '''g2''' dual (''x''∧(''y''∧''z'')) ∧ ¬''z'' = 0
1	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'g2	'g2	NUM	N	NumType=Card	7	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpacesAfter=\s \s
7	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s\s \s\s
8	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'x	'x	NOUN	S	Gender=Masc|Number=Sing	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'∧	'∧	NOUN	S	Number=Sing	7	obj	_	SpaceAfter=No
13	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'y	'y	NOUN	S	Number=Sing	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'∧	'∧	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'z	'z	PROPN	SP	_	17	nmod	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
22	)	)	PUNCT	FB	_	19	punct	_	SpaceAfter=No
23	)	)	PUNCT	FB	_	17	punct	_	_
24	∧	∧	SYM	X	_	30	nmod	_	_
25	¬	¬	SYM	X	_	30	nmod	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
27	'z	'z	PROPN	SP	_	30	nmod	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	27	punct	_	_
30	=	=	SYM	X	_	12	nmod	_	_
31	0	0	NUM	N	NumType=Card	30	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 474
# text = '''h1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'h1	'h1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 475
# text = ¬((''x''∨''y'')∨''z'') ∧ ''x'' = 0
1	¬	¬	SYM	X	_	21	nsubj	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	21	punct	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	21	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'x	'x	NOUN	S	Number=Sing	7	nmod	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'∨	'∨	NOUN	S	Number=Sing	21	nsubj	_	SpaceAfter=No
8	'	'	PART	PART	_	21	mark	_	SpaceAfter=No
9	'y	'y	ADV	B	_	21	advmod	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	SpaceAfter=No
13	∨	∨	SYM	X	_	21	nsubj	_	SpaceAfter=No
14	'	'	PUNCT	FF	_	13	punct	_	SpaceAfter=No
15	'z	'z	PROPN	SP	_	13	appos	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	15	punct	_	_
19	∧	∧	SYM	X	_	21	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	_
24	=	=	SYM	X	_	21	obj	_	_
25	0	0	NUM	N	NumType=Card	24	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 476
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 477
# text = ¬((''x'' ∨ ''y'') ∨ ''z'') ∧ ''x''
1	¬	¬	SYM	X	_	5	mark	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PART	PART	_	5	mark	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
6	'	'	PART	PART	_	5	compound:prt	_	SpaceAfter=No
7	'	'	PART	PART	_	22	mark	_	_
8	∨	∨	SYM	X	_	22	nmod	_	_
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'y	'y	ADV	B	_	22	advmod	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	_
14	∨	∨	SYM	X	_	22	nsubj	_	_
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'z	'z	PROPN	SP	_	14	appos	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	_
20	∧	∧	SYM	X	_	22	nmod	_	_
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 478
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 479
# text = (¬(''x'' ∨ ''y'') ∧ ¬''z'') ∧ ''x''
1	(	(	PUNCT	FB	_	2	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	0	root	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PART	PART	_	5	mark	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	2	acl	_	SpaceAfter=No
6	'	'	PART	PART	_	5	compound:prt	_	SpaceAfter=No
7	'	'	PART	PART	_	23	mark	_	_
8	∨	∨	SYM	X	_	23	nmod	_	_
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'y	'y	ADV	B	_	23	advmod	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	_
14	∧	∧	SYM	X	_	23	nsubj	_	_
15	¬	¬	SYM	X	_	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'z	'z	PROPN	SP	_	14	nmod	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	_
21	∧	∧	SYM	X	_	23	nmod	_	_
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'x	'x	VERB	V	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 480
# text = by '''dmg1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dmg1	dmg1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 481
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 482
# text = ((¬''x'' ∧ ¬''y'') ∧ ¬''z'') ∧ ''x''
1	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
3	¬	¬	SYM	X	_	5	nmod	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'	'	PART	PART	_	5	compound:prt	_	_
8	∧	∧	SYM	X	_	5	obj	_	_
9	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'y	'y	ADV	B	_	9	advmod	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
14	)	)	PUNCT	FB	_	11	punct	_	_
15	∧	∧	SYM	X	_	24	nsubj	_	_
16	¬	¬	SYM	X	_	18	nmod	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'z	'z	PROPN	SP	_	15	nmod	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
21	)	)	PUNCT	FB	_	18	punct	_	_
22	∧	∧	SYM	X	_	24	nmod	_	_
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'x	'x	VERB	V	VerbForm=Inf	9	conj	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 483
# text = by '''dmg1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dmg1	dmg1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 484
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 485
# text = ''x'' ∧ ((¬''x'' ∧ ¬''y'') ∧ ¬''z'')
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	5	case	_	_
5	∧	∧	SYM	X	_	10	mark	_	_
6	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
7	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
8	¬	¬	SYM	X	_	10	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
11	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	_
13	∧	∧	SYM	X	_	16	nsubj	_	_
14	¬	¬	SYM	X	_	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'y	'y	VERB	V	VerbForm=Inf	10	advcl	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	_
20	∧	∧	SYM	X	_	16	obj	_	_
21	¬	¬	SYM	X	_	23	nmod	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'z	'z	PROPN	SP	_	20	nmod	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
26	)	)	PUNCT	FB	_	16	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 486
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 487
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 488
# text = (''x'' ∧ ((¬''x'' ∧ ¬''y'') ∧ ¬''z'')) ∨ 0
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	6	case	_	_
6	∧	∧	SYM	X	_	11	nmod	_	_
7	(	(	PUNCT	FB	_	11	punct	_	SpaceAfter=No
8	(	(	PUNCT	FB	_	11	punct	_	SpaceAfter=No
9	¬	¬	SYM	X	_	11	nmod	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
12	'	'	PART	PART	_	17	mark	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	_
14	∧	∧	SYM	X	_	17	nmod	_	_
15	¬	¬	SYM	X	_	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'y	'y	VERB	V	VerbForm=Inf	11	xcomp	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	_
21	∧	∧	SYM	X	_	17	obj	_	_
22	¬	¬	SYM	X	_	21	nmod	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'z	'z	PROPN	SP	_	22	appos	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
27	)	)	PUNCT	FB	_	24	punct	_	SpaceAfter=No
28	)	)	PUNCT	FB	_	22	punct	_	_
29	∨	∨	SYM	X	_	21	nmod	_	_
30	0	0	NUM	N	NumType=Card	29	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 489
# text = by '''idn1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn1	idn1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 490
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 491
# text = 0 ∨ (''x'' ∧ ((¬''x'' ∧ ¬''y'') ∧ ¬''z''))
1	0	0	NUM	N	NumType=Card	2	nummod	_	_
2	∨	∨	SYM	X	_	0	root	_	_
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PART	PART	_	5	mark	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	2	acl	_	SpaceAfter=No
6	'	'	PART	PART	_	13	mark	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	_
8	∧	∧	SYM	X	_	13	nsubj	_	_
9	(	(	PUNCT	FB	_	13	punct	_	SpaceAfter=No
10	(	(	PUNCT	FB	_	13	punct	_	SpaceAfter=No
11	¬	¬	SYM	X	_	13	nmod	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'x	'x	VERB	V	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'	'	PART	PART	_	13	compound:prt	_	_
16	∧	∧	SYM	X	_	19	obj	_	_
17	¬	¬	SYM	X	_	19	nmod	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'y	'y	VERB	V	VerbForm=Inf	13	xcomp	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
22	)	)	PUNCT	FB	_	19	punct	_	_
23	∧	∧	SYM	X	_	24	nmod	_	_
24	¬	¬	SYM	X	_	19	conj	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'z	'z	PROPN	SP	_	24	appos	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	26	punct	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	26	punct	_	SpaceAfter=No
29	)	)	PUNCT	FB	_	26	punct	_	SpaceAfter=No
30	)	)	PUNCT	FB	_	19	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 492
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 493
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 494
# text = (''x'' ∧ ¬''x'') ∨ (''x'' ∧ ((¬''x'' ∧ ¬''y'') ∧ ¬''z''))
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	3	compound:prt	_	_
6	∧	∧	SYM	X	_	9	mark	_	_
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	_
13	∨	∨	SYM	X	_	16	mark	_	_
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	9	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	_
19	∧	∧	SYM	X	_	24	nsubj	_	_
20	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
21	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
22	¬	¬	SYM	X	_	24	nmod	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'x	'x	VERB	V	VerbForm=Inf	16	xcomp	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	SpaceAfter=No
26	'	'	PART	PART	_	24	compound:prt	_	_
27	∧	∧	SYM	X	_	30	mark	_	_
28	¬	¬	SYM	X	_	30	nmod	_	SpaceAfter=No
29	'	'	PART	PART	_	28	case	_	SpaceAfter=No
30	'y	'y	VERB	V	VerbForm=Inf	24	advcl	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
33	)	)	PUNCT	FB	_	30	punct	_	_
34	∧	∧	SYM	X	_	35	nmod	_	_
35	¬	¬	SYM	X	_	30	appos	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
37	'z	'z	PROPN	SP	_	35	appos	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
40	)	)	PUNCT	FB	_	37	punct	_	SpaceAfter=No
41	)	)	PUNCT	FB	_	35	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 495
# text = by '''cpl1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 496
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 497
# text = ''x'' ∧ (¬''x'' ∨ ((¬''x'' ∧ ¬''y'') ∧ ¬''z''))
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	5	case	_	_
5	∧	∧	SYM	X	_	9	obl	_	_
6	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
10	'	'	PART	PART	_	17	mark	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	_
12	∨	∨	SYM	X	_	17	nsubj	_	_
13	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
14	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
15	¬	¬	SYM	X	_	17	nmod	_	SpaceAfter=No
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'x	'x	VERB	V	VerbForm=Inf	9	advcl	_	SpaceAfter=No
18	'	'	PART	PART	_	23	mark	_	SpaceAfter=No
19	'	'	PART	PART	_	18	case	_	_
20	∧	∧	SYM	X	_	23	nsubj	_	_
21	¬	¬	SYM	X	_	23	nmod	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'y	'y	VERB	V	VerbForm=Inf	17	ccomp	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
26	)	)	PUNCT	FB	_	23	punct	_	_
27	∧	∧	SYM	X	_	28	nmod	_	_
28	¬	¬	SYM	X	_	23	appos	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'z	'z	PROPN	SP	_	28	appos	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
33	)	)	PUNCT	FB	_	30	punct	_	SpaceAfter=No
34	)	)	PUNCT	FB	_	28	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 498
# text = by '''dst2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst2	dst2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 499
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 500
# text = ''x'' ∧ (¬''x'' ∨ (¬''z'' ∧ (¬''x'' ∧ ¬''y'')))
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	5	case	_	_
5	∧	∧	SYM	X	_	2	obl	_	_
6	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
7	¬	¬	SYM	X	_	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	5	conj	_	SpaceAfter=No
10	'	'	PART	PART	_	12	mark	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	_
12	∨	∨	SYM	X	_	9	obj	_	_
13	(	(	PUNCT	FB	_	19	punct	_	SpaceAfter=No
14	¬	¬	SYM	X	_	19	nmod	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'z	'z	PROPN	SP	_	19	nmod	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	_
19	∧	∧	SYM	X	_	12	appos	_	_
20	(	(	PUNCT	FB	_	23	punct	_	SpaceAfter=No
21	¬	¬	SYM	X	_	23	nmod	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'x	'x	VERB	V	VerbForm=Inf	19	conj	_	SpaceAfter=No
24	'	'	PART	PART	_	29	mark	_	SpaceAfter=No
25	'	'	PART	PART	_	24	case	_	_
26	∧	∧	SYM	X	_	29	punct	_	_
27	¬	¬	SYM	X	_	29	nmod	_	SpaceAfter=No
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'y	'y	VERB	V	VerbForm=Inf	23	xcomp	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
32	)	)	PUNCT	FB	_	29	punct	_	SpaceAfter=No
33	)	)	PUNCT	FB	_	29	punct	_	SpaceAfter=No
34	)	)	PUNCT	FB	_	19	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 501
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 502
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 503
# text = ''x'' ∧ ¬''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∧	∧	SYM	X	_	8	mark	_	_
6	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 504
# text = by '''e2'''
1	by	by	ADP	E	_	4	case	_	_
2	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'e2	'e2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 505
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 506
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 507
# text = by '''cpl2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cpl2	cpl2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 508
# text = '''h2''' dual ¬((''x''∧''y'')∧''z'') ∨ ''x'' = 1
1	'	'	PART	PART	_	28	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'h2	'h2	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PART	PART	_	3	case	_	SpaceAfter=No
6	'	'	PART	PART	_	8	case	_	SpacesAfter=\s \s
7	dual	du	ADJ	A	Degree=Pos	8	amod	_	SpacesAfter=\s\s \s\s
8	¬	¬	SYM	X	_	28	nsubj	_	SpaceAfter=No
9	(	(	PUNCT	FB	_	28	punct	_	SpaceAfter=No
10	(	(	PUNCT	FB	_	28	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
12	'x	'x	NOUN	S	Number=Sing	14	nmod	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'∧	'∧	NOUN	S	Number=Sing	28	nsubj	_	SpaceAfter=No
15	'	'	PART	PART	_	28	mark	_	SpaceAfter=No
16	'y	'y	ADV	B	_	28	advmod	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	SpaceAfter=No
20	∧	∧	SYM	X	_	28	nsubj	_	SpaceAfter=No
21	'	'	PUNCT	FF	_	20	punct	_	SpaceAfter=No
22	'z	'z	PROPN	SP	_	20	appos	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	_
26	∨	∨	SYM	X	_	28	nmod	_	_
27	'	'	PART	PART	_	26	case	_	SpaceAfter=No
28	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	28	punct	_	_
31	=	=	SYM	X	_	28	obj	_	_
32	1	1	NUM	N	NumType=Card	31	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 509
# text = '''i1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'i1	'i1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 510
# text = ¬((''x''∨''y'')∨''z'') ∧ ''y'' = 0
1	¬	¬	SYM	X	_	9	mark	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'x	'x	NOUN	S	Number=Sing	7	nmod	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'∨	'∨	NOUN	S	Number=Sing	9	nsubj	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	SpaceAfter=No
13	∨	∨	SYM	X	_	21	nmod	_	SpaceAfter=No
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'z	'z	PROPN	SP	_	21	nmod	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	15	punct	_	_
19	∧	∧	SYM	X	_	21	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'y	'y	VERB	V	VerbForm=Inf	9	conj	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	_
24	=	=	SYM	X	_	21	obj	_	_
25	0	0	NUM	N	NumType=Card	24	flat	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 511
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 512
# text = ¬((''x'' ∨ ''y'') ∨ ''z'') ∧ ''y''
1	¬	¬	SYM	X	_	5	mark	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PART	PART	_	5	mark	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
6	'	'	PART	PART	_	5	compound:prt	_	SpaceAfter=No
7	'	'	PART	PART	_	22	mark	_	_
8	∨	∨	SYM	X	_	10	nmod	_	_
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'y	'y	NOUN	S	Number=Sing	22	nsubj	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	_
14	∨	∨	SYM	X	_	16	nmod	_	_
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'z	'z	PROPN	SP	_	10	nmod	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	_
20	∧	∧	SYM	X	_	22	nmod	_	_
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'y	'y	VERB	V	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 513
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 514
# text = ¬((''y'' ∨ ''x'') ∨ ''z'') ∧ ''y''
1	¬	¬	SYM	X	_	5	nsubj	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'y	'y	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
6	'	'	PART	PART	_	5	compound:prt	_	SpaceAfter=No
7	'	'	PART	PART	_	22	mark	_	_
8	∨	∨	SYM	X	_	10	nmod	_	_
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'x	'x	NOUN	S	Gender=Masc|Number=Sing	22	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'	'	PART	PART	_	10	case	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	_
14	∨	∨	SYM	X	_	16	nmod	_	_
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'z	'z	PROPN	SP	_	10	nmod	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	16	case	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	_
20	∧	∧	SYM	X	_	22	nmod	_	_
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'y	'y	NOUN	S	Number=Sing	5	obj	_	SpaceAfter=No
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'	'	PART	PART	_	22	case	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 515
# text = by '''cmm1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 516
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 517
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 518
# text = by '''h1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	h1	h1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 519
# text = '''i2''' dual ¬((''x''∧''y'')∧''z'') ∨ ''y'' = 1
1	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'i2	'i2	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PART	PART	_	3	case	_	SpaceAfter=No
6	'	'	PART	PART	_	8	case	_	SpacesAfter=\s \s
7	dual	du	ADJ	A	Degree=Pos	8	amod	_	SpacesAfter=\s\s \s\s
8	¬	¬	SYM	X	_	16	nsubj	_	SpaceAfter=No
9	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
10	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'x	'x	NOUN	S	Number=Sing	14	nmod	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'∧	'∧	NOUN	S	Number=Sing	16	nsubj	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	SpaceAfter=No
20	∧	∧	SYM	X	_	28	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'z	'z	PROPN	SP	_	28	nmod	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	_
26	∨	∨	SYM	X	_	28	nmod	_	_
27	'	'	PART	PART	_	26	case	_	SpaceAfter=No
28	'y	'y	VERB	V	VerbForm=Inf	16	conj	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	28	punct	_	_
31	=	=	SYM	X	_	28	obj	_	_
32	1	1	NUM	N	NumType=Card	31	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 520
# text = '''j1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'j1	'j1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 521
# text = ¬((''x''∨''y'')∨''z'') ∧ ''z'' = 0
1	¬	¬	SYM	X	_	9	mark	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'x	'x	NOUN	S	Number=Sing	7	nmod	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'∨	'∨	NOUN	S	Number=Sing	9	nmod	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	SpaceAfter=No
13	∨	∨	SYM	X	_	24	nmod	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'z	'z	PROPN	SP	_	13	appos	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	15	punct	_	_
19	∧	∧	SYM	X	_	24	nmod	_	_
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'z	'z	PROPN	SP	_	24	nmod	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	_
24	=	=	SYM	X	_	9	nsubj	_	_
25	0	0	NUM	N	NumType=Card	24	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 522
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 523
# text = ¬((''x'' ∨ ''y'') ∨ ''z'') ∧ ''z''
1	¬	¬	SYM	X	_	5	mark	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PART	PART	_	5	mark	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
6	'	'	PART	PART	_	5	compound:prt	_	SpaceAfter=No
7	'	'	PART	PART	_	10	mark	_	_
8	∨	∨	SYM	X	_	10	nmod	_	_
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'y	'y	VERB	V	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	_
14	∨	∨	SYM	X	_	10	obj	_	_
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'z	'z	PROPN	SP	_	14	conj	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	_
20	∧	∧	SYM	X	_	22	nmod	_	_
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'z	'z	PROPN	SP	_	14	conj	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	10	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 524
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 525
# text = (¬(''x'' ∨ ''y'') ∧ ¬''z'') ∧ ''z''
1	(	(	PUNCT	FB	_	2	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	0	root	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PART	PART	_	5	mark	_	SpaceAfter=No
5	'x	'x	VERB	V	VerbForm=Inf	2	acl	_	SpaceAfter=No
6	'	'	PART	PART	_	5	compound:prt	_	SpaceAfter=No
7	'	'	PART	PART	_	10	mark	_	_
8	∨	∨	SYM	X	_	10	nmod	_	_
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'y	'y	VERB	V	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	_
14	∧	∧	SYM	X	_	15	nmod	_	_
15	¬	¬	SYM	X	_	10	obj	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'z	'z	PROPN	SP	_	15	conj	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	_
21	∧	∧	SYM	X	_	23	nmod	_	_
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'z	'z	PROPN	SP	_	15	conj	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 526
# text = by '''dmg1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dmg1	dmg1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 527
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 528
# text = ''z'' ∧ (¬(''x'' ∨ ''y'') ∧ ¬''z'')
1	'	'	PUNCT	FF	_	5	punct	_	SpaceAfter=No
2	'z	'z	PROPN	SP	_	5	nmod	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	_
5	∧	∧	SYM	X	_	0	root	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	¬	¬	SYM	X	_	5	appos	_	SpaceAfter=No
8	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	7	acl	_	SpaceAfter=No
11	'	'	PART	PART	_	10	compound:prt	_	SpaceAfter=No
12	'	'	PART	PART	_	15	mark	_	_
13	∨	∨	SYM	X	_	15	nmod	_	_
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'y	'y	VERB	V	VerbForm=Inf	10	xcomp	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	15	punct	_	_
19	∧	∧	SYM	X	_	15	obj	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'z	'z	PROPN	SP	_	19	nmod	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	7	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 529
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 530
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 531
# text = ''z'' ∧ ( ¬''z'' ∧ ¬(''x'' ∨ ''y''))
1	'	'	PUNCT	FF	_	5	punct	_	SpaceAfter=No
2	'z	'z	PROPN	SP	_	5	nmod	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	_
5	∧	∧	SYM	X	_	0	root	_	_
6	(	(	PUNCT	FB	_	13	punct	_	_
7	¬	¬	SYM	X	_	13	nmod	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	'z	'z	PROPN	SP	_	13	nmod	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	_
12	∧	∧	SYM	X	_	13	nmod	_	_
13	¬	¬	SYM	X	_	5	appos	_	SpaceAfter=No
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'x	'x	VERB	V	VerbForm=Inf	13	acl	_	SpaceAfter=No
17	'	'	PART	PART	_	16	compound:prt	_	SpaceAfter=No
18	'	'	PART	PART	_	21	mark	_	_
19	∨	∨	SYM	X	_	21	nmod	_	_
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'y	'y	VERB	V	VerbForm=Inf	16	xcomp	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	13	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 532
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 533
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 534
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 535
# text = by '''a2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	a2	a2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 536
# text = '''j2''' dual ¬((''x''∧''y'')∧''z'') ∨ ''z'' = 1
1	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'j2	'j2	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PART	PART	_	3	case	_	SpaceAfter=No
6	'	'	PART	PART	_	8	case	_	SpacesAfter=\s \s
7	dual	du	ADJ	A	Degree=Pos	8	amod	_	SpacesAfter=\s\s \s\s
8	¬	¬	SYM	X	_	16	nsubj	_	SpaceAfter=No
9	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
10	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'x	'x	NOUN	S	Number=Sing	14	nmod	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'∧	'∧	NOUN	S	Number=Sing	16	nmod	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'y	'y	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	SpaceAfter=No
20	∧	∧	SYM	X	_	31	nmod	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'z	'z	PROPN	SP	_	20	appos	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	_
26	∨	∨	SYM	X	_	31	nmod	_	_
27	'	'	PUNCT	FB	_	26	punct	_	SpaceAfter=No
28	'z	'z	PROPN	SP	_	31	nmod	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	28	punct	_	_
31	=	=	SYM	X	_	16	obj	_	_
32	1	1	NUM	N	NumType=Card	31	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 537
# text = '''k1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'k1	'k1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 538
# text = (''x'' ∨ (''y'' ∨ ''z'')) ∨ ¬((''x'' ∨ ''y'') ∨ ''z'') = 1
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	24	nsubj	_	_
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	24	advcl	_	SpaceAfter=No
10	'	'	PART	PART	_	9	compound:prt	_	SpaceAfter=No
11	'	'	PART	PART	_	14	case	_	_
12	∨	∨	SYM	X	_	14	nmod	_	_
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'z	'z	PROPN	SP	_	9	obl	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	9	punct	_	_
19	∨	∨	SYM	X	_	20	nmod	_	_
20	¬	¬	SYM	X	_	24	mark	_	SpaceAfter=No
21	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
22	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
23	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
24	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
25	'	'	PART	PART	_	24	compound:prt	_	SpaceAfter=No
26	'	'	PART	PART	_	39	case	_	_
27	∨	∨	SYM	X	_	39	nmod	_	_
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'y	'y	VERB	V	VerbForm=Inf	39	conj	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
32	)	)	PUNCT	FB	_	29	punct	_	_
33	∨	∨	SYM	X	_	39	nmod	_	_
34	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
35	'z	'z	PROPN	SP	_	33	appos	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	35	punct	_	_
39	=	=	SYM	X	_	24	obl	_	_
40	1	1	NUM	N	NumType=Card	39	nummod	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 539
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 540
# text = (''x''∨(''y''∨''z'')) ∨ ¬((''x'' ∨ ''y'') ∨ ''z'')
1	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'x	'x	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'∨	'∨	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'y	'y	VERB	V	VerbForm=Inf	5	acl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
10	'∨	'∨	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'z	'z	PROPN	SP	_	8	obj	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	8	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	5	punct	_	_
17	∨	∨	SYM	X	_	18	nmod	_	_
18	¬	¬	SYM	X	_	22	mark	_	SpaceAfter=No
19	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
20	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
21	'	'	PART	PART	_	22	mark	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	5	acl	_	SpaceAfter=No
23	'	'	PART	PART	_	22	compound:prt	_	SpaceAfter=No
24	'	'	PART	PART	_	27	mark	_	_
25	∨	∨	SYM	X	_	27	nmod	_	_
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'y	'y	VERB	V	VerbForm=Inf	22	advcl	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
30	)	)	PUNCT	FB	_	27	punct	_	_
31	∨	∨	SYM	X	_	33	nmod	_	_
32	'	'	PUNCT	FB	_	31	punct	_	SpaceAfter=No
33	'z	'z	PROPN	SP	_	27	obj	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
36	)	)	PUNCT	FB	_	27	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 541
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 542
# text = (''x''∨(''y''∨''z'')) ∨ (¬(''x'' ∨ ''y'') ∧ ¬''z'')
1	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'x	'x	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'∨	'∨	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'y	'y	VERB	V	VerbForm=Inf	5	acl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
10	'∨	'∨	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'z	'z	PROPN	SP	_	8	obj	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	8	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	5	punct	_	_
17	∨	∨	SYM	X	_	5	conj	_	_
18	(	(	PUNCT	FB	_	19	punct	_	SpaceAfter=No
19	¬	¬	SYM	X	_	17	nmod	_	SpaceAfter=No
20	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
21	'	'	PART	PART	_	22	mark	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	19	acl	_	SpaceAfter=No
23	'	'	PART	PART	_	22	compound:prt	_	SpaceAfter=No
24	'	'	PART	PART	_	27	mark	_	_
25	∨	∨	SYM	X	_	27	nmod	_	_
26	'	'	PART	PART	_	25	case	_	SpaceAfter=No
27	'y	'y	VERB	V	VerbForm=Inf	22	xcomp	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
30	)	)	PUNCT	FB	_	27	punct	_	_
31	∧	∧	SYM	X	_	34	punct	_	_
32	¬	¬	SYM	X	_	34	nmod	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
34	'z	'z	PROPN	SP	_	27	obj	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
37	)	)	PUNCT	FB	_	19	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 543
# text = by '''dmg1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dmg1	dmg1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 544
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 545
# text = (''x''∨(''y''∨''z'')) ∨ ((¬''x'' ∧ ¬''y'') ∧ ¬''z'')
1	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
3	'x	'x	NOUN	S	Number=Sing	5	nmod	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	SpaceAfter=No
5	'∨	'∨	NOUN	S	Number=Sing	22	obl	_	SpaceAfter=No
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'y	'y	VERB	V	VerbForm=Inf	5	acl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
10	'∨	'∨	NOUN	S	Number=Sing	12	nmod	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'z	'z	PROPN	SP	_	8	obj	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	8	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	5	punct	_	_
17	∨	∨	SYM	X	_	22	mark	_	_
18	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
19	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
23	'	'	PART	PART	_	28	mark	_	SpaceAfter=No
24	'	'	PART	PART	_	23	case	_	_
25	∧	∧	SYM	X	_	28	nsubj	_	_
26	¬	¬	SYM	X	_	28	nmod	_	SpaceAfter=No
27	'	'	PART	PART	_	26	case	_	SpaceAfter=No
28	'y	'y	VERB	V	VerbForm=Inf	22	advcl	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
31	)	)	PUNCT	FB	_	28	punct	_	_
32	∧	∧	SYM	X	_	35	punct	_	_
33	¬	¬	SYM	X	_	35	nmod	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
35	'z	'z	PROPN	SP	_	28	obj	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	28	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 546
# text = by '''dmg1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dmg1	dmg1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 547
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 548
# text = ((''x''∨(''y''∨''z'')) ∨ (¬''x'' ∧ ¬''y'')) ∧ ((''x''∨(''y''∨''z'')) ∨ ¬''z'')
1	(	(	PUNCT	FB	_	6	punct	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	6	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'x	'x	NOUN	S	Number=Sing	6	nmod	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	SpaceAfter=No
6	'∨	'∨	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	6	acl	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
11	'∨	'∨	NOUN	S	Number=Sing	13	nmod	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	SpaceAfter=No
13	'z	'z	PROPN	SP	_	9	obj	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	9	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	6	punct	_	_
18	∨	∨	SYM	X	_	6	conj	_	_
19	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	18	conj	_	SpaceAfter=No
23	'	'	PART	PART	_	39	mark	_	SpaceAfter=No
24	'	'	PART	PART	_	23	case	_	_
25	∧	∧	SYM	X	_	39	nmod	_	_
26	¬	¬	SYM	X	_	25	nmod	_	SpaceAfter=No
27	'	'	PART	PART	_	26	case	_	SpaceAfter=No
28	'y	'y	ADV	B	_	26	advmod	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
31	)	)	PUNCT	FB	_	28	punct	_	SpaceAfter=No
32	)	)	PUNCT	FB	_	26	punct	_	_
33	∧	∧	SYM	X	_	39	nmod	_	SpacesAfter=\s\s
34	(	(	PUNCT	FB	_	39	punct	_	SpaceAfter=No
35	(	(	PUNCT	FB	_	39	punct	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
37	'x	'x	NOUN	S	Number=Sing	39	nmod	_	SpaceAfter=No
38	'	'	PART	PART	_	37	case	_	SpaceAfter=No
39	'∨	'∨	NOUN	S	Number=Sing	22	obj	_	SpaceAfter=No
40	(	(	PUNCT	FB	_	44	punct	_	SpaceAfter=No
41	'	'	PART	PART	_	40	case	_	SpaceAfter=No
42	'y	'y	NOUN	S	Number=Sing	44	nmod	_	SpaceAfter=No
43	'	'	PART	PART	_	42	case	_	SpaceAfter=No
44	'∨	'∨	NOUN	S	Number=Sing	39	nmod	_	SpaceAfter=No
45	'	'	PUNCT	FB	_	44	punct	_	SpaceAfter=No
46	'z	'z	PROPN	SP	_	44	nmod	_	SpaceAfter=No
47	'	'	PUNCT	FB	_	46	punct	_	SpaceAfter=No
48	'	'	PUNCT	FB	_	46	punct	_	SpaceAfter=No
49	)	)	PUNCT	FB	_	46	punct	_	SpaceAfter=No
50	)	)	PUNCT	FB	_	44	punct	_	_
51	∨	∨	SYM	X	_	39	nmod	_	_
52	¬	¬	SYM	X	_	54	nmod	_	SpaceAfter=No
53	'	'	PUNCT	FB	_	52	punct	_	SpaceAfter=No
54	'z	'z	PROPN	SP	_	51	nmod	_	SpaceAfter=No
55	'	'	PUNCT	FB	_	54	punct	_	SpaceAfter=No
56	'	'	PUNCT	FB	_	39	punct	_	SpaceAfter=No
57	)	)	PUNCT	FB	_	39	punct	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 549
# text = by '''dst1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst1	dst1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 550
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 551
# text = (((''x''∨(''y''∨''z'')) ∨ ¬''x'') ∧ ((''x''∨(''y''∨''z'')) ∨ ¬''y'')) ∧ ((''x''∨(''y''∨''z'')) ∨ ¬''z'')
1	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'x	'x	NOUN	S	Number=Sing	7	nmod	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'∨	'∨	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
8	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
10	'y	'y	VERB	V	VerbForm=Inf	7	acl	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
12	'∨	'∨	NOUN	S	Number=Sing	14	nmod	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'z	'z	PROPN	SP	_	10	obj	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	10	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	7	punct	_	_
19	∨	∨	SYM	X	_	22	nmod	_	_
20	¬	¬	SYM	X	_	22	nmod	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	7	conj	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	_
26	∧	∧	SYM	X	_	32	nmod	_	_
27	(	(	PUNCT	FB	_	32	punct	_	SpaceAfter=No
28	(	(	PUNCT	FB	_	32	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'x	'x	NOUN	S	Number=Sing	32	nmod	_	SpaceAfter=No
31	'	'	PART	PART	_	30	case	_	SpaceAfter=No
32	'∨	'∨	NOUN	S	Number=Sing	22	obj	_	SpaceAfter=No
33	(	(	PUNCT	FB	_	37	punct	_	SpaceAfter=No
34	'	'	PART	PART	_	37	case	_	SpaceAfter=No
35	'y	'y	NOUN	S	Number=Sing	37	nmod	_	SpaceAfter=No
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'∨	'∨	NOUN	S	Number=Sing	32	nmod	_	SpaceAfter=No
38	'	'	PART	PART	_	44	case	_	SpaceAfter=No
39	'z	'z	PROPN	SP	_	44	nmod	_	SpaceAfter=No
40	'	'	PUNCT	FB	_	39	punct	_	SpaceAfter=No
41	'	'	PUNCT	FB	_	39	punct	_	SpaceAfter=No
42	)	)	PUNCT	FB	_	39	punct	_	SpaceAfter=No
43	)	)	PUNCT	FB	_	39	punct	_	_
44	∨	∨	SYM	X	_	37	nmod	_	_
45	¬	¬	SYM	X	_	44	nmod	_	SpaceAfter=No
46	'	'	PART	PART	_	45	case	_	SpaceAfter=No
47	'y	'y	ADV	B	_	45	advmod	_	SpaceAfter=No
48	'	'	PUNCT	FB	_	47	punct	_	SpaceAfter=No
49	'	'	PUNCT	FB	_	47	punct	_	SpaceAfter=No
50	)	)	PUNCT	FB	_	47	punct	_	SpaceAfter=No
51	)	)	PUNCT	FB	_	45	punct	_	_
52	∧	∧	SYM	X	_	44	nmod	_	SpacesAfter=\s\s
53	(	(	PUNCT	FB	_	58	punct	_	SpaceAfter=No
54	(	(	PUNCT	FB	_	58	punct	_	SpaceAfter=No
55	'	'	PUNCT	FB	_	58	punct	_	SpaceAfter=No
56	'x	'x	NOUN	S	Number=Sing	58	nmod	_	SpaceAfter=No
57	'	'	PART	PART	_	56	case	_	SpaceAfter=No
58	'∨	'∨	NOUN	S	Number=Sing	52	appos	_	SpaceAfter=No
59	(	(	PUNCT	FB	_	70	punct	_	SpaceAfter=No
60	'	'	PART	PART	_	70	case	_	SpaceAfter=No
61	'y	'y	NOUN	S	Number=Sing	63	nmod	_	SpaceAfter=No
62	'	'	PART	PART	_	61	case	_	SpaceAfter=No
63	'∨	'∨	NOUN	S	Number=Sing	70	nmod	_	SpaceAfter=No
64	'	'	PUNCT	FB	_	63	punct	_	SpaceAfter=No
65	'z	'z	PROPN	SP	_	70	nmod	_	SpaceAfter=No
66	'	'	PUNCT	FB	_	65	punct	_	SpaceAfter=No
67	'	'	PUNCT	FB	_	65	punct	_	SpaceAfter=No
68	)	)	PUNCT	FB	_	65	punct	_	SpaceAfter=No
69	)	)	PUNCT	FB	_	65	punct	_	_
70	∨	∨	SYM	X	_	58	nmod	_	_
71	¬	¬	SYM	X	_	73	nmod	_	SpaceAfter=No
72	'	'	PUNCT	FB	_	71	punct	_	SpaceAfter=No
73	'z	'z	PROPN	SP	_	70	nmod	_	SpaceAfter=No
74	'	'	PUNCT	FB	_	73	punct	_	SpaceAfter=No
75	'	'	PUNCT	FB	_	70	punct	_	SpaceAfter=No
76	)	)	PUNCT	FB	_	58	punct	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 552
# text = by '''dst1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst1	dst1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 553
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 554
# text = (1 ∧ 1) ∧ 1
1	(	(	PUNCT	FB	_	2	punct	_	SpaceAfter=No
2	1	1	NUM	N	NumType=Card	6	nummod	_	_
3	∧	∧	SYM	X	_	2	conj	_	_
4	1	1	NUM	N	NumType=Card	3	nummod	_	SpaceAfter=No
5	)	)	PUNCT	FB	_	3	punct	_	_
6	∧	∧	SYM	X	_	0	root	_	_
7	1	1	NUM	N	NumType=Card	6	nummod	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 555
# text = by '''d1''','''f1''','''g1'''
1	by	by	ADP	E	_	12	case	_	_
2	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'd1	'd1	NUM	N	NumType=Card	12	nummod	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	4	punct	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
12	f1	f1	NUM	N	NumType=Card	20	nummod	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
16	,	,	PUNCT	FF	_	12	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
20	g1	g1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	20	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 556
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 557
# text = 1
1	1	1	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 558
# text = by '''idn2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 559
# text = '''k2''' dual (''x'' ∧ (''y'' ∧ ''z'')) ∧ ¬((''x'' ∧ ''y'') ∧ ''z'') = 0
1	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'k2	'k2	NUM	N	NumType=Card	7	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpacesAfter=\s \s
7	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s\s \s\s
8	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	7	advcl	_	SpaceAfter=No
11	'	'	PART	PART	_	31	mark	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	_
13	∧	∧	SYM	X	_	31	nsubj	_	_
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'y	'y	VERB	V	VerbForm=Inf	31	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	16	compound:prt	_	SpaceAfter=No
18	'	'	PART	PART	_	21	case	_	_
19	∧	∧	SYM	X	_	21	nmod	_	_
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'z	'z	PROPN	SP	_	16	obl	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	16	punct	_	_
26	∧	∧	SYM	X	_	27	nmod	_	_
27	¬	¬	SYM	X	_	31	mark	_	SpaceAfter=No
28	(	(	PUNCT	FB	_	31	punct	_	SpaceAfter=No
29	(	(	PUNCT	FB	_	31	punct	_	SpaceAfter=No
30	'	'	PART	PART	_	31	mark	_	SpaceAfter=No
31	'x	'x	VERB	V	VerbForm=Inf	10	xcomp	_	SpaceAfter=No
32	'	'	PART	PART	_	31	compound:prt	_	SpaceAfter=No
33	'	'	PART	PART	_	46	case	_	_
34	∧	∧	SYM	X	_	46	nmod	_	_
35	'	'	PART	PART	_	34	case	_	SpaceAfter=No
36	'y	'y	VERB	V	VerbForm=Inf	46	advcl	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
39	)	)	PUNCT	FB	_	36	punct	_	_
40	∧	∧	SYM	X	_	46	nmod	_	_
41	'	'	PUNCT	FB	_	40	punct	_	SpaceAfter=No
42	'z	'z	PROPN	SP	_	40	appos	_	SpaceAfter=No
43	'	'	PUNCT	FB	_	42	punct	_	SpaceAfter=No
44	'	'	PUNCT	FB	_	42	punct	_	SpaceAfter=No
45	)	)	PUNCT	FB	_	42	punct	_	_
46	=	=	SYM	X	_	31	obl	_	_
47	0	0	NUM	N	NumType=Card	46	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 560
# text = '''l1'''
1	'	'	PART	PART	_	0	root	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'l1	'l1	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	1	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 561
# text = (''x'' ∨ (''y'' ∨ ''z'')) ∧ ¬((''x'' ∨ ''y'') ∨ ''z'') = 0
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	24	nmod	_	_
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	24	advcl	_	SpaceAfter=No
10	'	'	PART	PART	_	9	compound:prt	_	SpaceAfter=No
11	'	'	PART	PART	_	14	case	_	_
12	∨	∨	SYM	X	_	14	nmod	_	_
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'z	'z	PROPN	SP	_	9	obl	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	9	punct	_	_
19	∧	∧	SYM	X	_	20	nmod	_	_
20	¬	¬	SYM	X	_	24	mark	_	SpaceAfter=No
21	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
22	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
23	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
24	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
25	'	'	PART	PART	_	24	compound:prt	_	SpaceAfter=No
26	'	'	PART	PART	_	29	mark	_	_
27	∨	∨	SYM	X	_	29	nmod	_	_
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'y	'y	VERB	V	VerbForm=Inf	24	xcomp	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
32	)	)	PUNCT	FB	_	29	punct	_	_
33	∨	∨	SYM	X	_	39	nmod	_	_
34	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
35	'z	'z	PROPN	SP	_	33	appos	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	35	punct	_	_
39	=	=	SYM	X	_	29	obj	_	_
40	0	0	NUM	N	NumType=Card	39	flat	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 562
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 563
# text = (''x'' ∨ (''y'' ∨ ''z'')) ∧ ¬((''x'' ∨ ''y'') ∨ ''z'')
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
5	'	'	PART	PART	_	4	case	_	_
6	∨	∨	SYM	X	_	24	nsubj	_	_
7	(	(	PUNCT	FB	_	9	punct	_	SpaceAfter=No
8	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
9	'y	'y	VERB	V	VerbForm=Inf	24	advcl	_	SpaceAfter=No
10	'	'	PART	PART	_	9	compound:prt	_	SpaceAfter=No
11	'	'	PART	PART	_	14	case	_	_
12	∨	∨	SYM	X	_	14	nmod	_	_
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'z	'z	PROPN	SP	_	9	obl	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
17	)	)	PUNCT	FB	_	14	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	9	punct	_	_
19	∧	∧	SYM	X	_	20	nmod	_	_
20	¬	¬	SYM	X	_	24	mark	_	SpaceAfter=No
21	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
22	(	(	PUNCT	FB	_	24	punct	_	SpaceAfter=No
23	'	'	PART	PART	_	24	mark	_	SpaceAfter=No
24	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
25	'	'	PART	PART	_	24	compound:prt	_	SpaceAfter=No
26	'	'	PART	PART	_	29	mark	_	_
27	∨	∨	SYM	X	_	29	nmod	_	_
28	'	'	PART	PART	_	27	case	_	SpaceAfter=No
29	'y	'y	VERB	V	VerbForm=Inf	24	advcl	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
32	)	)	PUNCT	FB	_	29	punct	_	_
33	∨	∨	SYM	X	_	35	nmod	_	_
34	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
35	'z	'z	PROPN	SP	_	29	obj	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	35	punct	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	29	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 564
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 565
# text = ¬((''x''∨''y'')∨''z'') ∧ (''x'' ∨ (''y'' ∨ ''z''))
1	¬	¬	SYM	X	_	7	nmod	_	SpaceAfter=No
2	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'x	'x	NOUN	S	Number=Sing	7	nmod	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'∨	'∨	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
8	'	'	PART	PART	_	19	case	_	SpaceAfter=No
9	'y	'y	ADV	B	_	19	advmod	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
12	)	)	PUNCT	FB	_	9	punct	_	SpaceAfter=No
13	∨	∨	SYM	X	_	19	nmod	_	SpaceAfter=No
14	'	'	PUNCT	FF	_	13	punct	_	SpaceAfter=No
15	'z	'z	PROPN	SP	_	13	nmod	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
18	)	)	PUNCT	FB	_	15	punct	_	_
19	∧	∧	SYM	X	_	7	nmod	_	_
20	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
21	'	'	PART	PART	_	22	mark	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	19	acl	_	SpaceAfter=No
23	'	'	PART	PART	_	25	mark	_	SpaceAfter=No
24	'	'	PART	PART	_	23	case	_	_
25	∨	∨	SYM	X	_	22	obj	_	_
26	(	(	PUNCT	FB	_	28	punct	_	SpaceAfter=No
27	'	'	PART	PART	_	28	mark	_	SpaceAfter=No
28	'y	'y	VERB	V	VerbForm=Inf	25	acl	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	28	punct	_	_
31	∨	∨	SYM	X	_	28	conj	_	_
32	'	'	PUNCT	FB	_	31	punct	_	SpaceAfter=No
33	'z	'z	PROPN	SP	_	31	appos	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
36	)	)	PUNCT	FB	_	33	punct	_	SpaceAfter=No
37	)	)	PUNCT	FB	_	28	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 566
# text = by '''cmm2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 567
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 568
# text = (¬((''x''∨''y'')∨''z'') ∧ ''x'') ∨ (¬((''x''∨''y'')∨''z'') ∧ (''y'' ∨ ''z''))
1	(	(	PUNCT	FB	_	2	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	0	root	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
4	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'x	'x	NOUN	S	Number=Sing	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'∨	'∨	NOUN	S	Number=Sing	22	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'y	'y	ADV	B	_	22	advmod	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	SpaceAfter=No
14	∨	∨	SYM	X	_	22	nsubj	_	SpaceAfter=No
15	'	'	PUNCT	FF	_	14	punct	_	SpaceAfter=No
16	'z	'z	PROPN	SP	_	14	appos	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	_
20	∧	∧	SYM	X	_	22	nmod	_	_
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	2	conj	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	_
26	∨	∨	SYM	X	_	22	obj	_	_
27	(	(	PUNCT	FB	_	28	punct	_	SpaceAfter=No
28	¬	¬	SYM	X	_	46	nmod	_	SpaceAfter=No
29	(	(	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	(	(	PUNCT	FB	_	36	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
32	'x	'x	NOUN	S	Number=Sing	34	nmod	_	SpaceAfter=No
33	'	'	PART	PART	_	32	case	_	SpaceAfter=No
34	'∨	'∨	NOUN	S	Number=Sing	36	nmod	_	SpaceAfter=No
35	'	'	PART	PART	_	34	case	_	SpaceAfter=No
36	'y	'y	NOUN	S	Number=Sing	28	conj	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
39	)	)	PUNCT	FB	_	36	punct	_	SpaceAfter=No
40	∨	∨	SYM	X	_	42	nmod	_	SpaceAfter=No
41	'	'	PART	PART	_	40	case	_	SpaceAfter=No
42	'z	'z	PROPN	SP	_	28	conj	_	SpaceAfter=No
43	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
44	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
45	)	)	PUNCT	FB	_	28	punct	_	_
46	∧	∧	SYM	X	_	26	conj	_	_
47	(	(	PUNCT	FB	_	49	punct	_	SpaceAfter=No
48	'	'	PART	PART	_	49	mark	_	SpaceAfter=No
49	'y	'y	VERB	V	VerbForm=Inf	46	appos	_	SpaceAfter=No
50	'	'	PUNCT	FB	_	49	punct	_	SpaceAfter=No
51	'	'	PUNCT	FB	_	49	punct	_	_
52	∨	∨	SYM	X	_	49	conj	_	_
53	'	'	PUNCT	FB	_	52	punct	_	SpaceAfter=No
54	'z	'z	PROPN	SP	_	52	appos	_	SpaceAfter=No
55	'	'	PUNCT	FB	_	54	punct	_	SpaceAfter=No
56	'	'	PUNCT	FB	_	54	punct	_	SpaceAfter=No
57	)	)	PUNCT	FB	_	54	punct	_	SpaceAfter=No
58	)	)	PUNCT	FB	_	49	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 569
# text = by '''dst2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst2	dst2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 570
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 571
# text = (¬((''x''∨''y'')∨''z'') ∧ ''x'') ∨ ((¬((''x''∨''y'')∨''z'') ∧ ''y'') ∨ (¬((''x''∨''y'')∨''z'') ∧ ''z''))
1	(	(	PUNCT	FB	_	2	punct	_	SpaceAfter=No
2	¬	¬	SYM	X	_	0	root	_	SpaceAfter=No
3	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
4	(	(	PUNCT	FB	_	22	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'x	'x	NOUN	S	Number=Sing	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'∨	'∨	NOUN	S	Number=Sing	22	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'y	'y	ADV	B	_	22	advmod	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	10	punct	_	SpaceAfter=No
14	∨	∨	SYM	X	_	22	nsubj	_	SpaceAfter=No
15	'	'	PUNCT	FF	_	14	punct	_	SpaceAfter=No
16	'z	'z	PROPN	SP	_	14	appos	_	SpaceAfter=No
17	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	16	punct	_	SpaceAfter=No
19	)	)	PUNCT	FB	_	16	punct	_	_
20	∧	∧	SYM	X	_	22	nmod	_	_
21	'	'	PART	PART	_	20	case	_	SpaceAfter=No
22	'x	'x	VERB	V	VerbForm=Inf	2	conj	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	22	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	22	punct	_	_
26	∨	∨	SYM	X	_	22	conj	_	_
27	(	(	PUNCT	FB	_	29	punct	_	SpaceAfter=No
28	(	(	PUNCT	FB	_	29	punct	_	SpaceAfter=No
29	¬	¬	SYM	X	_	26	appos	_	SpaceAfter=No
30	(	(	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	(	(	PUNCT	FB	_	37	punct	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
33	'x	'x	NOUN	S	Number=Sing	35	nmod	_	SpaceAfter=No
34	'	'	PART	PART	_	33	case	_	SpaceAfter=No
35	'∨	'∨	NOUN	S	Number=Sing	37	nmod	_	SpaceAfter=No
36	'	'	PART	PART	_	35	case	_	SpaceAfter=No
37	'y	'y	NOUN	S	Number=Sing	29	conj	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
40	)	)	PUNCT	FB	_	37	punct	_	SpaceAfter=No
41	∨	∨	SYM	X	_	43	nmod	_	SpaceAfter=No
42	'	'	PART	PART	_	41	case	_	SpaceAfter=No
43	'z	'z	PROPN	SP	_	29	conj	_	SpaceAfter=No
44	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
45	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
46	)	)	PUNCT	FB	_	29	punct	_	_
47	∧	∧	SYM	X	_	53	nmod	_	_
48	'	'	PART	PART	_	47	case	_	SpaceAfter=No
49	'y	'y	ADV	B	_	53	advmod	_	SpaceAfter=No
50	'	'	PUNCT	FB	_	49	punct	_	SpaceAfter=No
51	'	'	PUNCT	FB	_	49	punct	_	SpaceAfter=No
52	)	)	PUNCT	FB	_	49	punct	_	_
53	∨	∨	SYM	X	_	29	conj	_	_
54	(	(	PUNCT	FB	_	55	punct	_	SpaceAfter=No
55	¬	¬	SYM	X	_	53	appos	_	SpaceAfter=No
56	(	(	PUNCT	FB	_	55	punct	_	SpaceAfter=No
57	(	(	PUNCT	FB	_	63	punct	_	SpaceAfter=No
58	'	'	PUNCT	FB	_	57	punct	_	SpaceAfter=No
59	'x	'x	NOUN	S	Number=Sing	61	nmod	_	SpaceAfter=No
60	'	'	PART	PART	_	59	case	_	SpaceAfter=No
61	'∨	'∨	NOUN	S	Number=Sing	63	nmod	_	SpaceAfter=No
62	'	'	PART	PART	_	61	case	_	SpaceAfter=No
63	'y	'y	NOUN	S	Number=Sing	55	conj	_	SpaceAfter=No
64	'	'	PUNCT	FB	_	63	punct	_	SpaceAfter=No
65	'	'	PUNCT	FB	_	63	punct	_	SpaceAfter=No
66	)	)	PUNCT	FB	_	63	punct	_	SpaceAfter=No
67	∨	∨	SYM	X	_	69	nmod	_	SpaceAfter=No
68	'	'	PUNCT	FB	_	67	punct	_	SpaceAfter=No
69	'z	'z	PROPN	SP	_	55	conj	_	SpaceAfter=No
70	'	'	PUNCT	FB	_	55	punct	_	SpaceAfter=No
71	'	'	PUNCT	FB	_	55	punct	_	SpaceAfter=No
72	)	)	PUNCT	FB	_	55	punct	_	_
73	∧	∧	SYM	X	_	75	nmod	_	_
74	'	'	PUNCT	FB	_	73	punct	_	SpaceAfter=No
75	'z	'z	PROPN	SP	_	55	conj	_	SpaceAfter=No
76	'	'	PUNCT	FB	_	55	punct	_	SpaceAfter=No
77	'	'	PUNCT	FB	_	55	punct	_	SpaceAfter=No
78	)	)	PUNCT	FB	_	55	punct	_	SpaceAfter=No
79	)	)	PUNCT	FB	_	29	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 572
# text = by '''dst2'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	dst2	dst2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 573
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 574
# text = 0 ∨ (0 ∨ 0)
1	0	0	NUM	N	NumType=Card	2	nummod	_	_
2	∨	∨	SYM	X	_	0	root	_	_
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	0	0	NUM	N	NumType=Card	5	nummod	_	_
5	∨	∨	SYM	X	_	2	appos	_	_
6	0	0	NUM	N	NumType=Card	5	nummod	_	SpaceAfter=No
7	)	)	PUNCT	FB	_	5	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 575
# text = by '''h1''','''i1''','''j1'''
1	by	by	ADP	E	_	13	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	h1	h1	NUM	N	NumType=Card	13	nummod	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	5	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
13	i1	i1	NUM	N	NumType=Card	20	nummod	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
17	,	,	PUNCT	FF	_	13	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
20	'j1	'j1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	20	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	20	punct	_	SpacesAfter=\n\n\n\n\s\s\s\s\s\s\s\s\s\s\s\s\s\n\n\s

# newpar
# sent_id = 576
# text = =
1	=	=	SYM	X	_	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 577
# text = 0
1	0	0	NUM	N	NumType=Card	0	root	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 578
# text = by '''idn1'''
1	by	by	ADP	E	_	5	case	_	_
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	idn1	idn1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	5	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	5	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 579
# text = '''l2''' dual (''x'' ∧ (''y'' ∧ ''z'')) ∨ ¬((''x'' ∧ ''y'') ∧ ''z'') = 1
1	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'l2	'l2	NUM	N	NumType=Card	7	nummod	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpacesAfter=\s \s
7	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s\s \s
8	(	(	PUNCT	FB	_	10	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	10	mark	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	7	advcl	_	SpaceAfter=No
11	'	'	PART	PART	_	31	mark	_	SpaceAfter=No
12	'	'	PART	PART	_	11	case	_	_
13	∧	∧	SYM	X	_	31	nsubj	_	_
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'y	'y	VERB	V	VerbForm=Inf	31	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	16	compound:prt	_	SpaceAfter=No
18	'	'	PART	PART	_	21	case	_	_
19	∧	∧	SYM	X	_	21	nmod	_	_
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'z	'z	PROPN	SP	_	16	obl	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	SpaceAfter=No
25	)	)	PUNCT	FB	_	16	punct	_	_
26	∨	∨	SYM	X	_	27	nmod	_	_
27	¬	¬	SYM	X	_	31	mark	_	SpaceAfter=No
28	(	(	PUNCT	FB	_	31	punct	_	SpaceAfter=No
29	(	(	PUNCT	FB	_	31	punct	_	SpaceAfter=No
30	'	'	PART	PART	_	31	mark	_	SpaceAfter=No
31	'x	'x	VERB	V	VerbForm=Inf	10	ccomp	_	SpaceAfter=No
32	'	'	PART	PART	_	31	compound:prt	_	SpaceAfter=No
33	'	'	PART	PART	_	46	case	_	_
34	∧	∧	SYM	X	_	46	nmod	_	_
35	'	'	PART	PART	_	34	case	_	SpaceAfter=No
36	'y	'y	VERB	V	VerbForm=Inf	46	conj	_	SpaceAfter=No
37	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
38	'	'	PUNCT	FB	_	36	punct	_	SpaceAfter=No
39	)	)	PUNCT	FB	_	36	punct	_	_
40	∧	∧	SYM	X	_	46	nmod	_	_
41	'	'	PUNCT	FB	_	40	punct	_	SpaceAfter=No
42	'z	'z	PROPN	SP	_	40	appos	_	SpaceAfter=No
43	'	'	PUNCT	FB	_	42	punct	_	SpaceAfter=No
44	'	'	PUNCT	FB	_	42	punct	_	SpaceAfter=No
45	)	)	PUNCT	FB	_	42	punct	_	_
46	=	=	SYM	X	_	31	obl	_	_
47	1	1	NUM	N	NumType=Card	46	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 580
# text = '''ass1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	ass1	ass1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 581
# text = ''x'' ∨ (''y'' ∨ ''z'') = (''x'' ∨ ''y'') ∨ ''z''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	8	mark	_	_
6	(	(	PUNCT	FB	_	8	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
8	'y	'y	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PART	PART	_	20	mark	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	_
11	∨	∨	SYM	X	_	17	nmod	_	_
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'z	'z	PROPN	SP	_	11	nmod	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	13	punct	_	SpaceAfter=No
16	)	)	PUNCT	FB	_	13	punct	_	_
17	=	=	SYM	X	_	20	nsubj	_	_
18	(	(	PUNCT	FB	_	20	punct	_	SpaceAfter=No
19	'	'	PART	PART	_	20	mark	_	SpaceAfter=No
20	'x	'x	VERB	V	VerbForm=Inf	8	ccomp	_	SpaceAfter=No
21	'	'	PART	PART	_	20	compound:prt	_	SpaceAfter=No
22	'	'	PART	PART	_	25	mark	_	_
23	∨	∨	SYM	X	_	25	nmod	_	_
24	'	'	PART	PART	_	23	case	_	SpaceAfter=No
25	'y	'y	VERB	V	VerbForm=Inf	20	xcomp	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
28	)	)	PUNCT	FB	_	25	punct	_	_
29	∨	∨	SYM	X	_	31	nmod	_	_
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'z	'z	PROPN	SP	_	25	obj	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	20	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 582
# text = proof:
1	proof	proof	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
2	:	:	PUNCT	FC	_	1	punct	_	SpacesAfter=\s\s\s\s\s\s\n\n\s\s\s\n\n\s

# newpar
# sent_id = 583
# text = by '''k1''', '''l1''', '''ung''', '''dng'''
1	by	by	ADP	E	_	11	case	_	_
2	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'k1	'k1	NUM	N	NumType=Card	11	nummod	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	4	punct	_	_
9	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
11	'l1	'l1	NUM	N	NumType=Card	18	nummod	_	SpaceAfter=No
12	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
15	,	,	PUNCT	FF	_	11	punct	_	_
16	'	'	PUNCT	FB	_	11	punct	_	SpaceAfter=No
17	'	'	PART	PART	_	11	case	_	SpaceAfter=No
18	'ung	'ung	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
21	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
22	,	,	PUNCT	FF	_	18	punct	_	_
23	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
24	'	'	PART	PART	_	25	mark	_	SpaceAfter=No
25	'dng	'dng	VERB	V	VerbForm=Inf	18	advcl	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
28	'	'	PUNCT	FB	_	18	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 584
# text = '''ass2''' dual ''x'' ∧ (''y'' ∧ ''z'') = (''x'' ∧ ''y'') ∧ ''z''
1	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	ass2	ass2	NUM	N	NumType=Card	8	nummod	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	8	mark	_	SpacesAfter=\s \s
8	dual	du	VERB	V	VerbForm=Inf	0	root	_	SpacesAfter=\s\s \s\s
9	'	'	PART	PART	_	8	compound:prt	_	SpaceAfter=No
10	'x	'x	VERB	V	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'	'	PART	PART	_	10	case	_	_
13	∧	∧	SYM	X	_	16	mark	_	_
14	(	(	PUNCT	FB	_	16	punct	_	SpaceAfter=No
15	'	'	PART	PART	_	16	mark	_	SpaceAfter=No
16	'y	'y	VERB	V	VerbForm=Inf	10	advcl	_	SpaceAfter=No
17	'	'	PART	PART	_	28	mark	_	SpaceAfter=No
18	'	'	PART	PART	_	17	case	_	_
19	∧	∧	SYM	X	_	25	nmod	_	_
20	'	'	PUNCT	FB	_	19	punct	_	SpaceAfter=No
21	'z	'z	PROPN	SP	_	19	nmod	_	SpaceAfter=No
22	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
23	'	'	PUNCT	FB	_	21	punct	_	SpaceAfter=No
24	)	)	PUNCT	FB	_	21	punct	_	_
25	=	=	SYM	X	_	28	nsubj	_	_
26	(	(	PUNCT	FB	_	28	punct	_	SpaceAfter=No
27	'	'	PART	PART	_	28	mark	_	SpaceAfter=No
28	'x	'x	VERB	V	VerbForm=Inf	16	xcomp	_	SpaceAfter=No
29	'	'	PART	PART	_	28	compound:prt	_	SpaceAfter=No
30	'	'	PART	PART	_	33	mark	_	_
31	∧	∧	SYM	X	_	33	nmod	_	_
32	'	'	PART	PART	_	31	case	_	SpaceAfter=No
33	'y	'y	VERB	V	VerbForm=Inf	28	xcomp	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
36	)	)	PUNCT	FB	_	33	punct	_	_
37	∧	∧	SYM	X	_	39	nmod	_	_
38	'	'	PUNCT	FB	_	37	punct	_	SpaceAfter=No
39	'z	'z	PROPN	SP	_	33	obj	_	SpaceAfter=No
40	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
41	'	'	PUNCT	FB	_	28	punct	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 585
# text = abbreviations
1	abbreviations	abbreviation	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 586
# text = '''uid'''
1	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
4	uid	uid	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s\s

# newpar
# sent_id = 587
# text = unique identity
1	unique	unique	ADJ	A	Degree=Pos	2	amod	_	_
2	identity	identity	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 588
# text = '''idm'''
1	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
4	idm	idm	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 589
# text = idempotence
1	idempotence	idempotence	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 590
# text = '''bnd'''
1	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'bnd	'bnd	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 591
# text = boundaries
1	boundaries	boundary	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 592
# text = '''abs'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	abs	ab	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 593
# text = absorption law
1	absorption	absorption	NOUN	S	Number=Sing	2	nmod	_	_
2	law	law	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 594
# text = '''ung'''
1	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'ung	'ung	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s\s

# newpar
# sent_id = 595
# text = unique negation
1	unique	unique	ADJ	A	Degree=Pos	2	amod	_	_
2	negation	negation	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 596
# text = '''dng'''
1	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'dng	'dng	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 597
# text = double negation
1	double	double	ADJ	A	Degree=Pos	2	amod	_	_
2	negation	negation	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 598
# text = '''dmg'''
1	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'dmg	'dmg	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 599
# text = de morgan's law
1	de	de	ADP	E	_	4	case	_	_
2	morgan	morgan	NOUN	S	Gender=Masc|Number=Sing	4	nmod	_	SpaceAfter=No
3	's	's	PART	PART	_	2	case	_	_
4	law	law	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 600
# text = '''ass'''
1	'	'	PART	PART	_	4	case	_	SpaceAfter=No
2	'	'	PART	PART	_	4	nmod	_	SpaceAfter=No
3	'	'	PART	PART	_	2	case	_	SpaceAfter=No
4	ass	ass	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 601
# text = associativity
1	associativity	associativity	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 602
# text = '''huntington 1904 boolean algebra axioms'''
1	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	1	case	_	SpaceAfter=No
4	huntington	huntington	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
5	1904	1904	NUM	N	NumType=Card	6	nummod	_	_
6	boolean	boolean	SCONJ	CS	_	4	obj	_	_
7	algebra	algebra	DET	RI	Definite=Ind|Number=Sing|PronType=Art	8	det	_	_
8	axioms	axiom	NOUN	S	Number=Plur	6	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'	'	PART	PART	_	8	case	_	SpaceAfter=No
11	'	'	PART	PART	_	8	case	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 603
# text = '''idn1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	idn1	idn1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\n\n\s

# newpar
# sent_id = 604
# text = ''x'' ∨ 0 = ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	9	nmod	_	_
6	0	0	NUM	N	NumType=Card	7	nummod	_	_
7	=	=	SYM	X	_	9	nmod	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 605
# text = '''idn2'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	idn2	idn2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\n\n\s

# newpar
# sent_id = 606
# text = ''x'' ∧ 1 = ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∧	∧	SYM	X	_	9	mark	_	_
6	1	1	NUM	N	NumType=Card	7	nummod	_	_
7	=	=	SYM	X	_	9	nmod	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	9	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	2	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 607
# text = '''cmm1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	cmm1	cmm1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 608
# text = ''x'' ∨ ''y'' = ''y'' ∨ ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	7	mark	_	_
5	∨	∨	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'y	'y	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	7	case	_	_
10	=	=	SYM	X	_	12	mark	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'y	'y	VERB	V	VerbForm=Inf	7	advcl	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	17	mark	_	_
15	∨	∨	SYM	X	_	17	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'x	'x	VERB	V	VerbForm=Inf	12	xcomp	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	12	punct	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 609
# text = '''cmm2'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	cmm2	cmm2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 610
# text = ''x'' ∧ ''y'' = ''y'' ∧ ''x''
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	7	mark	_	_
5	∧	∧	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'y	'y	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	7	case	_	_
10	=	=	SYM	X	_	12	mark	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'y	'y	VERB	V	VerbForm=Inf	7	advcl	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	17	mark	_	_
15	∧	∧	SYM	X	_	17	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'x	'x	VERB	V	VerbForm=Inf	12	xcomp	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	12	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 611
# text = '''dst1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	dst1	dst1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\n\n\s

# newpar
# sent_id = 612
# text = ''x'' ∨ (''y''∧''z'') = (''x''∨''y'') ∧ (''x''∨''z'')
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	27	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	27	nmod	_	_
6	(	(	PUNCT	FB	_	27	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'y	'y	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'∧	'∧	NOUN	S	Number=Sing	27	nmod	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'z	'z	PROPN	SP	_	10	nmod	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	12	punct	_	_
16	=	=	SYM	X	_	27	nmod	_	_
17	(	(	PUNCT	FB	_	27	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
19	'x	'x	NOUN	S	Number=Sing	21	nmod	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'∨	'∨	NOUN	S	Number=Sing	27	nmod	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'y	'y	ADV	B	_	27	advmod	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
26	)	)	PUNCT	FB	_	23	punct	_	_
27	∧	∧	SYM	X	_	2	obj	_	_
28	(	(	PUNCT	FB	_	34	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'x	'x	NOUN	S	Gender=Masc|Number=Sing	32	nmod	_	SpaceAfter=No
31	'	'	PART	PART	_	30	case	_	SpaceAfter=No
32	'∨	'∨	NOUN	S	Number=Sing	34	nmod	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
34	'z	'z	PROPN	SP	_	27	appos	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
37	)	)	PUNCT	FB	_	34	punct	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 613
# text = '''dst2'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	dst2	dst2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\n\n\s

# newpar
# sent_id = 614
# text = ''x'' ∧ (''y''∨''z'') = (''x''∧''y'') ∨ (''x''∧''z'')
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	27	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∧	∧	SYM	X	_	27	nmod	_	_
6	(	(	PUNCT	FB	_	27	punct	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'y	'y	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	SpaceAfter=No
10	'∨	'∨	NOUN	S	Number=Sing	27	nmod	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'z	'z	PROPN	SP	_	10	nmod	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	12	punct	_	_
16	=	=	SYM	X	_	27	nmod	_	_
17	(	(	PUNCT	FB	_	27	punct	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	27	punct	_	SpaceAfter=No
19	'x	'x	NOUN	S	Number=Sing	21	nmod	_	SpaceAfter=No
20	'	'	PART	PART	_	19	case	_	SpaceAfter=No
21	'∧	'∧	NOUN	S	Number=Sing	27	nmod	_	SpaceAfter=No
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'y	'y	ADV	B	_	27	advmod	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
26	)	)	PUNCT	FB	_	23	punct	_	_
27	∨	∨	SYM	X	_	2	obj	_	_
28	(	(	PUNCT	FB	_	34	punct	_	SpaceAfter=No
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'x	'x	NOUN	S	Gender=Masc|Number=Sing	32	nmod	_	SpaceAfter=No
31	'	'	PART	PART	_	30	case	_	SpaceAfter=No
32	'∧	'∧	NOUN	S	Number=Sing	34	nmod	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	32	punct	_	SpaceAfter=No
34	'z	'z	PROPN	SP	_	27	appos	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
37	)	)	PUNCT	FB	_	34	punct	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 615
# text = '''cpl1'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	cpl1	cpl1	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\s\n\n\s

# newpar
# sent_id = 616
# text = ''x'' ∨ ¬''x'' = 1
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∨	∨	SYM	X	_	8	nsubj	_	_
6	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	_
11	=	=	SYM	X	_	8	obj	_	_
12	1	1	NUM	N	NumType=Card	11	nummod	_	SpacesAfter=\n\n\s

# newpar
# sent_id = 617
# text = '''cpl2'''
1	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	cpl2	cpl2	NUM	N	NumType=Card	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\s\s\n\n\s

# newpar
# sent_id = 618
# text = ''x'' ∧ ¬''x'' = 0
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	8	mark	_	SpaceAfter=No
4	'	'	PART	PART	_	3	case	_	_
5	∧	∧	SYM	X	_	8	nsubj	_	_
6	¬	¬	SYM	X	_	8	nmod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'x	'x	VERB	V	VerbForm=Inf	2	advcl	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	_
11	=	=	SYM	X	_	8	obj	_	_
12	0	0	NUM	N	NumType=Card	11	nummod	_	SpacesAfter=\n\n\n\n\n\n\n\n\n\n\s

# newpar
# sent_id = 619
# text = abbreviations
1	abbreviations	abbreviation	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 620
# text = '''idn'''
1	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	4	mark	_	SpaceAfter=No
4	idn	idn	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	4	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 621
# text = identity
1	identity	identity	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 622
# text = '''cmm'''
1	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'cmm	'cmm	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 623
# text = commutativity
1	commutativity	commutativity	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 624
# text = '''dst'''
1	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'dst	'dst	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 625
# text = distributivity
1	distributivity	distributivity	NOUN	S	Number=Sing	0	root	_	SpacesAfter=\n\n\n\n\s

# newpar
# sent_id = 626
# text = '''cpl'''
1	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'cpl	'cpl	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	3	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	3	punct	_	SpacesAfter=\s\n\n\s

# newpar
# sent_id = 627
# text = complements
1	complements	complement	NOUN	S	Number=Plur	0	root	_	SpacesAfter=\n\n\n\n\n\n

# newpar
# sent_id = 628
# text = the first axiomatization of boolean lattices/algebras in general was given by the english philosopher and mathematician alfred north whitehead in 1898.
1	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
2	first	first	ADJ	NO	Degree=Pos|NumType=Ord	3	amod	_	_
3	axiomatization	axiomatization	NOUN	S	Number=Sing	8	nsubj	_	_
4	of	of	ADP	E	_	6	case	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	lattices	lattice	NOUN	S	Number=Plur	3	nmod	_	SpaceAfter=No
7	/	/	PUNCT	FF	_	6	punct	_	SpaceAfter=No
8	algebras	algebra	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
9	in	in	ADP	E	_	12	mark	_	_
10	general	full	ADJ	A	Number=Sing	12	nsubj:pass	_	_
11	was	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	12	aux:pass	_	_
12	given	give	VERB	V	Tense=Past|VerbForm=Part	8	advcl	_	_
13	by	by	ADP	E	_	16	case	_	_
14	the	the	DET	RD	Definite=Def|PronType=Art	16	det	_	_
15	english	english	ADJ	A	Degree=Pos	16	amod	_	_
16	philosopher	philosopher	NOUN	S	Number=Sing	12	obl	_	_
17	and	and	CCONJ	CC	_	18	cc	_	_
18	mathematician	mathematician	NOUN	S	Number=Sing	16	conj	_	_
19	alfred	alfr	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	12	conj	_	_
20	north	north	ADJ	A	Degree=Pos	21	amod	_	_
21	whitehead	whitehead	ADV	B	_	19	advmod	_	_
22	in	in	ADP	E	_	23	case	_	_
23	1898	1898	NUM	N	NumType=Card	19	obl	_	SpaceAfter=No
24	.	.	PUNCT	FS	_	8	punct	_	SpacesAfter=\n

# sent_id = 629
# text = it included the above axioms and additionally ''x''∨1=1 and ''x''∧0=0.
1	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	2	nsubj	_	_
2	included	include	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
3	the	the	DET	RD	Definite=Def|PronType=Art	5	det	_	_
4	above	above	ADJ	A	Degree=Pos	5	amod	_	_
5	axioms	axiom	NOUN	S	Number=Plur	2	obj	_	_
6	and	and	CCONJ	CC	_	9	cc	_	_
7	additionally	additionally	ADV	B	_	9	advmod	_	_
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'x	'x	VERB	V	VerbForm=Inf	2	conj	_	SpaceAfter=No
10	'	'	PART	PART	_	9	case	_	SpaceAfter=No
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	∨1=1	∨1=1	NUM	N	NumType=Card	9	obj	_	_
13	and	and	CCONJ	CC	_	15	cc	_	_
14	'	'	PART	PART	_	13	case	_	SpaceAfter=No
15	'x	'x	VERB	V	VerbForm=Inf	9	conj	_	SpaceAfter=No
16	'	'	PART	PART	_	18	mark	_	SpaceAfter=No
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	∧0=0	∧0=0	NOUN	S	_	15	obj	_	SpaceAfter=No
19	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 630
# text = in 1904, the american mathematician edward v. huntington (1874–1952) gave probably the most parsimonious axiomatization based on ∧, ∨, ¬, even proving the associativity laws (see box).
1	in	in	ADP	E	_	2	case	_	_
2	1904	1904	NUM	N	NumType=Card	7	obl	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	2	punct	_	_
4	the	the	DET	RD	Definite=Def|PronType=Art	6	det	_	_
5	american	american	ADJ	A	Degree=Pos	6	amod	_	_
6	mathematician	mathematician	NOUN	S	Number=Sing	7	nsubj	_	_
7	edward	edward	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
8	v	fifth	ADJ	NO	Degree=Pos|NumType=Ord	10	amod	_	SpaceAfter=No
9	.	.	PUNCT	FS	_	10	punct	_	_
10	huntington	huntington	NOUN	S	Number=Sing	7	obj	_	_
11	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
12	1874	1874	NUM	N	NumType=Card	16	nummod	_	SpaceAfter=No
13	–	–	PUNCT	FF	_	12	punct	_	SpaceAfter=No
14	1952	1952	NUM	N	NumType=Card	12	nummod	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	14	punct	_	_
16	gave	give	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	7	conj	_	_
17	probably	probably	ADV	B	_	16	advmod	_	_
18	the	the	DET	RD	Definite=Def|PronType=Art	21	det	_	_
19	most	most	ADV	B	_	20	advmod	_	_
20	parsimonious	parsimonious	ADJ	A	Degree=Pos	21	amod	_	_
21	axiomatization	axiomatization	NOUN	S	Number=Sing	16	obj	_	_
22	based	based	VERB	V	Tense=Past|VerbForm=Part	21	acl	_	_
23	on	on	ADP	E	_	24	case	_	_
24	∧	∧	SYM	X	_	22	obl	_	SpaceAfter=No
25	,	,	PUNCT	FF	_	26	punct	_	_
26	∨	∨	SYM	X	_	24	conj	_	SpaceAfter=No
27	,	,	PUNCT	FF	_	28	punct	_	_
28	¬	¬	SYM	X	_	24	conj	_	SpaceAfter=No
29	,	,	PUNCT	FF	_	31	punct	_	_
30	even	even	ADV	B	_	31	advmod	_	_
31	proving	prove	VERB	V	VerbForm=Ger	24	conj	_	_
32	the	the	DET	RD	Definite=Def|PronType=Art	34	det	_	_
33	associativity	associativity	NOUN	S	Number=Sing	34	nmod	_	_
34	laws	law	NOUN	S	Number=Plur	31	obj	_	_
35	(	(	PUNCT	FB	_	36	punct	_	SpaceAfter=No
36	see	see	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	24	conj	_	_
37	box	box	NOUN	S	Number=Sing	36	obj	_	SpaceAfter=No
38	)	)	PUNCT	FB	_	36	punct	_	SpaceAfter=No
39	.	.	PUNCT	FS	_	7	punct	_	SpacesAfter=\n

# sent_id = 631
# text = he also proved that these axioms are independent of each other.
1	he	he	PRON	PE	Gender=Masc|Number=Sing|Person=3|PronType=Prs	3	nsubj	_	_
2	also	also	ADV	B	_	3	advmod	_	_
3	proved	prov	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	_
4	that	that	SCONJ	CS	_	8	mark	_	_
5	these	this	DET	DD	Number=Plur|PronType=Dem	6	det	_	_
6	axioms	axiom	NOUN	S	Number=Plur	8	nsubj	_	_
7	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	8	cop	_	_
8	independent	independent	ADJ	A	Degree=Pos	3	ccomp	_	_
9	of	of	ADP	E	_	10	case	_	_
10	each	each	PRON	PI	PronType=Ind	8	obl	_	_
11	other	other	ADJ	A	Degree=Pos	8	amod	_	SpaceAfter=No
12	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 632
# text = in 1933, huntington set out the following elegant axiomatization for boolean algebra.
1	in	in	ADP	E	_	2	case	_	_
2	1933	1933	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	2	punct	_	_
4	huntington	huntington	NOUN	S	Number=Sing	0	root	_	_
5	set	set	VERB	V	Tense=Past|VerbForm=Part	4	acl	_	_
6	out	out	ADP	E	_	5	compound:prt	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	10	det	_	_
8	following	following	ADJ	A	Degree=Pos	10	amod	_	_
9	elegant	elegant	ADJ	A	Degree=Pos	10	amod	_	_
10	axiomatization	axiomatization	NOUN	S	Number=Sing	5	obj	_	_
11	for	for	ADP	E	_	13	case	_	_
12	boolean	boolean	DET	RI	Definite=Ind|Number=Sing|PronType=Art	13	det	_	_
13	algebra	algebra	NOUN	S	Number=Sing	5	obl	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\s\s

# sent_id = 633
# text = it requires just one binary operation + and a unary functional symbol ''n'', to be read as 'complement', which satisfy the following laws:
1	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	2	nsubj	_	_
2	requires	require	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	just	just	ADV	B	_	6	advmod	_	_
4	one	one	NUM	N	NumType=Card	6	nummod	_	_
5	binary	binary	ADJ	A	Degree=Pos	6	amod	_	_
6	operation	operation	NOUN	S	Number=Sing	2	obj	_	_
7	+	+	SYM	X	_	6	nmod	_	_
8	and	and	CCONJ	CC	_	12	cc	_	_
9	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	12	det	_	_
10	unary	unary	ADJ	A	Degree=Pos	12	amod	_	_
11	functional	functional	ADJ	A	Degree=Pos	12	amod	_	_
12	symbol	symbol	NOUN	S	Number=Sing	7	conj	_	_
13	'	'	PART	PART	_	7	case	_	SpaceAfter=No
14	'n	'n	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
15	'	'	PART	PART	_	14	case	_	SpaceAfter=No
16	'	'	PART	PART	_	14	compound:prt	_	SpaceAfter=No
17	,	,	PUNCT	FF	_	14	punct	_	_
18	to	to	PART	PART	_	20	mark	_	_
19	be	be	AUX	VA	VerbForm=Inf	20	aux:pass	_	_
20	read	read	VERB	V	Tense=Past|VerbForm=Part	14	advcl	_	_
21	as	as	ADP	E	_	23	case	_	_
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	complement	complement	NOUN	S	Number=Sing	20	obl	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
25	,	,	PUNCT	FF	_	23	punct	_	_
26	which	which	PRON	PR	PronType=Rel	27	nsubj	_	_
27	satisfy	satisfy	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	23	acl:relcl	_	_
28	the	the	DET	RD	Definite=Def|PronType=Art	30	det	_	_
29	following	following	ADJ	A	Degree=Pos	30	amod	_	_
30	laws	law	NOUN	S	Number=Plur	27	obj	_	SpaceAfter=No
31	:	:	PUNCT	FC	_	23	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 634
# text = # ''commutativity'':
1	#	#	PUNCT	FF	_	4	nmod	_	_
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	1	case	_	SpaceAfter=No
4	commutativity	commutativity	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	:	:	PUNCT	FC	_	4	punct	_	_

# sent_id = 635
# text = ''x'' + ''y'' = ''y'' + ''x''.
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PART	PART	_	2	compound:prt	_	SpaceAfter=No
4	'	'	PART	PART	_	7	mark	_	_
5	+	+	SYM	X	_	7	nmod	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'y	'y	VERB	V	VerbForm=Inf	2	xcomp	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	7	case	_	_
10	=	=	SYM	X	_	12	mark	_	_
11	'	'	PART	PART	_	10	case	_	SpaceAfter=No
12	'y	'y	VERB	V	VerbForm=Inf	7	advcl	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	17	mark	_	_
15	+	+	SYM	X	_	17	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'x	'x	VERB	V	VerbForm=Inf	12	xcomp	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 636
# text = # ''associativity'':
1	#	#	PUNCT	FF	_	4	nmod	_	_
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	1	case	_	SpaceAfter=No
4	associativity	associativity	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
5	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
6	'	'	PUNCT	FB	_	4	punct	_	SpaceAfter=No
7	:	:	PUNCT	FC	_	4	punct	_	_

# sent_id = 637
# text = (''x'' + ''y'') + ''z'' = ''x'' + (''y'' + ''z'').
1	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
2	'	'	PART	PART	_	3	mark	_	SpaceAfter=No
3	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
4	'	'	PART	PART	_	3	compound:prt	_	SpaceAfter=No
5	'	'	PART	PART	_	19	mark	_	_
6	+	+	SYM	X	_	19	nmod	_	_
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'y	'y	ADV	B	_	19	advmod	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
10	'	'	PUNCT	FB	_	8	punct	_	SpaceAfter=No
11	)	)	PUNCT	FB	_	8	punct	_	_
12	+	+	SYM	X	_	17	nmod	_	_
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'z	'z	PROPN	SP	_	17	nmod	_	SpaceAfter=No
15	'	'	PUNCT	FB	_	14	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	14	punct	_	_
17	=	=	SYM	X	_	19	nsubj	_	_
18	'	'	PART	PART	_	17	case	_	SpaceAfter=No
19	'x	'x	VERB	V	VerbForm=Inf	3	xcomp	_	SpaceAfter=No
20	'	'	PART	PART	_	25	mark	_	SpaceAfter=No
21	'	'	PART	PART	_	20	case	_	_
22	+	+	SYM	X	_	25	nsubj	_	_
23	(	(	PUNCT	FB	_	25	punct	_	SpaceAfter=No
24	'	'	PART	PART	_	25	mark	_	SpaceAfter=No
25	'y	'y	VERB	V	VerbForm=Inf	19	advcl	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	25	punct	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	25	punct	_	_
28	+	+	SYM	X	_	25	conj	_	_
29	'	'	PUNCT	FB	_	28	punct	_	SpaceAfter=No
30	'z	'z	PROPN	SP	_	28	appos	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
32	'	'	PUNCT	FB	_	30	punct	_	SpaceAfter=No
33	)	)	PUNCT	FB	_	30	punct	_	SpaceAfter=No
34	.	.	PUNCT	FS	_	25	punct	_	SpacesAfter=\n

# sent_id = 638
# text = # ''huntington equation'':
1	#	#	PUNCT	FF	_	4	punct	_	_
2	'	'	PART	PART	_	1	case	_	SpaceAfter=No
3	'	'	PART	PART	_	1	case	_	SpaceAfter=No
4	huntington	huntington	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
5	equation	equation	NOUN	S	Number=Sing	4	obl	_	SpaceAfter=No
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'	'	PART	PART	_	5	case	_	SpaceAfter=No
8	:	:	PUNCT	FC	_	4	punct	_	_

# sent_id = 639
# text = ''n''(''n''(''x'') + ''y'') + ''n''(''n''(''x'') + ''n''(''y'')) = ''x''.
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'n	'n	VERB	V	VerbForm=Inf	52	advcl	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
5	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
7	'n	'n	VERB	V	VerbForm=Inf	52	advcl	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
10	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
12	'x	'x	NOUN	S	Number=Sing	7	appos	_	SpaceAfter=No
13	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	'	'	PUNCT	FB	_	12	punct	_	SpaceAfter=No
15	)	)	PUNCT	FB	_	12	punct	_	_
16	+	+	SYM	X	_	18	nmod	_	_
17	'	'	PART	PART	_	16	case	_	SpaceAfter=No
18	'y	'y	NOUN	S	Number=Sing	7	conj	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
20	'	'	PUNCT	FB	_	18	punct	_	SpaceAfter=No
21	)	)	PUNCT	FB	_	18	punct	_	_
22	+	+	SYM	X	_	24	nmod	_	_
23	'	'	PART	PART	_	22	case	_	SpaceAfter=No
24	'n	'n	VERB	V	VerbForm=Inf	52	advcl	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
26	'	'	PUNCT	FB	_	24	punct	_	SpaceAfter=No
27	(	(	PUNCT	FB	_	29	punct	_	SpaceAfter=No
28	'	'	PART	PART	_	29	mark	_	SpaceAfter=No
29	'n	'n	VERB	V	VerbForm=Inf	52	advcl	_	SpaceAfter=No
30	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
31	'	'	PUNCT	FB	_	29	punct	_	SpaceAfter=No
32	(	(	PUNCT	FB	_	34	punct	_	SpaceAfter=No
33	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
34	'x	'x	NOUN	S	Number=Sing	29	appos	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
36	'	'	PUNCT	FB	_	34	punct	_	SpaceAfter=No
37	)	)	PUNCT	FB	_	34	punct	_	_
38	+	+	SYM	X	_	52	obl	_	_
39	'	'	PART	PART	_	38	case	_	SpaceAfter=No
40	'n	'n	VERB	V	VerbForm=Inf	52	advcl	_	SpaceAfter=No
41	'	'	PUNCT	FB	_	40	punct	_	SpaceAfter=No
42	'	'	PUNCT	FB	_	40	punct	_	SpaceAfter=No
43	(	(	PUNCT	FB	_	45	punct	_	SpaceAfter=No
44	'	'	PART	PART	_	45	mark	_	SpaceAfter=No
45	'y	'y	VERB	V	VerbForm=Inf	40	advcl	_	SpaceAfter=No
46	'	'	PUNCT	FB	_	45	punct	_	SpaceAfter=No
47	'	'	PUNCT	FB	_	45	punct	_	SpaceAfter=No
48	)	)	PUNCT	FB	_	45	punct	_	SpaceAfter=No
49	)	)	PUNCT	FB	_	40	punct	_	_
50	=	=	SYM	X	_	52	nmod	_	_
51	'	'	PART	PART	_	50	case	_	SpaceAfter=No
52	'x	'x	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
53	'	'	PUNCT	FB	_	52	punct	_	SpaceAfter=No
54	'	'	PUNCT	FB	_	52	punct	_	SpaceAfter=No
55	.	.	PUNCT	FS	_	52	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 640
# text = herbert robbins immediately asked:
1	herbert	herbert	ADJ	A	Degree=Sup	2	amod	_	_
2	robbins	robbin	NOUN	S	Number=Plur	4	nsubj	_	_
3	immediately	immediately	ADV	B	_	4	advmod	_	_
4	asked	ask	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	0	root	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	4	punct	_	_

# sent_id = 641
# text = if the huntington equation is replaced with its dual, to wit:
1	if	if	SCONJ	CS	_	6	mark	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	4	det	_	_
3	huntington	huntington	ADJ	A	Degree=Pos	4	amod	_	_
4	equation	equation	NOUN	S	Number=Sing	6	nsubj:pass	_	_
5	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux:pass	_	_
6	replaced	replace	VERB	V	Tense=Past|VerbForm=Part	12	advcl	_	_
7	with	with	ADP	E	_	9	case	_	_
8	its	its	DET	AP	Number=Sing|Poss=Yes|PronType=Prs	9	nmod:poss	_	_
9	dual	dual	NOUN	S	Number=Sing	6	obl	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	6	punct	_	_
11	to	to	PART	PART	_	12	mark	_	_
12	wit	wit	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
13	:	:	PUNCT	FC	_	12	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 642
# text = :4. ''robbins equation'':
1	:4	:4	NUM	N	NumType=Card	6	nummod	_	SpaceAfter=No
2	.	.	PUNCT	FF	_	1	punct	_	_
3	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	1	punct	_	SpaceAfter=No
5	robbins	robbin	ADJ	A	Degree=Pos	6	amod	_	_
6	equation	equation	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
7	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	6	punct	_	SpaceAfter=No
9	:	:	PUNCT	FC	_	6	punct	_	_

# sent_id = 643
# text = ''n''(''n''(''x'' + ''y'') + ''n''(''x'' + ''n''(''y''))) = ''x'',
1	'	'	PART	PART	_	2	mark	_	SpaceAfter=No
2	'n	'n	VERB	V	VerbForm=Inf	0	root	_	SpaceAfter=No
3	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
4	'	'	PUNCT	FB	_	2	punct	_	SpaceAfter=No
5	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
6	'	'	PART	PART	_	7	mark	_	SpaceAfter=No
7	'n	'n	VERB	V	VerbForm=Inf	23	advcl	_	SpaceAfter=No
8	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	'	'	PUNCT	FB	_	7	punct	_	SpaceAfter=No
10	(	(	PUNCT	FB	_	17	punct	_	SpaceAfter=No
11	'	'	PUNCT	FB	_	10	punct	_	SpaceAfter=No
12	'x	'x	NOUN	S	Number=Sing	17	nmod	_	SpaceAfter=No
13	'	'	PART	PART	_	12	case	_	SpaceAfter=No
14	'	'	PART	PART	_	12	case	_	_
15	+	+	SYM	X	_	17	nmod	_	_
16	'	'	PART	PART	_	15	case	_	SpaceAfter=No
17	'y	'y	NOUN	S	Number=Sing	7	appos	_	SpaceAfter=No
18	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
19	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
20	)	)	PUNCT	FB	_	17	punct	_	_
21	+	+	SYM	X	_	23	nmod	_	_
22	'	'	PART	PART	_	21	case	_	SpaceAfter=No
23	'n	'n	VERB	V	VerbForm=Inf	2	conj	_	SpaceAfter=No
24	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
25	'	'	PUNCT	FB	_	23	punct	_	SpaceAfter=No
26	(	(	PUNCT	FB	_	28	punct	_	SpaceAfter=No
27	'	'	PUNCT	FB	_	26	punct	_	SpaceAfter=No
28	'x	'x	NOUN	S	Number=Sing	23	obl	_	SpaceAfter=No
29	'	'	PART	PART	_	28	case	_	SpaceAfter=No
30	'	'	PART	PART	_	28	case	_	_
31	+	+	SYM	X	_	33	nmod	_	_
32	'	'	PART	PART	_	31	case	_	SpaceAfter=No
33	'n	'n	VERB	V	VerbForm=Inf	28	acl	_	SpaceAfter=No
34	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
35	'	'	PUNCT	FB	_	33	punct	_	SpaceAfter=No
36	(	(	PUNCT	FB	_	38	punct	_	SpaceAfter=No
37	'	'	PART	PART	_	38	mark	_	SpaceAfter=No
38	'y	'y	VERB	V	VerbForm=Inf	33	advcl	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	38	punct	_	SpaceAfter=No
40	'	'	PUNCT	FB	_	38	punct	_	SpaceAfter=No
41	)	)	PUNCT	FB	_	38	punct	_	SpaceAfter=No
42	)	)	PUNCT	FB	_	38	punct	_	SpaceAfter=No
43	)	)	PUNCT	FB	_	33	punct	_	_
44	=	=	SYM	X	_	46	nmod	_	_
45	'	'	PART	PART	_	44	case	_	SpaceAfter=No
46	'x	'x	VERB	V	VerbForm=Inf	33	conj	_	SpaceAfter=No
47	'	'	PUNCT	FB	_	46	punct	_	SpaceAfter=No
48	'	'	PUNCT	FB	_	46	punct	_	SpaceAfter=No
49	,	,	PUNCT	FF	_	28	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 644
# text = do (1), (2), and (4) form a basis for boolean algebra?
1	do	do	AUX	VM	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	14	aux	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	1	1	NUM	N	NumType=Card	1	nummod	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	1	punct	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	2	2	NUM	N	NumType=Card	1	nummod	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	12	punct	_	_
10	and	and	CCONJ	CC	_	12	cc	_	_
11	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
12	4	4	NUM	N	NumType=Card	1	conj	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	12	punct	_	_
14	form	form	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
15	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	16	det	_	_
16	basis	basis	NOUN	S	Gender=Masc|Number=Sing	14	obj	_	_
17	for	for	ADP	E	_	19	case	_	_
18	boolean	boolean	ADJ	A	Degree=Pos	19	amod	_	_
19	algebra	algebra	NOUN	S	Number=Plur	16	nmod	_	SpaceAfter=No
20	?	?	PUNCT	FS	_	14	punct	_	_

# sent_id = 645
# text = calling (1), (2), and (4) a ''robbins algebra'', the question then becomes:
1	calling	call	VERB	V	VerbForm=Ger	25	advcl	_	_
2	(	(	PUNCT	FB	_	3	punct	_	SpaceAfter=No
3	1	1	NUM	N	NumType=Card	1	nummod	_	SpaceAfter=No
4	)	)	PUNCT	FB	_	3	punct	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	1	punct	_	_
6	(	(	PUNCT	FB	_	7	punct	_	SpaceAfter=No
7	2	2	NUM	N	NumType=Card	1	nummod	_	SpaceAfter=No
8	)	)	PUNCT	FB	_	7	punct	_	SpaceAfter=No
9	,	,	PUNCT	FF	_	12	punct	_	_
10	and	and	CCONJ	CC	_	12	cc	_	_
11	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
12	4	4	NUM	N	NumType=Card	1	conj	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	12	punct	_	_
14	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	25	det	_	_
15	'	'	PUNCT	FB	_	17	punct	_	SpaceAfter=No
16	'	'	PUNCT	FB	_	15	punct	_	SpaceAfter=No
17	robbins	robbin	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	25	acl	_	_
18	algebra	algebra	DET	RI	Definite=Ind|Number=Sing|PronType=Art	25	det	_	SpaceAfter=No
19	'	'	X	X	_	18	dep	_	SpaceAfter=No
20	'	'	X	X	_	18	dep	_	SpaceAfter=No
21	,	,	PUNCT	FF	_	23	punct	_	_
22	the	the	DET	RD	Definite=Def|PronType=Art	23	det	_	_
23	question	question	NOUN	S	Number=Sing	25	nsubj	_	_
24	then	then	ADV	B	_	23	advmod	_	_
25	becomes	become	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	SpaceAfter=No
26	:	:	PUNCT	FC	_	25	punct	_	_

# sent_id = 646
# text = is every robbins algebra a boolean algebra?
1	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	cop	_	_
2	every	every	DET	DI	Number=Sing|PronType=Ind	3	det	_	_
3	robbins	robbin	NOUN	S	Number=Plur	0	root	_	_
4	algebra	algebra	ADP	E	_	7	case	_	_
5	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	7	det	_	_
6	boolean	boolean	ADJ	A	Degree=Pos	7	amod	_	_
7	algebra	algebra	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
8	?	?	PUNCT	FS	_	3	punct	_	_

# sent_id = 647
# text = this question (which came to be known as the robbins conjecture) remained open for decades, and became a favorite question of alfred tarski and his students.
1	this	this	DET	DD	Number=Sing|PronType=Dem	2	det	_	_
2	question	question	NOUN	S	Number=Sing	0	root	_	_
3	(	(	PUNCT	FB	_	5	punct	_	SpaceAfter=No
4	which	which	PRON	PR	PronType=Rel	5	nsubj	_	_
5	came	come	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	2	acl:relcl	_	_
6	to	to	PART	PART	_	8	mark	_	_
7	be	be	AUX	VA	VerbForm=Inf	8	aux:pass	_	_
8	known	know	VERB	V	Tense=Past|VerbForm=Part	5	xcomp	_	_
9	as	as	ADP	E	_	12	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	12	det	_	_
11	robbins	robbin	NOUN	S	Number=Plur	12	nmod	_	_
12	conjecture	conjecture	NOUN	S	Number=Sing	8	obl	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	2	punct	_	_
14	remained	remain	VERB	V	Tense=Past|VerbForm=Part	15	acl	_	_
15	open	open	NOUN	S	Gender=Masc|Number=Plur	2	nmod	_	_
16	for	for	ADP	E	_	17	case	_	_
17	decades	decade	NOUN	S	Number=Plur	15	nmod	_	SpaceAfter=No
18	,	,	PUNCT	FF	_	20	punct	_	_
19	and	and	CCONJ	CC	_	20	cc	_	_
20	became	become	VERB	V	Mood=Ind|Person=3|Tense=Past|VerbForm=Fin	15	conj	_	_
21	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	23	det	_	_
22	favorite	favorite	ADJ	A	Degree=Pos	23	amod	_	_
23	question	question	NOUN	S	Number=Sing	20	obj	_	_
24	of	of	ADP	E	_	26	case	_	_
25	alfred	alfr	NUM	N	NumType=Card	26	nummod	_	_
26	tarski	tarski	NOUN	S	Gender=Fem|Number=Sing	23	nmod	_	_
27	and	and	CCONJ	CC	_	29	cc	_	_
28	his	his	DET	AP	Poss=Yes|PronType=Prs	29	nmod:poss	_	_
29	students	student	NOUN	S	Number=Plur	26	conj	_	SpaceAfter=No
30	.	.	PUNCT	FS	_	2	punct	_	_

# sent_id = 648
# text = in 1996, william mccune at argonne national laboratory, building on earlier work by larry wos, steve winker, and bob veroff, answered robbins's question in the affirmative:
1	in	in	ADP	E	_	2	case	_	_
2	1996	1996	NUM	N	NumType=Card	5	obl	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	2	punct	_	_
4	william	willibe	PRON	PR	PronType=Rel	5	nsubj	_	_
5	mccune	mccune	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
6	at	at	ADP	E	_	9	case	_	_
7	argonne	argon	NUM	N	NumType=Card	9	nummod	_	_
8	national	national	ADJ	A	Degree=Pos	9	amod	_	_
9	laboratory	laboratory	NOUN	S	Number=Sing	5	obl	_	SpaceAfter=No
10	,	,	PUNCT	FF	_	5	punct	_	_
11	building	build	VERB	V	VerbForm=Ger	5	advcl	_	_
12	on	on	ADP	E	_	14	case	_	_
13	earlier	earlier	ADJ	A	Degree=Cmp	14	amod	_	_
14	work	work	NOUN	S	Number=Sing	11	obl	_	_
15	by	by	ADP	E	_	17	case	_	_
16	larry	larry	ADJ	A	Degree=Pos	17	amod	_	_
17	wos	wo	NOUN	S	Number=Plur	14	nmod	_	SpaceAfter=No
18	,	,	PUNCT	FF	_	20	punct	_	_
19	steve	steve	ADJ	A	Degree=Pos	20	amod	_	_
20	winker	winker	NOUN	S	Number=Sing	17	conj	_	SpaceAfter=No
21	,	,	PUNCT	FF	_	24	punct	_	_
22	and	and	CCONJ	CC	_	24	cc	_	_
23	bob	bob	ADJ	A	Degree=Pos	24	amod	_	_
24	veroff	veroff	NOUN	S	Number=Sing	17	conj	_	SpaceAfter=No
25	,	,	PUNCT	FF	_	17	punct	_	_
26	answered	answer	VERB	V	Tense=Past|VerbForm=Part	14	acl	_	_
27	robbins	robbin	NOUN	S	Number=Plur	29	nmod	_	SpaceAfter=No
28	's	's	PART	PART	_	27	case	_	_
29	question	question	NOUN	S	Number=Sing	26	obj	_	_
30	in	in	ADP	E	_	32	case	_	_
31	the	the	DET	RD	Definite=Def|PronType=Art	32	det	_	_
32	affirmative	affirmative	NOUN	S	Number=Sing	26	obl	_	SpaceAfter=No
33	:	:	PUNCT	FC	_	5	punct	_	_

# sent_id = 649
# text = every robbins algebra is a boolean algebra.
1	every	every	DET	DI	Number=Sing|PronType=Ind	2	det	_	_
2	robbins	robbin	NOUN	S	Number=Plur	7	nsubj	_	_
3	algebra	algebra	X	SW	_	2	nmod	_	_
4	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	cop	_	_
5	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	7	det	_	_
6	boolean	boolean	ADJ	A	Degree=Pos	7	amod	_	_
7	algebra	algebra	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	7	punct	_	_

# sent_id = 650
# text = crucial to mccune's proof was the automated reasoning program eqp he designed.
1	crucial	crucial	ADJ	A	Degree=Pos	0	root	_	_
2	to	to	PART	PART	_	3	mark	_	_
3	mccune	mccune	VERB	V	VerbForm=Inf	1	advcl	_	SpaceAfter=No
4	's	's	PART	PART	_	3	case	_	_
5	proof	proof	NOUN	S	Number=Sing	3	obj	_	_
6	was	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	9	cop	_	_
7	the	the	DET	RD	Definite=Def|PronType=Art	9	det	_	_
8	automated	automated	VERB	V	Tense=Past|VerbForm=Part	9	acl	_	_
9	reasoning	reason	VERB	V	Number=Sing|Tense=Pres|VerbForm=Part	3	advcl	_	_
10	program	program	NOUN	S	Number=Sing	13	obj	_	_
11	eqp	eqp	ADP	E	_	13	case	_	_
12	he	he	PRON	PE	Gender=Masc|Number=Sing|Person=3|PronType=Prs	13	nsubj	_	_
13	designed	designed	ADJ	A	Degree=Pos	9	amod	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	1	punct	_	_

# sent_id = 651
# text = for a simplification of mccune's proof, see dahn (1998).
1	for	for	ADP	E	_	3	case	_	_
2	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	3	det	_	_
3	simplification	simplification	NOUN	S	Number=Sing	9	obl	_	_
4	of	of	ADP	E	_	7	case	_	_
5	mccune	mccune	NOUN	S	Number=Sing	7	nmod	_	SpaceAfter=No
6	's	's	PART	PART	_	5	case	_	_
7	proof	proof	NOUN	S	Number=Sing	3	nmod	_	SpaceAfter=No
8	,	,	PUNCT	FF	_	3	punct	_	_
9	see	see	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
10	dahn	dahn	ADV	B	_	9	advmod	_	_
11	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
12	1998	1998	NUM	N	NumType=Card	9	nummod	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	9	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 652
# text = further work has been done for reducing the number of axioms;
1	further	further	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	work	work	NOUN	S	Number=Sing	5	nsubj:pass	_	_
3	has	have	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	been	be	AUX	VA	Tense=Past|VerbForm=Part	5	aux:pass	_	_
5	done	do	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
6	for	for	ADP	E	_	7	mark	_	_
7	reducing	reduce	VERB	V	VerbForm=Ger	5	advcl	_	_
8	the	the	DET	RD	Definite=Def|PronType=Art	9	det	_	_
9	number	number	NOUN	S	Number=Sing	7	obj	_	_
10	of	of	ADP	E	_	11	case	_	_
11	axioms	axiom	NOUN	S	Number=Plur	9	nmod	_	SpaceAfter=No
12	;	;	PUNCT	FC	_	5	punct	_	_

# sent_id = 653
# text = see minimal axioms for boolean algebra.
1	see	see	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
2	minimal	minimal	ADJ	A	Degree=Pos	3	amod	_	_
3	axioms	axiom	NOUN	S	Number=Plur	1	obj	_	_
4	for	for	ADP	E	_	6	case	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	algebra	algebra	NOUN	S	Number=Plur	1	obl	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n\n\n\s\n\n\n\n\s\n\n\n

# newpar
# sent_id = 654
# text = removing the requirement of existence of a unit from the axioms of boolean algebra yields "generalized boolean algebras".
1	removing	remove	VERB	V	VerbForm=Ger	0	root	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	requirement	requirement	NOUN	S	Number=Sing	1	obj	_	_
4	of	of	ADP	E	_	5	case	_	_
5	existence	existence	NOUN	S	Number=Sing	3	nmod	_	_
6	of	of	ADP	E	_	8	case	_	_
7	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	8	det	_	_
8	unit	unit	NOUN	S	Number=Sing	5	nmod	_	_
9	from	from	ADP	E	_	11	case	_	_
10	the	the	DET	RD	Definite=Def|PronType=Art	11	det	_	_
11	axioms	axiom	NOUN	S	Number=Plur	8	nmod	_	_
12	of	of	ADP	E	_	13	case	_	_
13	boolean	boolean	NOUN	S	Number=Sing	11	nmod	_	_
14	algebra	algebra	ADP	E	_	15	case	_	_
15	yields	yield	NOUN	S	Number=Plur	13	nmod	_	_
16	"	"	PUNCT	FB	_	17	punct	_	SpaceAfter=No
17	generalized	generalize	VERB	V	Tense=Past|VerbForm=Part	19	acl	_	_
18	boolean	boolean	ADJ	A	Degree=Pos	19	amod	_	_
19	algebras	algebra	NOUN	S	Number=Plur	1	obj	_	SpaceAfter=No
20	"	"	PUNCT	FB	_	1	punct	_	SpaceAfter=No
21	.	.	PUNCT	FS	_	1	punct	_	_

# sent_id = 655
# text = formally, a distributive lattice ''b'' is a generalized boolean lattice, if it has a smallest element 0 and for any elements ''a'' and ''b'' in ''b'' such that ''a'' ≤ ''b'', there exists an element ''x'' such that a ∧ x = 0 and a ∨ x = b. defining a ∖ b as the unique ''x'' such that (a ∧ b) ∨ x = a and (a ∧ b) ∧ x = 0, we say that the structure (b,∧,∨,∖,0) is a ''generalized boolean algebra'', while (b,∨,0) is a ''generalized boolean semilattice''.
1	formally	formally	ADV	B	_	14	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	5	det	_	_
4	distributive	distributive	ADJ	A	Degree=Pos	5	amod	_	_
5	lattice	lattice	NOUN	S	Number=Sing	14	nsubj	_	_
6	'	'	PART	PART	_	5	case	_	SpaceAfter=No
7	'b	'b	VERB	V	VerbForm=Inf	5	acl	_	SpaceAfter=No
8	'	'	PART	PART	_	7	case	_	SpaceAfter=No
9	'	'	PART	PART	_	8	case	_	_
10	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	cop	_	_
11	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	14	det	_	_
12	generalized	generalized	ADJ	A	Degree=Pos	14	amod	_	_
13	boolean	boolean	ADJ	A	Degree=Pos	14	amod	_	_
14	lattice	lattice	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
15	,	,	PUNCT	FF	_	14	punct	_	_
16	if	if	SCONJ	CS	_	18	mark	_	_
17	it	it	PRON	PE	Number=Sing|Person=3|PronType=Prs	18	nsubj	_	_
18	has	have	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	14	advcl	_	_
19	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	21	det	_	_
20	smallest	smallest	ADJ	A	Degree=Sup	21	amod	_	_
21	element	element	NOUN	S	Number=Sing	18	obj	_	_
22	0	0	NUM	N	NumType=Card	18	xcomp	_	_
23	and	and	CCONJ	CC	_	28	cc	_	_
24	for	for	ADP	E	_	28	case	_	_
25	any	any	DET	DI	PronType=Ind	26	det	_	_
26	elements	element	NOUN	S	Number=Plur	28	nmod	_	_
27	'	'	PART	PART	_	26	case	_	SpaceAfter=No
28	'a	'a	NOUN	S	Number=Plur	22	conj	_	SpaceAfter=No
29	'	'	PART	PART	_	28	case	_	SpaceAfter=No
30	'	'	PART	PART	_	28	case	_	_
31	and	and	CCONJ	CC	_	33	cc	_	_
32	'	'	PART	PART	_	31	case	_	SpaceAfter=No
33	'b	'b	VERB	V	VerbForm=Inf	28	conj	_	SpaceAfter=No
34	'	'	PART	PART	_	33	case	_	SpaceAfter=No
35	'	'	PART	PART	_	33	compound:prt	_	_
36	in	in	ADP	E	_	38	case	_	_
37	'	'	PART	PART	_	36	case	_	SpaceAfter=No
38	'b	'b	NOUN	S	Number=Sing	33	obl	_	SpaceAfter=No
39	'	'	PUNCT	FB	_	38	punct	_	SpaceAfter=No
40	'	'	PUNCT	FB	_	38	punct	_	_
41	such	such	DET	DD	PronType=Dem	42	det	_	_
42	that	that	PRON	PR	PronType=Rel	49	nsubj	_	_
43	'	'	PART	PART	_	42	case	_	SpaceAfter=No
44	'a	'a	NOUN	S	Number=Plur	49	nmod	_	SpaceAfter=No
45	'	'	PART	PART	_	44	case	_	SpaceAfter=No
46	'	'	PART	PART	_	44	case	_	_
47	≤	≤	SYM	X	_	49	nmod	_	_
48	'	'	PART	PART	_	47	case	_	SpaceAfter=No
49	'b	'b	VERB	V	VerbForm=Inf	33	ccomp	_	SpaceAfter=No
50	'	'	PUNCT	FB	_	49	punct	_	SpaceAfter=No
51	'	'	PUNCT	FB	_	49	punct	_	SpaceAfter=No
52	,	,	PUNCT	FF	_	49	punct	_	_
53	there	there	PRON	_	_	54	expl	_	_
54	exists	exist	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	49	conj	_	_
55	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	56	det	_	_
56	element	element	NOUN	S	Number=Sing	58	nsubj	_	_
57	'	'	PART	PART	_	56	case	_	SpaceAfter=No
58	'x	'x	VERB	V	VerbForm=Inf	54	ccomp	_	SpaceAfter=No
59	'	'	PUNCT	FB	_	58	punct	_	SpaceAfter=No
60	'	'	PUNCT	FB	_	58	punct	_	_
61	such	such	DET	DD	PronType=Dem	75	mark	_	_
62	that	that	SCONJ	CS	_	61	fixed	_	_
63	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	65	det	_	_
64	∧	∧	SYM	X	_	65	nmod	_	_
65	x	x	NOUN	S	Number=Sing	75	nsubj	_	_
66	=	=	SYM	X	_	65	nmod	_	_
67	0	0	NUM	N	NumType=Card	66	nummod	_	_
68	and	and	CCONJ	CC	_	71	cc	_	_
69	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	71	det	_	_
70	∨	∨	SYM	X	_	71	nmod	_	_
71	x	x	NOUN	S	Number=Sing	66	conj	_	_
72	=	=	SYM	X	_	66	nmod	_	_
73	b	b	X	X	_	72	flat	_	SpaceAfter=No
74	.	.	PUNCT	FS	_	72	punct	_	_
75	defining	defin	VERB	V	VerbForm=Ger	58	advcl	_	_
76	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	77	det	_	_
77	∖	∖	SYM	X	_	75	obj	_	_
78	b	b	X	X	_	77	nmod	_	_
79	as	as	ADP	E	_	83	case	_	_
80	the	the	DET	RD	Definite=Def|PronType=Art	81	det	_	_
81	unique	unique	NOUN	S	Number=Sing	83	nmod	_	_
82	'	'	PART	PART	_	81	case	_	SpaceAfter=No
83	'x	'x	NOUN	S	Number=Sing	75	nmod	_	SpaceAfter=No
84	'	'	PUNCT	FB	_	83	punct	_	SpaceAfter=No
85	'	'	PUNCT	FB	_	83	punct	_	_
86	such	such	DET	DD	PronType=Dem	87	det	_	_
87	that	that	PRON	PD	PronType=Dem	109	obj	_	_
88	(	(	PUNCT	FB	_	90	punct	_	SpaceAfter=No
89	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	90	det	_	_
90	∧	∧	SYM	X	_	109	obl	_	_
91	b	b	X	X	_	90	dep	_	SpaceAfter=No
92	)	)	PUNCT	FB	_	90	punct	_	_
93	∨	∨	SYM	X	_	94	nmod	_	_
94	x	x	NOUN	S	Number=Sing	90	conj	_	_
95	=	=	SYM	X	_	94	nmod	_	_
96	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	104	det	_	_
97	and	and	CCONJ	CC	_	100	cc	_	_
98	(	(	PUNCT	FB	_	100	punct	_	SpaceAfter=No
99	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	100	det	_	_
100	∧	∧	SYM	X	_	96	conj	_	_
101	b	b	X	X	_	100	dep	_	SpaceAfter=No
102	)	)	PUNCT	FB	_	100	punct	_	_
103	∧	∧	SYM	X	_	104	nmod	_	_
104	x	x	NOUN	S	Number=Sing	95	conj	_	_
105	=	=	SYM	X	_	104	nmod	_	_
106	0	0	NUM	N	NumType=Card	105	nummod	_	SpaceAfter=No
107	,	,	PUNCT	FF	_	90	punct	_	_
108	we	we	PRON	PE	Number=Plur|Person=1|PronType=Prs	109	nsubj	_	_
109	say	say	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	75	ccomp	_	_
110	that	that	SCONJ	CS	_	123	mark	_	_
111	the	the	DET	RD	Definite=Def|PronType=Art	112	det	_	_
112	structure	structure	NOUN	S	Number=Sing	123	nsubj:pass	_	_
113	(	(	PUNCT	FB	_	115	punct	_	SpaceAfter=No
114	b,∧,∨	b,∧,∨	NOUN	S	Number=Sing	115	nmod	_	SpaceAfter=No
115	,∖	,∖	NOUN	S	Number=Sing	112	nmod	_	SpaceAfter=No
116	,	,	PUNCT	FF	_	115	punct	_	SpaceAfter=No
117	0	0	NUM	N	NumType=Card	115	nummod	_	SpaceAfter=No
118	)	)	PUNCT	FB	_	115	punct	_	_
119	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	123	aux:pass	_	_
120	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	123	det	_	_
121	'	'	PART	PART	_	123	mark	_	SpaceAfter=No
122	'	'	PART	PART	_	123	mark	_	SpaceAfter=No
123	generalized	generalize	VERB	V	Tense=Past|VerbForm=Part	109	ccomp	_	_
124	boolean	boolean	ADJ	A	Degree=Pos	125	amod	_	_
125	algebra	algebra	NOUN	S	Number=Plur	123	obj	_	SpaceAfter=No
126	'	'	PART	PART	_	125	case	_	SpaceAfter=No
127	'	'	PART	PART	_	125	case	_	SpaceAfter=No
128	,	,	PUNCT	FF	_	123	punct	_	_
129	while	while	SCONJ	CS	_	141	mark	_	_
130	(	(	PUNCT	FB	_	131	punct	_	SpaceAfter=No
131	b,∨	b,∨	NOUN	S	Number=Sing	129	nmod	_	SpaceAfter=No
132	,	,	PUNCT	FF	_	131	punct	_	SpaceAfter=No
133	0	0	NUM	N	NumType=Card	131	nummod	_	SpaceAfter=No
134	)	)	PUNCT	FB	_	131	punct	_	_
135	is	be	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	141	cop	_	_
136	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	141	det	_	_
137	'	'	PUNCT	FB	_	141	punct	_	SpaceAfter=No
138	'	'	PART	PART	_	137	case	_	SpaceAfter=No
139	generalized	generalize	VERB	V	Tense=Past|VerbForm=Part	141	acl	_	_
140	boolean	boolean	ADJ	A	Degree=Pos	141	amod	_	_
141	semilattice	semilattice	NOUN	S	Number=Sing	123	advcl	_	SpaceAfter=No
142	'	'	PUNCT	FB	_	141	punct	_	SpaceAfter=No
143	'	'	PUNCT	FB	_	141	punct	_	SpaceAfter=No
144	.	.	PUNCT	FS	_	123	punct	_	_

# sent_id = 656
# text = generalized boolean lattices are exactly the ideals of boolean lattices.
1	generalized	generalize	VERB	V	Tense=Past|VerbForm=Part	3	acl	_	_
2	boolean	boolean	ADJ	A	Degree=Pos	3	amod	_	_
3	lattices	lattice	NOUN	S	Number=Plur	7	nsubj	_	_
4	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	7	cop	_	_
5	exactly	exactly	ADV	B	_	7	advmod	_	_
6	the	the	DET	RD	Definite=Def|PronType=Art	7	det	_	_
7	ideals	ideal	NOUN	S	Number=Plur	0	root	_	_
8	of	of	ADP	E	_	10	case	_	_
9	boolean	boolean	ADJ	A	Degree=Pos	10	amod	_	_
10	lattices	lattice	NOUN	S	Number=Plur	7	nmod	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	7	punct	_	SpacesAfter=\n\n

# newpar
# sent_id = 657
# text = a structure that satisfies all axioms for boolean algebras except the two distributivity axioms is called an orthocomplemented lattice.
1	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	2	det	_	_
2	structure	structure	NOUN	S	Number=Sing	16	nsubj:pass	_	_
3	that	that	PRON	PR	PronType=Rel	4	nsubj	_	_
4	satisfies	satisfy	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	acl:relcl	_	_
5	all	all	DET	T	PronType=Tot	6	det	_	_
6	axioms	axiom	NOUN	S	Number=Plur	4	obj	_	_
7	for	for	ADP	E	_	9	case	_	_
8	boolean	boolean	ADJ	A	Degree=Pos	9	amod	_	_
9	algebras	algebra	NOUN	S	Number=Plur	6	nmod	_	_
10	except	except	ADP	E	_	14	case	_	_
11	the	the	DET	RD	Definite=Def|PronType=Art	14	det	_	_
12	two	two	NUM	N	NumType=Card	14	nummod	_	_
13	distributivity	distributivity	NOUN	S	Number=Sing	14	nmod	_	_
14	axioms	axiom	NOUN	S	Number=Plur	4	obl	_	_
15	is	be	AUX	VA	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	16	aux:pass	_	_
16	called	call	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
17	an	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	19	det	_	_
18	orthocomplemented	orthocomplement	ADJ	A	Degree=Pos	19	amod	_	_
19	lattice	lattice	NOUN	S	Number=Sing	16	xcomp	_	SpaceAfter=No
20	.	.	PUNCT	FS	_	16	punct	_	_

# sent_id = 658
# text = orthocomplemented lattices arise naturally in quantum logic as lattices of closed subspaces for separable hilbert spaces.
1	orthocomplemented	orthocomplement	VERB	V	Tense=Past|VerbForm=Part	2	acl	_	_
2	lattices	lattice	NOUN	S	Number=Plur	3	nsubj	_	_
3	arise	arise	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
4	naturally	naturally	ADV	B	_	3	advmod	_	_
5	in	in	ADP	E	_	6	case	_	_
6	quantum	quantum	PRON	PE	Number=Plur|Person=3|PronType=Prs	3	obl	_	_
7	logic	logic	ADJ	A	Degree=Pos	6	amod	_	_
8	as	as	ADP	E	_	9	case	_	_
9	lattices	lattice	NOUN	S	Number=Plur	3	obl	_	_
10	of	of	ADP	E	_	12	case	_	_
11	closed	closed	ADJ	A	Degree=Pos	12	amod	_	_
12	subspaces	subspace	NOUN	S	Number=Plur	9	nmod	_	_
13	for	for	ADP	E	_	16	case	_	_
14	separable	separable	ADJ	A	Degree=Pos	16	amod	_	_
15	hilbert	hilbert	ADJ	A	Degree=Sup	16	amod	_	_
16	spaces	space	NOUN	S	Number=Plur	12	nmod	_	SpaceAfter=No
17	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n\s\n\s\n\s

# newpar
# sent_id = 659
# text = *. see section 2.5. * * *.
1	*	*	PUNCT	FF	_	3	punct	_	SpaceAfter=No
2	.	.	PUNCT	FS	_	3	punct	_	_
3	see	see	VERB	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	0	root	_	_
4	section	section	NOUN	S	Number=Sing	3	obj	_	_
5	2.5	2.5	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n
7	*	*	PUNCT	FF	_	4	punct	_	SpacesAfter=\n
8	*	*	PUNCT	FF	_	4	punct	_	SpacesAfter=\n
9	*	*	PUNCT	FF	_	4	punct	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	3	punct	_	_

# sent_id = 660
# text = see chapter 2.
1	see	see	VERB	V	Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin	0	root	_	_
2	chapter	chapter	NOUN	S	Number=Sing	1	obj	_	_
3	2	2	NUM	N	NumType=Card	2	nummod	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 661
# text = *. * *.
1	*	*	PUNCT	FF	_	0	root	_	SpaceAfter=No
2	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n
3	*	*	PUNCT	FF	_	1	punct	_	SpacesAfter=\n
4	*	*	PUNCT	FF	_	1	punct	_	SpaceAfter=No
5	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n

# sent_id = 662
# text = *. *. * * *.
1	*	*	PUNCT	FF	_	3	punct	_	SpaceAfter=No
2	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n
3	*	*	PUNCT	FF	_	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	5	punct	_	SpacesAfter=\n
5	*	*	PUNCT	FF	_	3	punct	_	SpacesAfter=\n
6	*	*	PUNCT	FF	_	5	punct	_	SpacesAfter=\n
7	*	*	PUNCT	FF	_	6	punct	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	3	punct	_	SpacesAfter=\n

# sent_id = 663
# text = *. *. *. in 3 volumes.
1	*	*	PUNCT	FF	_	9	punct	_	SpaceAfter=No
2	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n
3	*	*	PUNCT	FF	_	1	punct	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	1	punct	_	SpacesAfter=\n
5	*	*	PUNCT	FF	_	1	punct	_	SpaceAfter=No
6	.	.	PUNCT	FS	_	1	punct	_	_
7	in	in	ADP	E	_	9	case	_	_
8	3	3	NUM	N	NumType=Card	9	nummod	_	_
9	volumes	volume	NOUN	S	Number=Plur	0	root	_	SpaceAfter=No
10	.	.	PUNCT	FS	_	9	punct	_	_

# sent_id = 664
# text = (vol.1:, vol.2:, vol.3:) *. *. *. reprinted by dover publications, 1979.
1	(	(	PUNCT	FB	_	4	punct	_	SpaceAfter=No
2	vol.1:	vol.1:	PUNCT	FC	_	4	punct	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	4	punct	_	_
4	vol.2	vol.2	NUM	N	NumType=Card	16	nummod	_	SpaceAfter=No
5	:	:	PUNCT	FC	_	4	punct	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	4	punct	_	_
7	vol.3	vol.3	NUM	N	NumType=Card	4	nummod	_	SpaceAfter=No
8	:	:	PUNCT	FC	_	4	punct	_	SpaceAfter=No
9	)	)	PUNCT	FB	_	4	punct	_	SpacesAfter=\n
10	*	*	PUNCT	FF	_	4	punct	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n
12	*	*	PUNCT	FF	_	4	punct	_	SpaceAfter=No
13	.	.	PUNCT	FS	_	4	punct	_	SpacesAfter=\n
14	*	*	PUNCT	FF	_	4	punct	_	SpaceAfter=No
15	.	.	PUNCT	FS	_	4	punct	_	_
16	reprinted	reprint	VERB	V	Tense=Past|VerbForm=Part	0	root	_	_
17	by	by	ADP	E	_	19	case	_	_
18	dover	dover	ADP	E	_	19	case	_	_
19	publications	publication	NOUN	S	Number=Plur	16	obl	_	SpaceAfter=No
20	,	,	PUNCT	FF	_	16	punct	_	_
21	1979	1979	NUM	N	NumType=Card	16	nummod	_	SpaceAfter=No
22	.	.	PUNCT	FS	_	16	punct	_	SpacesAfter=\n

# sent_id = 665
# text = * * * * stanford encyclopedia of philosophy:
1	*	*	PUNCT	FF	_	6	punct	_	SpacesAfter=\n
2	*	*	PUNCT	FF	_	6	punct	_	SpacesAfter=\n\s
3	*	*	PUNCT	FF	_	6	punct	_	SpacesAfter=\s\n
4	*	*	PUNCT	FF	_	6	punct	_	_
5	stanford	stanford	ADJ	NO	Degree=Pos|NumType=Ord	6	amod	_	_
6	encyclopedia	encyclopedium	NOUN	S	Number=Sing	0	root	_	_
7	of	of	ADP	E	_	8	case	_	_
8	philosophy	philosophy	NOUN	S	Number=Sing	6	nmod	_	SpaceAfter=No
9	:	:	PUNCT	FC	_	6	punct	_	_

# sent_id = 666
# text = " the mathematics of boolean algebra," by j.
1	"	"	PUNCT	FB	_	3	punct	_	_
2	the	the	DET	RD	Definite=Def|PronType=Art	3	det	_	_
3	mathematics	mathematics	NOUN	S	Number=Sing	0	root	_	_
4	of	of	ADP	E	_	6	case	_	_
5	boolean	boolean	ADJ	A	Degree=Pos	6	amod	_	_
6	algebra	algebra	NOUN	S	Number=Plur	3	nmod	_	SpaceAfter=No
7	,	,	PUNCT	FF	_	3	punct	_	SpaceAfter=No
8	"	"	PUNCT	FB	_	3	punct	_	_
9	by	by	ADP	E	_	10	case	_	_
10	j	j	PROPN	SP	_	3	nmod	_	SpaceAfter=No
11	.	.	PUNCT	FS	_	3	punct	_	_

# sent_id = 667
# text = donald monk.
1	donald	donald	NOUN	S	Number=Sing	2	nmod	_	_
2	monk	monk	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
3	.	.	PUNCT	FS	_	2	punct	_	SpacesAfter=\n

# sent_id = 668
# text = * mccune w., 1997.
1	*	*	PUNCT	FF	_	3	punct	_	_
2	mccune	mccuno	ADJ	A	Degree=Pos	3	amod	_	_
3	w	w	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	3	punct	_	SpaceAfter=No
5	,	,	PUNCT	FF	_	3	punct	_	_
6	1997	1997	NUM	N	NumType=Card	3	nummod	_	SpaceAfter=No
7	.	.	PUNCT	FS	_	3	punct	_	_

# sent_id = 669
# text = '' robbins algebras are boolean'' jar 19(3), 263—276 * "boolean algebra" by eric w. weisstein, wolfram demonstrations project, 2007.
1	'	'	PART	PART	_	9	mark	_	SpaceAfter=No
2	'	'	PART	PART	_	9	mark	_	_
3	robbins	robbin	NOUN	S	Number=Plur	4	nmod	_	_
4	algebras	algebra	NOUN	S	Number=Plur	9	nsubj	_	_
5	are	be	AUX	V	Mood=Ind|Number=Plur|Tense=Pres|VerbForm=Fin	9	cop	_	_
6	boolean	boolean	ADJ	A	Degree=Pos	9	amod	_	SpaceAfter=No
7	'	'	PART	PART	_	6	case	_	SpaceAfter=No
8	'	'	PART	PART	_	6	case	_	_
9	jar	jar	VERB	V	VerbForm=Inf	0	root	_	_
10	19	19	NUM	N	NumType=Card	9	obj	_	SpaceAfter=No
11	(	(	PUNCT	FB	_	12	punct	_	SpaceAfter=No
12	3	3	NUM	N	NumType=Card	10	nummod	_	SpaceAfter=No
13	)	)	PUNCT	FB	_	12	punct	_	SpaceAfter=No
14	,	,	PUNCT	FF	_	10	punct	_	_
15	263	263	NUM	N	NumType=Card	10	nummod	_	SpaceAfter=No
16	—276	—276	NUM	N	NumType=Card	15	nummod	_	SpacesAfter=\n
17	*	*	PUNCT	FF	_	15	punct	_	SpacesAfter=\s\s
18	"	"	PUNCT	FB	_	20	punct	_	SpaceAfter=No
19	boolean	boolean	ADJ	A	Degree=Pos	20	amod	_	_
20	algebra	algebra	NOUN	S	Number=Sing	10	nmod	_	SpaceAfter=No
21	"	"	PUNCT	FB	_	20	punct	_	_
22	by	by	ADP	E	_	24	case	_	_
23	eric	eric	ADJ	A	Degree=Pos	24	amod	_	_
24	w	w	NOUN	S	Number=Sing	20	nmod	_	SpaceAfter=No
25	.	.	PUNCT	FS	_	20	punct	_	_
26	weisstein	weisstein	NOUN	S	Number=Sing	10	conj	_	SpaceAfter=No
27	,	,	PUNCT	FF	_	26	punct	_	_
28	wolfram	wolfrbe	PRON	PR	PronType=Rel	29	nsubj	_	_
29	demonstrations	demonstration	VERB	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	26	acl:relcl	_	_
30	project	project	NOUN	S	Number=Sing	29	obj	_	SpaceAfter=No
31	,	,	PUNCT	FF	_	30	punct	_	_
32	2007	2007	NUM	N	NumType=Card	30	nummod	_	SpaceAfter=No
33	.	.	PUNCT	FS	_	9	punct	_	SpacesAfter=\n

# sent_id = 670
# text = * burris, stanley n.;
1	*	*	PUNCT	FF	_	4	punct	_	_
2	burris	burris	AUX	V	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	cop	_	SpaceAfter=No
3	,	,	PUNCT	FF	_	2	punct	_	_
4	stanley	stanley	NOUN	S	Number=Sing	0	root	_	_
5	n.;	n.;	PUNCT	FC	_	4	punct	_	_

# sent_id = 671
# text = sankappanavar, h. p., 1981.
1	sankappanavar	sankappanavar	ADV	B	_	5	advmod	_	SpaceAfter=No
2	,	,	PUNCT	FF	_	1	punct	_	_
3	h	have	ADJ	A	Degree=Pos	5	amod	_	SpaceAfter=No
4	.	.	PUNCT	FS	_	5	punct	_	_
5	p.	page	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
6	,	,	PUNCT	FF	_	5	punct	_	_
7	1981	1981	NUM	N	NumType=Card	5	nummod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	5	punct	_	_

# sent_id = 672
# text = '' a course in universal algebra.'' springer-verlag.
1	'	'	PART	PART	_	4	case	_	SpaceAfter=No
2	'	'	PUNCT	FF	_	1	punct	_	_
3	a	a	DET	RI	Definite=Ind|Number=Sing|PronType=Art	4	det	_	_
4	course	course	NOUN	S	Number=Sing	13	nmod	_	_
5	in	in	ADP	E	_	7	case	_	_
6	universal	universal	ADJ	A	Degree=Pos	7	amod	_	_
7	algebra	algebra	NOUN	S	Number=Plur	4	nmod	_	SpaceAfter=No
8	.	.	PUNCT	FS	_	4	punct	_	SpaceAfter=No
9	'	'	PART	PART	_	4	case	_	SpaceAfter=No
10	'	'	PART	PART	_	13	case	_	SpacesAfter=\s\s
11	springer	springer	ADJ	A	Degree=Cmp	13	amod	_	SpaceAfter=No
12	-	-	PUNCT	FF	_	13	punct	_	SpaceAfter=No
13	verlag	verlag	NOUN	S	Number=Sing	0	root	_	SpaceAfter=No
14	.	.	PUNCT	FS	_	13	punct	_	_

# sent_id = 673
# text = . *
1	.	.	PUNCT	FS	_	0	root	_	SpacesAfter=\n
2	*	*	PUNCT	FF	_	1	punct	_	SpacesAfter=\n

